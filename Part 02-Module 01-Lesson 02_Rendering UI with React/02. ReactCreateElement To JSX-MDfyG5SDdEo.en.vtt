WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.040
Let's recreate our list of people using JSX instead of createElement.

00:00:05.040 --> 00:00:06.599
As I mentioned before,

00:00:06.599 --> 00:00:09.300
JSX looks a lot like HTML.

00:00:09.300 --> 00:00:15.405
So, we're going to replace these createElement calls with something that looks like HTML.

00:00:15.404 --> 00:00:19.364
Now, what are these angle brackets doing in our JavaScript?

00:00:19.364 --> 00:00:22.994
That's the reaction that a lot of people have the first time that they see JSX.

00:00:22.995 --> 00:00:24.795
So if you're feeling that way right now,

00:00:24.795 --> 00:00:26.415
don't worry, that's really common.

00:00:26.414 --> 00:00:29.219
But look at how much syntax we just got rid of.

00:00:29.219 --> 00:00:31.785
Let's put a list item in here.

00:00:31.785 --> 00:00:35.829
So we want the name of the first person in the people array.

00:00:35.829 --> 00:00:43.189
So we can say, peoplesubzero.name and we'll save that and see what we get.

00:00:43.189 --> 00:00:45.454
Well, that's not very helpful,

00:00:45.454 --> 00:00:48.545
it just gives us the exact same code that we wrote.

00:00:48.545 --> 00:00:50.210
What we wanted instead,

00:00:50.210 --> 00:00:53.210
we wanted to evaluate this expression but what JSX did was

00:00:53.210 --> 00:00:57.020
it just pass all the characters right on through and put it in the page.

00:00:57.020 --> 00:01:00.950
So whenever we want JSX to evaluate some JavaScript for us,

00:01:00.950 --> 00:01:04.730
we have to wrap that piece of JavaScript in curly braces.

00:01:04.730 --> 00:01:07.790
And this could be any JavaScript expression that you want.

00:01:07.790 --> 00:01:09.755
It can be some math,

00:01:09.754 --> 00:01:12.399
it can be a ternary,

00:01:12.400 --> 00:01:17.580
basically any valid JavaScript expression inside these curly braces.

00:01:17.579 --> 00:01:19.950
Well, what about the map that we had earlier?

00:01:19.950 --> 00:01:24.359
Could we do that inside some curly braces? Well, let's give it a shot.

00:01:24.359 --> 00:01:27.540
So we can say, people.map,

00:01:27.540 --> 00:01:32.340
and for each item or for each person inside the people array,

00:01:32.340 --> 00:01:36.359
what we want to have is a list item as person.name.

00:01:36.359 --> 00:01:39.015
So we're starting out in JSX,

00:01:39.015 --> 00:01:42.165
we go into JavaScript with this curly brace,

00:01:42.165 --> 00:01:48.860
evaluate people.map, the return value of the map function is some more JSX.

00:01:48.859 --> 00:01:53.185
And in there, we go back into JavaScript and say, person.name.

00:01:53.185 --> 00:01:55.870
So we started in JSX, into JavaScript,

00:01:55.870 --> 00:01:58.719
back into JSX, back into JavaScript.

00:01:58.719 --> 00:02:02.859
But the whole thing flows together pretty nicely and it's a lot more

00:02:02.859 --> 00:02:07.359
concise than all of those nested createElement calls that we had earlier.

00:02:07.359 --> 00:02:11.439
Now we said earlier that whenever we give React an array,

00:02:11.439 --> 00:02:15.400
we needed a unique key prop on all of this shared elements.

00:02:15.400 --> 00:02:17.680
We're doing that exact same thing here,

00:02:17.680 --> 00:02:19.554
let's check in the browser console.

00:02:19.554 --> 00:02:22.778
And sure enough, our warning is back about the key prop.

00:02:22.778 --> 00:02:27.685
So we need to give each one of these list item elements a unique key prop.

00:02:27.685 --> 00:02:29.908
The way that we do that in JSX,

00:02:29.908 --> 00:02:32.364
looks a lot like HTML attributes.

00:02:32.365 --> 00:02:34.915
So I could say, key equals,

00:02:34.914 --> 00:02:41.574
I'll put up a new JavaScript expression and use person.name as the value of the key prop.

00:02:41.574 --> 00:02:44.364
Sure enough we can save and the warning goes away.

00:02:44.365 --> 00:02:46.344
Just to be totally clear,

00:02:46.344 --> 00:02:49.389
let's take a look at the source code here

00:02:49.389 --> 00:02:53.464
and see what this code that we just wrote compiles down to.

00:02:53.465 --> 00:02:57.680
So we can see here in our source viewer that we're actually

00:02:57.680 --> 00:03:02.314
still using createElement calls to create our elements.

00:03:02.314 --> 00:03:07.159
So even though we still get to use JSX in our editor which is nice and concise,

00:03:07.159 --> 00:03:12.930
this code all compiles down to real JavaScript using createElement.

