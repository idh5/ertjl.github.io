WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.075
If you remember back to the final app that we're building,

00:00:03.075 --> 00:00:05.195
there are five metrics that we're going to be tracking.

00:00:05.195 --> 00:00:08.330
Running, biking, swimming, sleeping, and eating.

00:00:08.330 --> 00:00:12.134
So what we're going to do is inside of our helpers.js file,

00:00:12.134 --> 00:00:13.775
let's create a function here,

00:00:13.775 --> 00:00:17.140
and we will call it, getMetricMetaInfo.

00:00:17.140 --> 00:00:20.818
And what this is going to do is we're going to have an object here,

00:00:20.818 --> 00:00:23.000
and this object is going to have five properties which

00:00:23.000 --> 00:00:26.164
correlate with the specific metrics that we're tracking.

00:00:26.164 --> 00:00:30.000
So we'll have run, bike,

00:00:30.000 --> 00:00:34.060
swim, sleep, as well as eat.

00:00:34.060 --> 00:00:37.455
And what these objects are going to contain is they're going to contain

00:00:37.454 --> 00:00:42.195
any information that's going to help us build the UI for our specific form.

00:00:42.195 --> 00:00:46.905
So for example, here there is specific things about run that we need to know.

00:00:46.905 --> 00:00:49.094
We need to know the display name,

00:00:49.094 --> 00:00:50.699
which is just going to be 'Run'.

00:00:50.700 --> 00:00:54.828
The max miles you can run in a day we'll just say, 50.

00:00:54.828 --> 00:00:59.280
Unit, which we will say is going to be 'miles' the step.

00:00:59.280 --> 00:01:02.670
So when we have our form when the user clicks on the button,

00:01:02.670 --> 00:01:05.700
how much we're going to increment this specific count.

00:01:05.700 --> 00:01:07.665
That will just be set to 1.

00:01:07.665 --> 00:01:09.859
Type, we're going to say 'steppers'.

00:01:09.859 --> 00:01:12.269
So in our UI for the form, if you remember,

00:01:12.269 --> 00:01:14.706
there are buttons which we are calling,

00:01:14.706 --> 00:01:17.594
steppers, and then there's also a slider,

00:01:17.594 --> 00:01:21.224
which we will use for sleeping and eating.

00:01:21.224 --> 00:01:22.739
And then the last one,

00:01:22.739 --> 00:01:25.045
we're going to say, getIcon.

00:01:25.045 --> 00:01:30.340
And so this is going to do is whenever we invoke the getIcon method here,

00:01:30.340 --> 00:01:34.180
what we want to get back is the icon for this specific metric.

00:01:34.180 --> 00:01:36.830
So what we need to do is at the top,

00:01:36.829 --> 00:01:40.030
let's go ahead and import a few things.

00:01:40.030 --> 00:01:43.480
We will import 'react' because we're going to be using JSX.

00:01:43.480 --> 00:01:46.895
We will import 'View' from react-native,

00:01:46.894 --> 00:01:55.824
and then we are going to import a few different icons here from '@expo/vector-icons'.

00:01:55.825 --> 00:01:58.255
And there are three different ones we want,

00:01:58.254 --> 00:02:00.170
we want the, FontAwesome.

00:02:00.170 --> 00:02:02.195
We also want, MaterialIcons.

00:02:02.194 --> 00:02:06.614
And then lastly, MaterialCommunityIcons.

00:02:06.614 --> 00:02:09.254
And then we will also import,

00:02:09.254 --> 00:02:12.250
'white' from our colors file.

00:02:12.250 --> 00:02:14.650
So now, inside of getIcon,

00:02:14.650 --> 00:02:17.745
what we want to do is we want to return a View.

00:02:17.745 --> 00:02:20.610
We're eventually going to style these, but not right now.

00:02:20.610 --> 00:02:22.090
And then inside of here,

00:02:22.090 --> 00:02:24.550
we are going to use the MaterialIcons.

00:02:24.550 --> 00:02:28.135
Name is going to be, 'directions-run'.

00:02:28.134 --> 00:02:31.399
Color, it's eventually going to be white, but right now,

00:02:31.400 --> 00:02:32.650
let's just go ahead and we'll say,

00:02:32.650 --> 00:02:35.013
'black' so that we can see it.

00:02:35.013 --> 00:02:39.170
And then we'll say the size is going to be 35.

00:02:39.169 --> 00:02:44.419
And now what we need to do is we need to do this for every single metric.

00:02:44.419 --> 00:02:46.879
So what I'm going to do is just copy and paste here,

00:02:46.879 --> 00:02:50.240
and then we will modify them afterwards.

00:02:50.240 --> 00:02:54.055
So 'Bike', displayName is going to be 'Bike'.

00:02:54.055 --> 00:02:55.879
Max is going to be 100.

00:02:55.879 --> 00:02:58.129
Step is still 1, 'steppers',

00:02:58.129 --> 00:03:01.879
and then instead of MaterialIcons,

00:03:01.879 --> 00:03:05.569
we are going to use 'MaterialCommunityIcons".

00:03:05.569 --> 00:03:08.090
The name of this icon is going to be 'bike',

00:03:08.090 --> 00:03:10.175
then we will keep it black for now.

00:03:10.175 --> 00:03:14.105
Swim is going to be very similar.

00:03:14.104 --> 00:03:21.913
Max is going to be 9900 because our unit here is going to be in meters.

00:03:21.913 --> 00:03:23.419
Step is going to be one 100.

00:03:23.419 --> 00:03:29.089
And then down here, what we're going to do is we will use the MaterialCommunityIcons,

00:03:29.090 --> 00:03:34.545
but the name of this is now going to be 'swim'.

00:03:34.544 --> 00:03:35.734
And the last two here,

00:03:35.735 --> 00:03:37.653
we have 'sleep ',

00:03:37.652 --> 00:03:39.509
which again, is going to be similar.

00:03:39.509 --> 00:03:40.804
The name is going to be 'Sleep'.

00:03:40.805 --> 00:03:43.865
Max is obviously 24.

00:03:43.865 --> 00:03:45.725
Unit is going to be 'hours'.

00:03:45.724 --> 00:03:48.349
Instead of steppers, this is going to be a 'slider'.

00:03:48.349 --> 00:03:52.305
And then, this is where FontAwesome is going to come in.

00:03:52.305 --> 00:03:55.325
And we will say the name is going to be 'bed'.

00:03:55.324 --> 00:03:59.125
And again, this is just a icon from FontAwesome.

00:03:59.125 --> 00:04:03.879
And then lastly, we have 'eat' with display name of 'Eat'.

00:04:03.879 --> 00:04:07.969
A max of 10 because this is going to be from 1-10.

00:04:07.969 --> 00:04:10.930
Unit will be a 'rating', 'slider'.

00:04:10.930 --> 00:04:12.730
And then lastly, again,

00:04:12.729 --> 00:04:16.372
we're going to have MaterialCommunityIcons,

00:04:16.372 --> 00:04:20.139
with the name being 'food'. All right.

00:04:20.139 --> 00:04:27.375
So now what we have is we have this giant object here that we're calling, info.

00:04:27.375 --> 00:04:33.610
And then what I want to do is if I invoke getMetricaInfo and I don't pass an argument,

00:04:33.610 --> 00:04:36.884
then what I want to do is just return this whole object.

00:04:36.884 --> 00:04:39.137
But if I do pass it, an argument,

00:04:39.137 --> 00:04:43.019
specifically the metric, what I want to do is return just that metric.

00:04:43.019 --> 00:04:46.194
And on here, what we're going to do is we will say if

00:04:46.194 --> 00:04:51.615
metric is undefined or if its type is undefined,

00:04:51.615 --> 00:04:55.420
then what we want to return is just the info object.

00:04:55.420 --> 00:04:57.086
And if it isn't,

00:04:57.086 --> 00:05:01.170
then let's go ahead and return info at that specific metric.

