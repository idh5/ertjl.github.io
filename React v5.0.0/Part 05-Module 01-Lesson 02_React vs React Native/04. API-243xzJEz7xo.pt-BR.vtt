WEBVTT
Kind: captions
Language: pt-BR

00:00:00.567 --> 00:00:04.200
Dentro do nosso arquivo
AddEntry.js,

00:00:04.900 --> 00:00:10.267
temos este método "reset"
e este método "submit".

00:00:10.767 --> 00:00:12.767
Perceba que temos notas aqui

00:00:12.800 --> 00:00:15.100
sobre o que faremos
em cada um dos métodos,

00:00:15.133 --> 00:00:18.433
e uma delas é
"salvar para o banco de dados".

00:00:18.466 --> 00:00:21.067
Temos esta nota aqui e aqui.

00:00:21.100 --> 00:00:22.667
"DB" está entre aspas

00:00:22.700 --> 00:00:25.800
porque nós usaremos
AsyncStorage,

00:00:25.833 --> 00:00:29.133
nosso componente React Native
de armazenamento local,

00:00:29.167 --> 00:00:32.167
para fingir
que temos um banco de dados.

00:00:32.200 --> 00:00:36.867
Neste vídeo, vamos montar
nosso arquivo api.js,

00:00:36.900 --> 00:00:41.167
para podermos atualizar
as linhas 70 e 81.

00:00:41.200 --> 00:00:44.133
Dentro da pasta "utils",

00:00:44.166 --> 00:00:47.467
vamos criar o arquivo api.js.

00:00:47.500 --> 00:00:49.800
Aqui, a primeira coisa
de que precisaremos,

00:00:49.833 --> 00:00:53.067
como acabei de falar,
será "AsyncStorage",

00:00:53.100 --> 00:00:56.100
que importaremos
de "react-native".

00:00:56.133 --> 00:00:58.833
E outra coisa
que importaremos

00:00:58.866 --> 00:01:01.500
é isto aqui:

00:01:01.533 --> 00:01:03.500
nosso
"CALENDAR_STORAGE_KEY",

00:01:03.533 --> 00:01:07.800
que é como vamos persistir
os dados

00:01:07.833 --> 00:01:09.967
dentro de "AsyncStorage".

00:01:10.700 --> 00:01:16.668
Vamos importar isso
de "./_calendar".

00:01:16.701 --> 00:01:19.667
E, agora,
teremos dois métodos...

00:01:19.700 --> 00:01:24.433
ou duas funções. A primeira,
chamaremos de "submitEntry".

00:01:24.467 --> 00:01:28.600
A segunda, "removeEntry".

00:01:28.633 --> 00:01:30.867
Temos "submit", "remove",

00:01:30.900 --> 00:01:33.267
e, aqui, ao submeter,

00:01:33.300 --> 00:01:36.300
chamaremos a função "submit",
que estamos fazendo,

00:01:36.333 --> 00:01:39.767
e, mais abaixo,
chamaremos "remove".

00:01:39.800 --> 00:01:41.500
Comecemos por "submit'.

00:01:41.533 --> 00:01:43.500
O que passaremos

00:01:43.533 --> 00:01:48.233
é um objeto que contém
uma "entry" e uma "key".

00:01:48.267 --> 00:01:53.033
Então, chamaremos
"AsyncStorage.mergeItem".

00:01:53.067 --> 00:01:56.433
Depois, passaremos
"CALENDAR_STORAGE_KEY",

00:01:56.466 --> 00:01:58.967
que será mesclado...

00:01:59.000 --> 00:02:04.033
com uma versão string
deste objeto,

00:02:04.067 --> 00:02:07.667
que tem "key"
como nome da propriedade

00:02:07.700 --> 00:02:10.133
e "entry" como valor.

00:02:10.166 --> 00:02:13.633
Portanto, estamos submetendo
um novo registro diário.

00:02:13.667 --> 00:02:18.033
Queremos pegar tal submissão
e adicioná-la à nossa "DB",

00:02:18.067 --> 00:02:20.867
ou seja,
"AsyncStorage" no celular,

00:02:20.900 --> 00:02:22.700
usando "mergeItems".

00:02:22.733 --> 00:02:25.067
Vamos mesclar
este objeto aqui

00:02:25.100 --> 00:02:29.533
nesta propriedade
no nosso "AsyncStorage".

00:02:29.566 --> 00:02:34.067
Depois, para "removeEntry",
passaremos uma "key"

00:02:34.100 --> 00:02:39.400
e removeremos o item desta "key"
da nossa AsyncStorage.

00:02:40.000 --> 00:02:43.900
Adicionaremos
"return AsyncStorage".

00:02:43.933 --> 00:02:48.467
Primeiro, vamos obter tudo
nesta localização.

00:02:48.500 --> 00:02:52.400
Com estes dados em mãos,
e os chamaremos de "results",

00:02:53.033 --> 00:02:57.067
nós iremos parseá-los

00:02:57.100 --> 00:03:01.933
e depois diremos
"data[key] = undefined".

00:03:01.966 --> 00:03:04.733
Deve haver um jeito melhor,
mas isso serve.

00:03:04.767 --> 00:03:06.900
Depois,
deletaremos "data[key]".

00:03:06.933 --> 00:03:09.300
É como se disséssemos:
"pegue todos os dados,

00:03:09.333 --> 00:03:12.000
delete o que houver
na propriedade 'key'

00:03:12.033 --> 00:03:16.533
e use 'AsyncStorage.setItem'

00:03:16.566 --> 00:03:18.933
para dizer
que 'CALENDAR_STORAGE_KEY',

00:03:18.967 --> 00:03:21.933
ou todo o conteúdo
em 'CALENDAR_STORAGE_KEY',

00:03:21.966 --> 00:03:24.633
será o nosso dado

00:03:24.667 --> 00:03:28.133
depois de removermos
o item da 'key'

00:03:28.166 --> 00:03:30.733
e de a transformarmos
em uma string."

00:03:31.233 --> 00:03:35.100
Agora, o que faremos
é chamar as duas funções

00:03:35.133 --> 00:03:36.967
dentro de "AddEntry".

00:03:37.500 --> 00:03:40.600
Vamos importar as duas.

00:03:40.633 --> 00:03:45.700
Elas eram "submitEntry"
e "removeEntry".

00:03:45.733 --> 00:03:50.367
Depois, aqui embaixo,
dentro de "submit"...

00:03:50.400 --> 00:03:54.533
podemos deletar esta linha
e chamar "submitEntry".

00:03:54.566 --> 00:03:57.867
Lembre-se: estamos passando
um objeto que contém a "key",

00:03:57.900 --> 00:04:00.800
que será
o que "timeToString" retornar,

00:04:00.833 --> 00:04:05.200
assim como nossa "entry",
que será o estado local.

00:04:05.233 --> 00:04:07.900
E, aqui embaixo,
dentro de "reset",

00:04:07.933 --> 00:04:11.100
chamaremos "removeEntry"
e passaremos a key,

00:04:11.133 --> 00:04:15.433
que será
o que "timeToString" retornar.

