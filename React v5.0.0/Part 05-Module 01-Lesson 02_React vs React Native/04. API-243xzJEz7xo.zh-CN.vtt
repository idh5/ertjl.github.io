WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.559
在 AddEntry.js 文件中

00:00:04.559 --> 00:00:07.670
有一个这样的 reset 方法

00:00:07.671 --> 00:00:10.669
还有一个 submit 方法

00:00:10.669 --> 00:00:13.109
你会发现在这里有一些注释

00:00:13.109 --> 00:00:15.359
注明了我们将在这两个方法中执行的任务

00:00:15.359 --> 00:00:18.519
其中一个任务是将数据保存到数据库中

00:00:18.519 --> 00:00:19.682
在这里

00:00:19.682 --> 00:00:22.039
还有在这里

00:00:22.039 --> 00:00:25.155
数据库用引号引起来了

00:00:25.155 --> 00:00:27.990
因为我们将使用 AsyncStorage 即 react-native 的本地存储组件

00:00:27.989 --> 00:00:32.335
假装我们有一个数据库

00:00:32.335 --> 00:00:34.130
在本视频中

00:00:34.130 --> 00:00:37.530
我们将构建 api.js 文件

00:00:37.530 --> 00:00:41.219
以便执行第 70 行和 81 行注明的任务

00:00:41.219 --> 00:00:44.335
在 utils 文件夹中

00:00:44.335 --> 00:00:47.505
新建一个 api.js 文件

00:00:47.505 --> 00:00:50.310
在此文件中 首先需要导入

00:00:50.310 --> 00:00:53.153
之前提到的 AsyncStorage

00:00:53.152 --> 00:00:56.054
它来自于 react-native

00:00:56.054 --> 00:01:01.679
然后需要获取的是

00:01:01.679 --> 00:01:05.549
这个文件里的 CALENDAR_STORAGE_KEY

00:01:05.549 --> 00:01:10.640
我们将在其中存储 AsyncStorage 中的信息

00:01:10.640 --> 00:01:16.769
从这个路径下的 calendar 文件中获取

00:01:16.769 --> 00:01:20.935
现在我们将用到两种不同的方法 即两种函数

00:01:20.935 --> 00:01:24.623
第一个叫做 submitEntry

00:01:24.623 --> 00:01:28.959
第二个叫做 removeEntry

00:01:28.959 --> 00:01:30.033
提交和删除功能创建好了

00:01:30.034 --> 00:01:32.430
在这里

00:01:32.430 --> 00:01:36.510
当我们提交时 将调用我们要创建的提交函数

00:01:36.510 --> 00:01:40.079
在这里 将调用删除函数

00:01:40.079 --> 00:01:41.819
先创建提交函数

00:01:41.819 --> 00:01:44.789
向其传入一个对象

00:01:44.790 --> 00:01:48.280
它具有特定的 entry 和 key

00:01:48.280 --> 00:01:53.224
然后调用 AsyncStorage.mergeItem

00:01:53.224 --> 00:01:56.457
传入 CALENDAR_STORAGE_KEY

00:01:56.457 --> 00:02:04.230
合并的内容是该对象的 stringify 版本

00:02:04.230 --> 00:02:10.349
key 是属性名称 entry 是值

00:02:10.349 --> 00:02:13.674
这里是为当天提交新的条目

00:02:13.675 --> 00:02:17.189
我们想要将该条目添加到数据库中

00:02:17.189 --> 00:02:20.978
也就是手机上的 AsyncStorage

00:02:20.978 --> 00:02:22.800
方法是使用 mergeItem

00:02:22.800 --> 00:02:29.585
我们将该对象合并到 AsyncStorage 中的这个属性上

00:02:29.585 --> 00:02:31.734
对于 removeEntry

00:02:31.734 --> 00:02:34.030
向其传入一个 key

00:02:34.030 --> 00:02:36.270
然后从 AsyncStorage 中

00:02:36.270 --> 00:02:40.105
删除位于这个 key 的项目

00:02:40.104 --> 00:02:43.754
输入 return AsyncStorage.

00:02:43.754 --> 00:02:48.329
首先获取这个位置的所有信息

00:02:48.330 --> 00:02:51.070
获得这些信息后

00:02:51.069 --> 00:02:52.769
称之为 results

00:02:52.770 --> 00:02:57.222
然后解析该信息

00:02:57.222 --> 00:03:02.100
输入 data[key] = undefined

00:03:02.099 --> 00:03:04.784
肯定还有更好的方式 不过这样也可行

00:03:04.784 --> 00:03:06.449
现在删除 data[key]

00:03:06.449 --> 00:03:09.509
也就是获取所有这些信息

00:03:09.509 --> 00:03:12.000
删除该 key 属性所在位置的所有信息

00:03:12.000 --> 00:03:16.634
然后使用 AsyncStorage.setItem

00:03:16.634 --> 00:03:20.223
并输入 CALENDAR_STORAGE_KEY 即位于 CALENDAR_STORAGE_KEY 的所有信息

00:03:20.223 --> 00:03:25.259
将为删除该特定键所对应位置的项目

00:03:25.259 --> 00:03:30.995
及对信息 stringify 之后的所有数据

00:03:30.995 --> 00:03:33.914
现在我们将在 AddEntry 中

00:03:33.914 --> 00:03:37.590
调用这两个函数

00:03:37.590 --> 00:03:40.754
在顶部导入这两个函数

00:03:40.754 --> 00:03:45.810
即 submitEntry 和 removeEntry

00:03:45.810 --> 00:03:48.870
然后在下面的 submit 中

00:03:48.870 --> 00:03:54.645
我们删掉这行并调用 submitEntry

00:03:54.645 --> 00:03:58.710
我们要传入的对象具有一个 key

00:03:58.710 --> 00:04:02.730
该 key 是 timeToString 提供给我们的信息

00:04:02.729 --> 00:04:05.213
以及 entry 是本地状态

00:04:05.213 --> 00:04:08.090
然后在下面的 reset 中

00:04:08.090 --> 00:04:11.520
我们将调用 removeEntry 传入一个 key

00:04:11.520 --> 00:04:15.210
它也来自于 timeToString 提供给我们的信息

