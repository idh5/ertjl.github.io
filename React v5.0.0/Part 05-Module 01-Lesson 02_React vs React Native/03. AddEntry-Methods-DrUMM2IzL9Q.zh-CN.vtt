WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.995
在上个视频中我们构建了一个函数

00:00:04.995 --> 00:00:07.296
也就是这个 getMetricMetaInfo

00:00:07.296 --> 00:00:10.820
在该函数中有两种输入 稍后我们将用到

00:00:10.820 --> 00:00:13.885
一个是步进器 它由两种不同的按钮组成

00:00:13.885 --> 00:00:20.105
一个递增按钮和一个递减按钮

00:00:20.105 --> 00:00:23.120
还有一个是滑块 通常位于 1 和特定数字之间

00:00:23.120 --> 00:00:27.855
这里是 24 对于饮食类别 则是 1 到 10 之间

00:00:27.855 --> 00:00:30.500
对于这两种类型的输入

00:00:30.500 --> 00:00:33.979
我们需要在类中使用三种方法

00:00:33.979 --> 00:00:38.659
才能修改这些输入

00:00:38.659 --> 00:00:42.979
因此我们的 state 将包含五项不同的内容

00:00:42.979 --> 00:00:47.369
也就是 run bike 和其他要跟踪的指标

00:00:47.369 --> 00:00:50.239
每项指标都从 0 开始

00:00:50.240 --> 00:00:53.090
因为该组件的最终目标是

00:00:53.090 --> 00:00:58.955
获取用户在某一天的铁人三项数据和睡眠及饮食数据

00:00:58.954 --> 00:01:00.379
当他们填写表格时

00:01:00.380 --> 00:01:04.340
我们要跟踪的指标就是这五项指标

00:01:04.340 --> 00:01:07.385
首先 我们将在这里

00:01:07.385 --> 00:01:11.510
创建一个 increment 方法

00:01:11.510 --> 00:01:13.650
专门用于 run bike 和 swim 指标

00:01:13.650 --> 00:01:17.060
当我们调用该方法时 我们将传入 metric

00:01:17.060 --> 00:01:18.500
然后我们需要

00:01:18.500 --> 00:01:21.049
获取该指标的最大值

00:01:21.049 --> 00:01:25.120
以及递增幅度 也就是步长

00:01:25.120 --> 00:01:30.005
我们将从创建的 getMetricMetaInfo 函数中获取这些信息

00:01:30.004 --> 00:01:32.329
传入特定的指标

00:01:32.329 --> 00:01:33.799
然后我们将

00:01:33.799 --> 00:01:35.314
调用 setState

00:01:35.314 --> 00:01:38.700
我们将更新本地组件状态

00:01:38.700 --> 00:01:41.450
调用 setState 时 传入一个函数

00:01:41.450 --> 00:01:46.400
并获得当前状态

00:01:46.400 --> 00:01:53.594
然后我们将 count 设为指标的特定属性

00:01:53.594 --> 00:01:57.064
如果是 bike 那么这里的 count 将为 0

00:01:57.064 --> 00:02:01.024
因为骑行状态等于 0

00:02:01.025 --> 00:02:02.359
然后我们将

00:02:02.359 --> 00:02:05.415
按照相应的步长递增

00:02:05.415 --> 00:02:07.840
同样从此函数中获取

00:02:07.840 --> 00:02:09.319
现在我们将

00:02:09.319 --> 00:02:12.650
返回一个新的对象

00:02:12.650 --> 00:02:16.080
setState 返回的对象将与当前状态合并

00:02:16.080 --> 00:02:21.695
因此保留已经存在的所有属性

00:02:21.694 --> 00:02:26.030
但是无论该指标是什么

00:02:26.030 --> 00:02:27.740
我们都想更新它

00:02:27.740 --> 00:02:31.175
如果 count 大于最大值

00:02:31.175 --> 00:02:35.052
则指标现在将是相应的最大值

00:02:35.052 --> 00:02:39.074
如果不大于最大值 则是 count

00:02:39.074 --> 00:02:40.459
这段代码的作用是

00:02:40.460 --> 00:02:41.570
更新状态

00:02:41.569 --> 00:02:44.164
所有状态属性保持不变

00:02:44.164 --> 00:02:46.519
但是这个指标将更新

00:02:46.520 --> 00:02:49.260
如果 count 大于最大值

00:02:49.259 --> 00:02:50.370
我们不希望超过最大值

00:02:50.370 --> 00:02:51.920
因此直接设为 max 如果不大于最大值

00:02:51.919 --> 00:02:54.149
则是这个新的 count

00:02:54.150 --> 00:02:57.659
我们将执行完全一样的流程 但是现在是递减操作

00:02:57.659 --> 00:03:00.805
将这段代码粘贴过来

00:03:00.805 --> 00:03:02.825
称为 decrement

00:03:02.824 --> 00:03:05.629
现在我们不再需要 max 和 step

00:03:05.629 --> 00:03:09.840
因为我们将执行减法操作

00:03:09.840 --> 00:03:11.750
复制这些代码

00:03:11.750 --> 00:03:13.854
删掉这些代码

00:03:13.854 --> 00:03:15.889
我们将调用 setState

00:03:15.889 --> 00:03:18.004
并像在上面那样获得 count

00:03:18.004 --> 00:03:21.121
但是现在不是加上步长

00:03:21.122 --> 00:03:25.025
而是减去步长

00:03:25.025 --> 00:03:27.319
然后就像在下面这样

00:03:27.319 --> 00:03:30.004
我们要返回所有内容

00:03:30.004 --> 00:03:31.664
我们希望状态保持不变

00:03:31.664 --> 00:03:35.554
但是将更新这个指标

00:03:35.555 --> 00:03:38.045
如果 count 小于 0

00:03:38.044 --> 00:03:40.099
则设为 0

00:03:40.099 --> 00:03:44.435
如果不小于 0 则设为这个 count

00:03:44.435 --> 00:03:46.729
因此和这里的操作很相似

00:03:46.729 --> 00:03:51.014
只是现在要确保不能小于 0

00:03:51.014 --> 00:03:53.684
最后要执行的操作是

00:03:53.685 --> 00:03:57.289
我们为这三个指标创建了 increment 和 decrement 功能

00:03:57.288 --> 00:04:01.309
但是我们将为 sleep 和 eat 创建滑块

00:04:01.310 --> 00:04:04.944
在这里创建一个 slide 方法

00:04:04.944 --> 00:04:09.584
并传入具体的指标以及新的值

00:04:09.585 --> 00:04:10.950
然后我们将

00:04:10.949 --> 00:04:17.069
调用 setState 并返回一个对象

00:04:17.069 --> 00:04:20.269
新的指标将是

00:04:20.269 --> 00:04:24.454
我们在 slide 函数中传入的第二个参数

00:04:24.454 --> 00:04:26.069
看起来不错

00:04:26.069 --> 00:04:27.930
不过在第 24 行有个多余的逗号

00:04:27.930 --> 00:04:29.129
这个逗号不需要

00:04:29.129 --> 00:04:30.784
你可能已经发现了这个逗号

00:04:30.785 --> 00:04:32.140
现在应该没问题了

