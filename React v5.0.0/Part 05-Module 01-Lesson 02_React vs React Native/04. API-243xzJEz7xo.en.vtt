WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.559
Inside of our AddEntry.js file,

00:00:04.559 --> 00:00:07.670
we have this reset method,

00:00:07.671 --> 00:00:10.669
and we also have the submit method.

00:00:10.669 --> 00:00:13.109
You'll notice that we have notes here about

00:00:13.109 --> 00:00:15.359
what we're eventually going to do in both of these methods,

00:00:15.359 --> 00:00:18.519
and one of these is save to our database.

00:00:18.519 --> 00:00:19.682
So we have that right there,

00:00:19.682 --> 00:00:22.039
and then we also have that right there and databases and

00:00:22.039 --> 00:00:25.155
quotations because we're going to be using basically

00:00:25.155 --> 00:00:27.990
AsyncStorage or react-native's local storage

00:00:27.989 --> 00:00:32.335
component to kind of pretend that we have a database.

00:00:32.335 --> 00:00:34.130
So what we'll do in this video,

00:00:34.130 --> 00:00:37.530
let's go ahead and build out our api.js file so we can

00:00:37.530 --> 00:00:41.219
update line 70 right here as well as line 81.

00:00:41.219 --> 00:00:44.335
So inside of our utils folder,

00:00:44.335 --> 00:00:47.505
let's make a new api.js file.

00:00:47.505 --> 00:00:50.310
And in here, the very first thing that we're going to need as I

00:00:50.310 --> 00:00:53.153
just mentioned is AsyncStorage,

00:00:53.152 --> 00:00:56.054
which is coming from react-native.

00:00:56.054 --> 00:01:01.679
And then another thing we're going to grab is this right here,

00:01:01.679 --> 00:01:05.549
our CALENDAR_STORAGE_KEY which is basically just where we're

00:01:05.549 --> 00:01:10.640
going to persist the information inside of our AsyncStorage.

00:01:10.640 --> 00:01:16.769
So we will grab that from our calendar file right here that was given to us.

00:01:16.769 --> 00:01:20.935
And so now, we're going to have two different methods or two different functions.

00:01:20.935 --> 00:01:24.623
The very first one, we will call submitEntry,

00:01:24.623 --> 00:01:28.959
and the second one is going to be removeEntry.

00:01:28.959 --> 00:01:30.033
So we have submit,

00:01:30.034 --> 00:01:32.430
remove, and so right here,

00:01:32.430 --> 00:01:36.510
when we submit, we're going to call our submit function that we're making.

00:01:36.510 --> 00:01:40.079
And then right here, we will call remove.

00:01:40.079 --> 00:01:41.819
So let's go ahead and do submit first.

00:01:41.819 --> 00:01:44.789
What we're going to pass it is an object that has

00:01:44.790 --> 00:01:48.280
the specific entry on it as well as the key.

00:01:48.280 --> 00:01:53.224
And then what we will do is we will call AsyncStorage.mergeItem.

00:01:53.224 --> 00:01:56.457
So we're going to pass it, CALENDAR_STORAGE_KEY,

00:01:56.457 --> 00:02:04.230
and then what we're going to merge into it is a stringified version of this object,

00:02:04.230 --> 00:02:10.349
which has the key as the property name and the entry as the value.

00:02:10.349 --> 00:02:13.674
So again, what we're doing here is we're submitting a new entry for the day,

00:02:13.675 --> 00:02:17.189
and what we want to do is we want to take that entry and add it to

00:02:17.189 --> 00:02:20.978
our database or our AsyncStorage on the phone,

00:02:20.978 --> 00:02:22.800
and we will do that using mergeItems.

00:02:22.800 --> 00:02:29.585
So we will merge this object right here into this property on our AsyncStorage.

00:02:29.585 --> 00:02:31.734
And then for removeEntry,

00:02:31.734 --> 00:02:34.030
what we're going to do is we will pass it a key,

00:02:34.030 --> 00:02:36.270
and now what we want to do is we want to remove

00:02:36.270 --> 00:02:40.105
the item at this key from our AsyncStorage.

00:02:40.104 --> 00:02:43.754
So let's go ahead and we will say return AsyncStorage.

00:02:43.754 --> 00:02:48.329
First, we are going to get everything at this location,

00:02:48.330 --> 00:02:51.070
and then once we have this information,

00:02:51.069 --> 00:02:52.769
let's just call it results,

00:02:52.770 --> 00:02:57.222
then what we will do is let's parse it.

00:02:57.222 --> 00:03:02.100
And then we are going to say that data[key] is going to be undefined,

00:03:02.099 --> 00:03:04.784
so I'm sure there is a better way to do this, but this will work.

00:03:04.784 --> 00:03:06.449
Now, we're going to delete the data[key].

00:03:06.449 --> 00:03:09.509
So basically, just saying grab all that information,

00:03:09.509 --> 00:03:12.000
delete whatever's at this key property,

00:03:12.000 --> 00:03:16.634
and then use AsyncStorage.setItem

00:03:16.634 --> 00:03:20.223
to say CALENDAR_STORAGE_KEY or all these stuff at CALENDAR_STORAGE_KEY

00:03:20.223 --> 00:03:25.259
is going to be all of our data after

00:03:25.259 --> 00:03:30.995
we've removed the item at that specific key and after we have stringified it.

00:03:30.995 --> 00:03:33.914
And so now, what we want to do is we want to

00:03:33.914 --> 00:03:37.590
call both of these functions inside of AddEntry.

00:03:37.590 --> 00:03:40.754
So up here, let's go ahead and import both of them.

00:03:40.754 --> 00:03:45.810
We had submitEntry as well as removeEntry.

00:03:45.810 --> 00:03:48.870
And then what we want to do is down here,

00:03:48.870 --> 00:03:54.645
instead of submit, we can delete this line and we can call submitEntry.

00:03:54.645 --> 00:03:58.710
Remember, we're passing an object that has the key which is just going to

00:03:58.710 --> 00:04:02.730
be whatever timeToString gives us as well as our entry,

00:04:02.729 --> 00:04:05.213
which is just the local states.

00:04:05.213 --> 00:04:08.090
And then down here, inside of reset.

00:04:08.090 --> 00:04:11.520
we are going to call removeEntry passing it the key, which,

00:04:11.520 --> 00:04:15.210
again, is just coming from whatever timeToString gives us.

