{
  "id": 1017,
  "project_id": 316,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|jsx|markdown|md|pdf|py|rmd|rst|sql|swift|ts|tsx|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2017-06-19T18:36:24.972Z",
  "updated_at": "2019-07-08T08:07:01.797Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd019-br",
    "nd019beta",
    "nd019",
    "nd019-cn",
    "nd019-ent",
    "nd019-connect"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 2446,
      "name": "Application Setup",
      "created_at": "2017-07-21T17:40:12.358Z",
      "updated_at": "2017-07-21T17:40:46.052Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 1017,
      "rubric_items": [
        {
          "id": 7153,
          "section_id": 2446,
          "passed_description": "The application requires only `npm install` and `npm start` to install and launch. ",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:40:46.159Z",
          "updated_at": "2017-08-25T20:43:21.138Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Is the application easy to install and start?",
          "exceedable": false
        },
        {
          "id": 7154,
          "section_id": 2446,
          "passed_description": "A README is included with the project. The README includes clear instructions for installing and launching the project.",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:43:36.172Z",
          "updated_at": "2017-08-16T17:48:13.629Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Does the application include README with clear installation and launch instructions?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 2447,
      "name": "State Management",
      "created_at": "2017-07-21T17:44:52.209Z",
      "updated_at": "2017-07-21T17:45:02.329Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 1017,
      "rubric_items": [
        {
          "id": 7155,
          "section_id": 2447,
          "passed_description": "Most application state is managed by the Redux store. State-based props are mapped from the store rather than stored as component state.\r\n\r\nForm inputs and controlled components may have some state handled by the component.  ",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:45:02.447Z",
          "updated_at": "2018-02-14T21:02:45.110Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Is application state managed by Redux?",
          "exceedable": false
        },
        {
          "id": 7156,
          "section_id": 2447,
          "passed_description": "Updates are triggered by dispatching action creators to reducers.\n\nReducers and actions are written properly and correctly return updated state to the store.",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:50:40.888Z",
          "updated_at": "2018-02-14T21:00:23.619Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Does application state update correctly?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 2448,
      "name": "Application Functionality",
      "created_at": "2017-07-21T17:53:04.865Z",
      "updated_at": "2017-07-21T17:53:22.589Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 1017,
      "rubric_items": [
        {
          "id": 7157,
          "section_id": 2448,
          "passed_description": "Listed posts are displayed with the following:\n  1) Title\n  2) Author\n  3) Number of comments\n  4) Current score\n  5) Voting mechanism to upvote or downvote the post\n  6) Buttons or links for editing or deleting that post\n\nThe comment count, edit/delete buttons or links, and upvote/downvote features are required on this page in order to enable the user to manage the posts without navigating away. \n\nThe voting mechanism works and correctly displays the new vote score after clicking.\n\nList posts link to the detail page for that post.\n\nAll posts are listed at the root.\n\nAll posts for a category are listed at `/:category`\n\nList pages (root or category) include a mechanism for sorting by date or by score (at a minimum), and the sort works properly.\n\nList pages include a button to add a new post. \n\nAll available categories are visible in any list view.",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:53:22.712Z",
          "updated_at": "2018-03-03T23:38:50.969Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Are posts listed correctly and have the desired functionality in a list view?",
          "exceedable": false
        },
        {
          "id": 7158,
          "section_id": 2448,
          "passed_description": "Post detail is available at `/:category/:post_id`\n\nPost is displayed with the following:\n  1) Title\n  2) Body\n  3) Author\n  4) Number of comments\n  5) Current score\n  6) Voting mechanism to upvote or downvote the post\n  7) Buttons or links for editing or deleting that post\n\nListed comments are displayed with the following:\n  1) Author\n  2) Current score\n  3) Voting mechanism to upvote or downvote the comment\n  4) Buttons or links for editing or deleting that comment\n\nThe voting mechanism works and correctly displays the new vote score after clicking for both the post and comments.\n\nAll comments for a post are displayed below the post body.\n\nA mechanism for adding a new comment is visible on the detail page and functional.",
          "exceeded_description": "",
          "created_at": "2017-07-21T17:59:05.935Z",
          "updated_at": "2018-02-14T21:00:23.670Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Does the post detail page have desired functionality?",
          "exceedable": false
        },
        {
          "id": 7159,
          "section_id": 2448,
          "passed_description": "Application has a form for creating a new post. Submitting the form properly adds the post to the correct category.",
          "exceeded_description": "",
          "created_at": "2017-07-21T18:06:23.728Z",
          "updated_at": "2017-08-16T17:48:13.673Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Can users add new posts?",
          "exceedable": false
        },
        {
          "id": 7160,
          "section_id": 2448,
          "passed_description": "Application has a form for adding comments to a post. Submitting the form properly adds the comment to the correct post.",
          "exceeded_description": "",
          "created_at": "2017-07-21T18:07:14.378Z",
          "updated_at": "2017-08-16T17:48:13.680Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Can users add comments?",
          "exceedable": false
        },
        {
          "id": 7161,
          "section_id": 2448,
          "passed_description": "Edit buttons for posts/comments open a form with existing data pre-populated. Submitting the form correctly updates the data for the comment/post.",
          "exceeded_description": "",
          "created_at": "2017-07-21T18:07:46.093Z",
          "updated_at": "2017-08-16T17:48:13.686Z",
          "deleted_at": null,
          "optional": false,
          "position": 4,
          "criteria": "Can users edit posts/comments?",
          "exceedable": false
        },
        {
          "id": 7162,
          "section_id": 2448,
          "passed_description": "A mechanism for deleting posts and comments exists. Clicking the button/link correctly removes the post/comment from list view and makes post inaccessible at its URL. When a user goes to a deleted postâ€™s URL, a 404 page is displayed.",
          "exceeded_description": "",
          "created_at": "2017-07-21T18:08:40.269Z",
          "updated_at": "2018-02-14T21:23:33.297Z",
          "deleted_at": null,
          "optional": false,
          "position": 5,
          "criteria": "Can users delete posts/comments?",
          "exceedable": false
        },
        {
          "id": 7163,
          "section_id": 2448,
          "passed_description": "User is able to navigate between categories, main page and post detail pages without typing address in the address bar.",
          "exceeded_description": "",
          "created_at": "2017-07-21T18:09:35.262Z",
          "updated_at": "2018-09-18T21:18:28.831Z",
          "deleted_at": null,
          "optional": false,
          "position": 6,
          "criteria": "Is the application navigable?\n\nAfter you receive your project feedback, please complete this survey: https://forms.udacity.com/forms/job-confidence.",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 316,
    "name": "Readable",
    "nanodegree_key": "nd019",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 2899,
    "entitlement_required": null,
    "is_career": null,
    "recruitment_family_id": 7,
    "created_at": "2017-06-19T22:29:01.719Z",
    "updated_at": "2021-03-26T08:15:37.218Z",
    "price": "7.0",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}