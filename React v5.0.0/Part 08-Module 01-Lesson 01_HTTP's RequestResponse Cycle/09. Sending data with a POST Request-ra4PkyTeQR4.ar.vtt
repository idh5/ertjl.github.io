WEBVTT
Kind: captions
Language: ar

00:00:00.180 --> 00:00:02.670
ما كنا نفعله حتى الآن هو طلب الخادم

00:00:02.669 --> 00:00:05.650
ليرسل إلينا البيانات باستخدام طريقة GET.

00:00:05.650 --> 00:00:07.890
مع ذلك، أحيانًا قد ترغبون من المستخدم

00:00:07.889 --> 00:00:10.679
أن يكتب بعض البيانات أو يقوم بتحميل صورة

00:00:10.679 --> 00:00:13.059
وإرسالها إلى الخادم.

00:00:13.060 --> 00:00:15.150
هنا يأتي دور طريقة POST

00:00:15.150 --> 00:00:16.679
التي ذكرناها قبل ذلك.

00:00:16.679 --> 00:00:19.710
عبر طلب POST، يمكن أن يكون لدى الطلب نفسه

00:00:19.710 --> 00:00:21.780
حمولة أو جسم، وهو شيء سبق ورأيناه

00:00:21.780 --> 00:00:25.679
في الاستجابات ولكن ليس في الطلبات.

00:00:25.679 --> 00:00:27.780
ما يحدث بالضبط للبيانات بمجرد

00:00:27.780 --> 00:00:30.929
أن يتم إرسالها إلى الخادم هو أمر راجع إلى مطوّر
الخادم

00:00:30.929 --> 00:00:33.119
وهو أمر يتخطى نطاق هذه الدورة.

00:00:33.119 --> 00:00:35.820
ومع ذلك فمن المهم أن تعرفوا أن طلبات POST

00:00:35.820 --> 00:00:39.030
يحتمل أن يتم التعامل معها بشكل مختلف عبر الوكلاء
والمتصفح

00:00:39.030 --> 00:00:40.439
عن طريقة طلبات GET.

00:00:40.439 --> 00:00:42.269
هل سبق ورأيتم واحدًا من هذه؟

00:00:42.270 --> 00:00:44.430
هذا هو ما يحدث حينما تكون الصفحة

00:00:44.429 --> 00:00:47.880
التي تنظر إليها حاليًا نتيجة طلب POST.

00:00:47.880 --> 00:00:50.310
إذا كنت تحاول إعادة تحميل موقع ويب كهذا،

00:00:50.310 --> 00:00:53.490
سيطالبك المتصفح بتأكيد إجراء إعادة التحميل،

00:00:53.490 --> 00:00:56.730
حيث أنه يُسمح لطلبات POST أن تكون عمليات تخريبية،

00:00:56.729 --> 00:01:00.239
وقد يكون تكرارها أمرًا تخريبيًا أكثر مما

00:01:00.240 --> 00:01:01.380
تريدون.

00:01:01.380 --> 00:01:03.240
ولهذا السبب دائمًا ما يُوصَى

00:01:03.240 --> 00:01:04.890
مطورو الخادم بعدم

00:01:04.890 --> 00:01:08.760
الاستجابة لطلب POST بموقع ويب بدلًا من إعادة
التوجيه،

00:01:08.760 --> 00:01:11.190
لتجنب حدوث سلوك متعارض.

00:01:11.189 --> 00:01:14.489
بالنسبة للمستخدم، فإنه عمليًا لا يرى عملية إعادة
التوجيه

00:01:14.489 --> 00:01:17.390
لكنه يتجنب مشكلات إعادة التحميل.

