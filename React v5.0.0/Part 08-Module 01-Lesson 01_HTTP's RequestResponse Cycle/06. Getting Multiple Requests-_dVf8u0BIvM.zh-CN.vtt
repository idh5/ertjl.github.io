WEBVTT
Kind: captions
Language: zh-CN

00:00:00.530 --> 00:00:03.780
我们刚刚看了如何使用 HTTP 请求

00:00:03.779 --> 00:00:04.910
获取一个文档

00:00:04.910 --> 00:00:07.300
这些文档可以是任何类型的数据

00:00:07.299 --> 00:00:09.140
但是在 web 上 一切通常都以

00:00:09.140 --> 00:00:11.300
索引文档开始

00:00:11.300 --> 00:00:12.980
如果在请求中找不到任何具体的文件

00:00:12.980 --> 00:00:15.380
服务器就会向你发回

00:00:15.380 --> 00:00:17.030
索引文档

00:00:17.030 --> 00:00:20.420
通过在浏览器地址栏中输入 URL

00:00:20.420 --> 00:00:22.160
用户指示浏览器

00:00:22.160 --> 00:00:24.920
通过 URL 辨识出服务器的主机名

00:00:24.920 --> 00:00:28.730
并与它建立新链接

00:00:28.730 --> 00:00:30.679
随后获得 URL 的路径中指定的文档

00:00:30.679 --> 00:00:34.280
这里 服务器将发回 index.html

00:00:34.280 --> 00:00:36.710
浏览器可以开始解析该文档

00:00:36.710 --> 00:00:38.340
这是一个非常有趣的步骤

00:00:38.340 --> 00:00:40.070
为了处理接收的数据

00:00:40.070 --> 00:00:41.901
浏览器会执行各种操作

00:00:41.901 --> 00:00:43.400
请访问讲师注释中的链接

00:00:43.399 --> 00:00:46.339
了解这一步骤的工作原理

00:00:46.340 --> 00:00:48.470
浏览器解析响应后

00:00:48.469 --> 00:00:50.679
情况就变得复杂了

00:00:50.679 --> 00:00:53.479
当浏览器读取 index.html 时

00:00:53.479 --> 00:00:56.359
它很可能会发现要正常显示网站

00:00:56.359 --> 00:00:58.339
所需的其他文档的引用

00:00:58.340 --> 00:01:01.040
例如图片 样式表 JavaScript 文件

00:01:01.039 --> 00:01:02.539
视频等

00:01:02.539 --> 00:01:06.079
对所有这些资源 发出另一个请求

00:01:06.079 --> 00:01:09.109
浏览器收到响应后

00:01:09.109 --> 00:01:12.200
就会重复整个解析和可能存在的发送

00:01:12.200 --> 00:01:14.420
新请求的过程

00:01:14.420 --> 00:01:17.390
这也意味着 每个资源

00:01:17.390 --> 00:01:20.450
都可以反过来获取其他资源

00:01:20.450 --> 00:01:22.280
每个网页都有自己的一组依赖项

00:01:22.280 --> 00:01:26.030
例如图片 CSS 和 JavaScript 文件

00:01:26.030 --> 00:01:28.400
意味着访问单个 URL

00:01:28.400 --> 00:01:32.530
所发送的请求可能比你想象中要多得多

