WEBVTT
Kind: captions
Language: ko

00:00:00.530 --> 00:00:03.780
HTTP 요청을 이용하여
하나의 문서를 받아오는 법을

00:00:03.780 --> 00:00:04.910
배웠습니다

00:00:04.910 --> 00:00:07.300
이 문서는 어떤 형식의 데이터여도
가능합니다만

00:00:07.300 --> 00:00:09.140
대부분의 웹에서는 인덱스 문서부터

00:00:09.140 --> 00:00:11.300
시작합니다

00:00:11.300 --> 00:00:12.980
인덱스 문서는 여러분이

00:00:12.980 --> 00:00:15.380
특정한 파일을 요청하지 않으면

00:00:15.380 --> 00:00:17.030
서버에서 보내주는 문서입니다

00:00:17.030 --> 00:00:20.420
브라우저의 주소표시줄에 URL을 입력하면,

00:00:20.420 --> 00:00:22.160
유저는 브라우저에게

00:00:22.160 --> 00:00:24.920
URL 주소의 HOST를 이용해
서버와 새로운 연결을 생성하게 하고,

00:00:24.920 --> 00:00:28.730
입력한 URL 경로의 파일을

00:00:28.730 --> 00:00:30.680
받아오게 합니다

00:00:30.680 --> 00:00:34.280
이 경우에는 index.html을
응답하고

00:00:34.280 --> 00:00:36.710
브라우저는 이를 파싱합니다

00:00:36.710 --> 00:00:38.340
아주 흥미로운 단계입니다

00:00:38.340 --> 00:00:40.070
그리고 브라우저는 받은 데이터를

00:00:40.070 --> 00:00:41.901
처리하기 위해 몇 가지 일을
진행하는데

00:00:41.901 --> 00:00:43.400
강사 메모를 켜서 자세한 내용을

00:00:43.400 --> 00:00:46.340
확인해 주세요

00:00:46.340 --> 00:00:48.470
브라우저가 응답을 처리하면

00:00:48.470 --> 00:00:50.680
빠르게 변화가 일어납니다

00:00:50.680 --> 00:00:53.480
브라우저는 index.html을 읽으면

00:00:53.480 --> 00:00:56.360
웹사이트를 적절하게 표시하기 위한

00:00:56.360 --> 00:00:58.340
다른 참조 문서를 찾습니다

00:00:58.340 --> 00:01:01.040
이는 이미지나, CSS 혹은

00:01:01.040 --> 00:01:02.540
자바 스크립트 파일이나
비디오 여러가지가 가능합니다

00:01:02.540 --> 00:01:06.080
이 리소스 각각에 대해
새로운 요청문이 보내지고

00:01:06.080 --> 00:01:09.110
브라우저가 받은 응답으로,

00:01:09.110 --> 00:01:12.200
전체적인 파싱이 수행되고

00:01:12.200 --> 00:01:14.420
잠재적으로 새로운 요청을 보내는 것이 
반복됩니다.

00:01:14.420 --> 00:01:17.390
이는 각 리소스들이

00:01:17.390 --> 00:01:20.450
다른 리소스들을 요구할 수 있고

00:01:20.450 --> 00:01:22.280
각 페이지가 페이지의

00:01:22.280 --> 00:01:26.030
이미지나 CSS같은
Dependency가 있다는 말입니다

00:01:26.030 --> 00:01:28.400
요컨데, URL 한 줄로 사이트를
방문하여도

00:01:28.400 --> 00:01:32.530
많은 수의 요청문을 보내게 된다는
의미입니다

