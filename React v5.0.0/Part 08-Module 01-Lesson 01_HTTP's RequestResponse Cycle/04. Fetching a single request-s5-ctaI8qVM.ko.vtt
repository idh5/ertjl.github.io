WEBVTT
Kind: captions
Language: ko

00:00:00.500 --> 00:00:03.300
이 튜브와 메세지는

00:00:03.300 --> 00:00:07.440
HTTP 요청과 응답의
기본적인 개념입니다

00:00:07.440 --> 00:00:09.450
실제로 이 종이를 튜브롤 
넣는 것이 아닌

00:00:09.450 --> 00:00:13.300
데이터를 네트워크 케이블로
전송합니다

00:00:13.300 --> 00:00:15.870
이것이 실제 요청이 이루어지는
방식입니다

00:00:15.870 --> 00:00:17.580
실제 브라우저가 서버로

00:00:17.580 --> 00:00:21.480
kitty.jpg 파일을 요청하는
문장입니다

00:00:21.480 --> 00:00:23.400
첫 문장을 살펴봅시다

00:00:23.400 --> 00:00:26.760
이 예제에서는 서버로 부터
문서를 얻어와야 합니다

00:00:26.760 --> 00:00:30.600
프로토콜은 얻어오기 뿐만 아니라
더하기, 지우기, 업데이트 하기가

00:00:30.600 --> 00:00:31.830
가능합니다

00:00:31.830 --> 00:00:34.060
이 기능을 구분해주는 것이

00:00:34.060 --> 00:00:38.320
첫 문장의 시작 부분입니다

00:00:38.320 --> 00:00:40.540
이 요청문은 GET 메소드를 사용합니다

00:00:40.540 --> 00:00:43.680
이는 서버가 우리에게 어떤 데이터를
보내주기 바란다는 뜻입니다

00:00:43.680 --> 00:00:46.110
다른 예로는 POST 메소드가 있는데

00:00:46.110 --> 00:00:49.530
우리가 보낸 데이터를 저장하라는
의미를 가지고 있습니다

00:00:49.530 --> 00:00:51.430
이 보다 더 많은 메소드들이
존재하는데

00:00:51.430 --> 00:00:54.660
REST API를 학습할 때 
더하겠습니다

00:00:54.660 --> 00:00:56.910
원래 요청문으로 돌아와서

00:00:56.910 --> 00:00:59.790
메소드 이후에는 우리가
얻으려고 하는 문서의

00:00:59.790 --> 00:01:01.550
경로를 지정해줍니다

00:01:01.550 --> 00:01:03.270
여기 보시면 우리는 Kitty.jpg 파일을 원하고

00:01:03.270 --> 00:01:07.770
이는 pictures 디렉토리에 있습니다

00:01:07.770 --> 00:01:10.800
마지막에는 저희가 사용하는 HTTP의

00:01:10.800 --> 00:01:12.480
버전이 명시되어 있습니다

00:01:12.480 --> 00:01:16.740
HTTP/1.1이 가장 널리 쓰이지만

00:01:16.740 --> 00:01:21.000
HTTP/2가 새로운 기준으로

00:01:21.000 --> 00:01:23.280
따라 잡고 있습니다

00:01:23.280 --> 00:01:24.850
이는 나중에 더 살펴보겠습니다

00:01:24.850 --> 00:01:27.420
Surma 가 HTTP 요청의 다른

00:01:27.420 --> 00:01:30.320
부분을 더 보여줄 것입니다

