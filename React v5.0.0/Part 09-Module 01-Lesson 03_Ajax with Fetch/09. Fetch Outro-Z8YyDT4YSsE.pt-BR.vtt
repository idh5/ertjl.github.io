WEBVTT
Kind: captions
Language: pt-BR

00:00:00.133 --> 00:00:03.434
Acabamos de ver como fazer
requisições com o Fetch API.

00:00:03.467 --> 00:00:06.100
-Ele é ótimo porque...
-Prontinho!

00:00:06.133 --> 00:00:09.234
Nossa! Miriam, parece ótimo.
Muito obrigado.

00:00:09.267 --> 00:00:10.701
Tomara que sua mãe goste.

00:00:10.734 --> 00:00:12.701
Tenho certeza de que vai.
Obrigado.

00:00:13.734 --> 00:00:15.801
Se ela não gostar,
sobra mais para mim.

00:00:16.200 --> 00:00:17.467
Muito bem.

00:00:18.000 --> 00:00:20.167
Vamos falar
sobre requisições assíncronas.

00:00:20.200 --> 00:00:23.167
O novo Fetch API é ótimo
sob vários aspectos.

00:00:23.200 --> 00:00:26.667
Você faz uma requisição complicada,
com cabeçalho personalizado e cache,

00:00:26.701 --> 00:00:29.801
ou algo simples,
apenas com o URL para o recurso.

00:00:29.834 --> 00:00:31.701
Há outros cabeçalhos,
requisições

00:00:31.734 --> 00:00:35.968
e interfaces de resposta,
mas são com base em promessa.

00:00:36.000 --> 00:00:39.501
Isso ajuda a criar
chamadas assíncronas no código.

00:00:39.534 --> 00:00:40.634
No passado,

00:00:40.667 --> 00:00:43.367
fazer chamadas assíncronas
era um tédio,

00:00:43.400 --> 00:00:45.534
mas, graças ao novo Fetch API,

00:00:45.567 --> 00:00:47.033
tudo ficou bem mais fácil.

