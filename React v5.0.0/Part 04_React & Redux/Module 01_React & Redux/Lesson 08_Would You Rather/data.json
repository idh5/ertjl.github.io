{
  "data": {
    "lesson": {
      "id": 650347,
      "key": "78a0081e-2af5-4961-95b0-b473fe5209b7",
      "title": "Would You Rather?",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In the \"Would You Rather?\" Project, you'll solidify your understanding of Redux by building a web app that lets a user play the “Would You Rather?” game.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/78a0081e-2af5-4961-95b0-b473fe5209b7/650347/1544026539205/Would+You+Rather%3F+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/78a0081e-2af5-4961-95b0-b473fe5209b7/650347/1544026536718/Would+You+Rather%3F+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": {
        "key": "431ebfc2-0e1b-485c-9bfa-07de945a3612",
        "version": "1.0.0",
        "locale": "en-us",
        "duration": 80640,
        "semantic_type": "Project",
        "title": "Would You Rather...?",
        "description": "## Step 1\n\nBefore submitting, please verify that your project:\n\n1. Meets specification according to the project [rubric](https://review.udacity.com/#!/rubrics/1567/view).\n2. Includes all of the files necessary to install and launch your web application on a local web server. For files that include JSX, please refrain from using the `.jsx` extension (you can prefer `.js`). You can assume that your reviewer will have npm installed on their machine.\n3. Adheres to our [HTML](http://udacity.github.io/frontend-nanodegree-styleguide/index.html), [CSS](http://udacity.github.io/frontend-nanodegree-styleguide/css.html), [JavaScript](http://udacity.github.io/frontend-nanodegree-styleguide/javascript.html), and [Git](https://udacity.github.io/git-styleguide/) style guidelines.\n\n## Step 2\n\nIf you choose to develop your project in your Workspace, you can submit directly from your Workspace. When you're ready to submit, just click the \"Submit Project\" button.\n\nIf you choose to develop on your local machine, you will need to:\n\n1. Push your project to GitHub, making sure to push the master branch.\n2. On the project submission page choose the option \"Submit with GitHub\"\n3. Select the repository for this project (you may need to connect your GitHub account first).\n\n## Project Submission Checklist\n\n**Before submitting your project, please review and confirm the following items.** \n<input type=\"checkbox\"> I am confident all rubric items have been met and my project will pass as submitted.\n<input type=\"checkbox\"> Project builds correctly without errors and runs.\n<input type=\"checkbox\"> All required functionality exists and my project behaves as expected per the project's specifications.\n\n**Once you have checked all these items, you are ready to submit!**\n",
        "is_public": true,
        "summary": null,
        "forum_path": "",
        "rubric_id": "2017",
        "terminal_project_id": null,
        "resources": null,
        "image": null
      },
      "lab": null,
      "concepts": [
        {
          "id": 565039,
          "key": "7c13a6d6-e311-4887-b8f9-ed9b43065023",
          "title": "Project Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7c13a6d6-e311-4887-b8f9-ed9b43065023",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 573547,
              "key": "a27e5549-82f4-4494-a07f-a60b0f2a9113",
              "title": "Project: Would You Rather?",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "QC4KzMjzUVY",
                "china_cdn_id": "QC4KzMjzUVY.mp4"
              }
            },
            {
              "id": 565040,
              "key": "acef8fff-8b96-4d01-b264-2d02e3e628f4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Project Overview\n\nIn the \"Would You Rather?\" Project, you'll build a web app that lets a user play the “Would You Rather?” game. The game goes like this: A user is asked a question in the form: “Would you rather [_option A_] or [_option B_] ?”. Answering \"neither\" or \"both\" is against the rules. \n\nIn your app, users will be able to answer questions, see which questions they haven’t answered, see how other people have voted, post questions, and see the ranking of users on the leaderboard.\n\n## Why this project?\n\nThis project will solidify your understanding of React and Redux while giving you a chance to express your creativity. You’ll practice improving the predictability of your application’s state; establish strict rules for getting, listening, and updating the store; and identify what state should live inside of Redux and what state should live inside of React components.",
              "instructor_notes": ""
            },
            {
              "id": 565045,
              "key": "13bbf02c-b87d-43d1-b108-491e17e06942",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Get the Project\n\nYou have two options to start developing this project:\n* develop using your preconfigured Workspace\n* develop locally on your own computer\n\nYour Workspace is a development environment integrated into the Udacity Classroom. You can both develop your entire app in your Workspace as well as submit your project to be reviewed. For more information about your Workspace, check out the Your Project Workspace page.\n\n## Starter Code\n\nThe [starter code](https://github.com/udacity/reactnd-project-would-you-rather-starter) will consist of a `_DATA.js` file, which represents a fake database and contains methods that let you access the data. The `README` file outlines how the data is stored and details the methods you can use to access the database.\n\nThe only thing you need to edit in the ` _DATA.js` file is the value of `avatarURL`. Each user should have an avatar, so you’ll need to add a path to each user’s avatar. \n\nUsing the provided starter code, you will build a React/Redux front end for the application.\n",
              "instructor_notes": ""
            },
            {
              "id": 565049,
              "key": "7b53f845-cc6c-432b-9d99-2b35e9acb101",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# App Functionality\n\nThe person using your application should have a way of impersonating/logging in as an existing user. (This could be as simple as having a login box that appears at the root of the application that lets the user select a name from the list of existing users. Alternatively, you could create your own account creation process to allow a user to sign up for an account.) Your application should work correctly regardless of which user is selected. Once the user logs in, the home page should be shown. \n\nWe always want to make sure we know who the logged in user is, so information about the logged in user should appear on the page. If someone tries to navigate anywhere by entering the address in the address bar, the user is asked to sign in and then the requested page is shown. The application allows the user to log out and log back in.\n\nOnce the user logs in, the user should be able to toggle between his/her answered and unanswered polls on the home page, which is located at the root. The polls in both categories are arranged from the most recently created (top) to the least recently created (bottom). The unanswered questions should be shown by default, and the name of the logged in user should be visible on the page.\n\nWhat would be the point of seeing answered and unanswered polling questions if we couldn’t actually vote or see the results? Each polling question should link to the details of that poll. The details of each poll should be available at `questions/:question_id`.  \n\nWhen a poll is clicked on the home page, the following is shown:\n\n1. Text “Would You Rather”;\n2. Avatar of the user who posted the polling question; and\n3. Two options.\n\nFor answered polls, each of the two options contains the following:\n\n1. Text of the option;\n2. Number of people who voted for that option; and\n3. Percentage of people who voted for that option.\n\nThe option selected by the logged-in user should be clearly marked. \n\nSince we want to make sure our application creates a good user experience, the application should show a 404 page if the user is trying to access a poll that does not exist. (Please keep in mind that newly created polls will not be accessible at their url because of the way the backend is set up in this application.) It should also display a navigation bar so that the user can easily navigate anywhere in the application.\n\nSo what happens when someone votes in a poll? Upon voting in a poll, all of the information of an answered poll should be displayed. The user’s response should be recorded and clearly visible on the poll details page. Users can only vote once per poll; they shouldn’t be allowed to change their answer after they’ve voted -- no cheating allowed! When the user comes back to the home page, the polling question should appear in the “Answered” column.\n\nIt would be no fun to vote in polls if we couldn’t post our own questions! The form for posting new polling questions should be available at the `/add` route. The application should show the text “Would You Rather” and have a form for creating two options. Upon submitting the form, a new poll should be created,  the user should be taken to the home page, and the new polling question should appear in the correct category on the home page.\n\nBut how can we know how many questions each user has asked and answered? Let’s get some healthy competition going here! The application should have a leaderboard that’s available at the `/leaderboard` route. Each entry on the leaderboard should contain the following:\n\n1. User’s name;\n2. User’s picture;\n3. Number of questions the user asked; and\n4. Number of questions the user answered\n\nUsers should be ordered in descending order based on the sum of the number of questions they’ve asked and the number of questions they’ve answered. The more questions you ask and answer, the higher up you move.\n\nThe user should be able to navigate to the leaderboard, to a specific question, and to the form that allows the user to create a new poll *both* from within the app and by typing in the address into the address bar. To make sure we’re showing the data that is relevant to _the user_, the application should require the user to be signed in order to access those pages.",
              "instructor_notes": ""
            },
            {
              "id": 565075,
              "key": "5f5e3803-e92b-4518-b0f5-a673aa2d3ef6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# App Architecture \n\nBy walking through the Planning Stage and the Coding Stage of the Chirper Project, we’ve given you a useful template for building Redux applications. We recommend using this template for building your “Would You Rather?” Project. Remember that planning your project and its architecture _before_ starting to code will save you a lot of debugging time later on! \n\nFor this application, most of the application’s state should be managed by Redux. You’ll find that there are situations where it makes sense to store state outside of the Redux store. Check out what Dan Abramov, the creator of Redux, thinks about  [choosing between Redux's store and React's state](https://github.com/reactjs/redux/issues/1287).\n\nYour application’s store should be the source of truth, and components should read the necessary state from the store instead of having their own versions of the same state. There should be no direct API calls in components’ lifecycle methods, and updates should be triggered by dispatching action creators.\n\nYour application’s code should be structured and organized in a logical way, and your components should be modular and reusable.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 565081,
          "key": "6a600a1d-d8c8-4ce9-a90d-4f581fa38c87",
          "title": "Project Instructions & Rubric",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6a600a1d-d8c8-4ce9-a90d-4f581fa38c87",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 565084,
              "key": "424304c9-7183-4b0f-80b4-09d799b5b306",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Project Instructions\n\n1) Use React to build your application’s UI. Remember that composition is key. It’s rarely a mistake to break a component into smaller pieces. Look for opportunities to reuse your components. \n\n2) We recommend using [Create React App](https://github.com/facebookincubator/create-react-app) to generate your submission since it's the easiest way to ensure you have everything the project reviewer will need to install and run your app.\n\n3) By walking through the Planning Stage and the Coding Stage of the Chirper Project, we’ve given you a useful template for building Redux applications. We recommend using this template for building your “Would You Rather?” Project. Remember that planning your project and its architecture before starting to code will save you a lot of debugging time later on!\n\n4) Use Redux to manage your application state. For this application, most of the application’s state should be managed by Redux. You may use component state to handle form input fields and controlled components. Otherwise, the rest of the state for your application should be controlled by your reducers.\n\n5) While the focus (and specification) of this project is based on functionality rather than styling, please ensure that your app is presentable and easy to navigate.\n\n6) Please carefully test your app against the [rubric](https://review.udacity.com/#!/rubrics/1567/view) to make sure *all* of the rubric requirements are met. Your project must meet all of the rubric criteria in order to pass.",
              "instructor_notes": ""
            },
            {
              "id": 565086,
              "key": "ad72f41b-0882-4ed8-9ead-7bd39dd47f1f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Step 1\n\nBefore submitting, please verify that your project:\n\n1. Meets specification according to the project [rubric](https://review.udacity.com/#!/rubrics/1567/view).\n2. Includes all of the files necessary to install and launch your web application on a local web server. For files that include JSX, please refrain from using the `.jsx` extension (you can prefer `.js`). You can assume that your reviewer will have npm installed on their machine.\n3. Adheres to our [HTML](http://udacity.github.io/frontend-nanodegree-styleguide/index.html), [CSS](http://udacity.github.io/frontend-nanodegree-styleguide/css.html), [JavaScript](http://udacity.github.io/frontend-nanodegree-styleguide/javascript.html), and [Git](https://udacity.github.io/git-styleguide/) style guidelines.\n\n# Step 2\n\nIf you choose to develop your project in your Workspace, you can submit directly from your Workspace. When you're ready to submit, just click the \"Submit Project\" button.\n\nIf you choose to develop on your local machine, you will need to:\n\n1. Push your project to GitHub, making sure to push the master branch.\n2. On the project submission page choose the option \"Submit with GitHub\"\n3. Select the repository for this project (you may need to connect your GitHub account first).",
              "instructor_notes": ""
            },
            {
              "id": 668833,
              "key": "50c34a23-8934-455b-9531-ca443bfbec20",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Sample Project\n\nWe encourage you to get creative with your projects by adding additional functionality and/or styling (after you've ensured that the project meets all of the specifications in the rubric)! Here's an example:\n",
              "instructor_notes": ""
            },
            {
              "id": 668835,
              "key": "630139b2-d8b8-4ff6-bb17-568b1ee6fd7e",
              "title": "Would-You-Rather-Demo-1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xfmSkLAL__Q",
                "china_cdn_id": "xfmSkLAL__Q.mp4"
              }
            }
          ]
        },
        {
          "id": 573548,
          "key": "31b3640f-c6ec-42f0-9019-773e2747359a",
          "title": "Approaching a Project",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "31b3640f-c6ec-42f0-9019-773e2747359a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 673129,
              "key": "b258cca3-61e6-487b-b2c1-3de92905979c",
              "title": "Approaching A Project",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tTgtkLzYncs",
                "china_cdn_id": "tTgtkLzYncs.mp4"
              }
            },
            {
              "id": 673128,
              "key": "79ac3b9c-54c9-4347-bb18-1389dca556ef",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Remember, if you get stuck, use your mentorship services and [Knowledge](https://knowledge.udacity.com/).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 565088,
          "key": "d96fe09a-f389-4d4b-909d-e911d722f92f",
          "title": "Your Project Workspace",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d96fe09a-f389-4d4b-909d-e911d722f92f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 565089,
              "key": "bf686c4d-5829-4104-a1d6-bf9a85771c39",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Your Project Workspace\n\nA Workspace is a development environment integrated into the Udacity Classroom. Your Workspace is backed by a Linux virtual machine (Ubuntu). You have access to a terminal, so you have complete control over installing packages and modifying content.\n\nBelow is what your Workspace will look like:",
              "instructor_notes": ""
            },
            {
              "id": 569257,
              "key": "d2d5fde4-5216-483d-9682-beb6b3222eda",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/March/5ab1db32_screen-shot-2018-03-20-at-9.07.45-pm/screen-shot-2018-03-20-at-9.07.45-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d2d5fde4-5216-483d-9682-beb6b3222eda",
              "caption": "",
              "alt": "",
              "width": 2652,
              "height": 1400,
              "instructor_notes": null
            },
            {
              "id": 569235,
              "key": "40f4c691-5e32-433d-b6b6-4954da9272b4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Preservation Information\n\nThe first time you open your Workspace, a new virtual machine is created just for you. Any files that you modify in `/home/workspace` or any new files you add in `/home/workspace` are automatically backed up and saved. The next time you come back to the Workspace, any previous changes will be preserved.\n\nIf you don't interact with the Workspace for 30 minutes, the Workspace will be suspended. The Workspace becomes idle by any of the following:\n\n* not interacting with the browser tab of the Workspace\n* closing the browser tab with the Workspace\n* if your laptop goes to sleep\n* etc",
              "instructor_notes": ""
            },
            {
              "id": 569237,
              "key": "e4c5c9c5-cf66-49fa-bc80-8332f25cdf5a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Restoring Your Workspace\n\nIf your Workspace has been suspended after a period of inactivity, just click the \"Wake Up Workspace\" button to restore it. Remember that none of your data is lost. ",
              "instructor_notes": ""
            },
            {
              "id": 569238,
              "key": "81df3e3a-67de-46b2-92f7-2dd05e015c9f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Project Development\n\nThink of your Workspace as a normal computer:\n\n* Open up the files you need to edit (saving is done automatically).\n* Open terminal windows as necessary.\n  - The terminal should start at `/home/workspace`, so make sure to `cd` to the correct directory as necessary.\n* Start the project\n    - Use Create React App to scaffold your project\n    - Move the starter file into your project by right clicking the starter file and selecting a new location for it \n    - `cd` into your project\n    - run `npm start`",
              "instructor_notes": ""
            },
            {
              "id": 569252,
              "key": "07a2ef92-4074-4ed7-9602-7200bb473878",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/March/5ab1d687_screen-shot-2018-03-20-at-8.43.54-pm/screen-shot-2018-03-20-at-8.43.54-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/07a2ef92-4074-4ed7-9602-7200bb473878",
              "caption": "_To view your project, click the Open Preview Tab._",
              "alt": "How to view the project in a Workspace",
              "width": 471,
              "height": 255,
              "instructor_notes": null
            },
            {
              "id": 569251,
              "key": "8f651446-bc4d-4dbf-bb29-13563d03b9a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "* To view your project, click the \"Open Preview Tab\" button located in the lower left of the screen.\n  - Running `npm start` causes Create React App to display a URL of `http://localhost:3000/`. Because your Workspace is running in a virtual machine, typing `http://localhost:3000/` into your browser will not access the local host of the VM, so make sure to use the \"Open Preview Tab\" button.\n* To submit your project, click the \"Submit Project\" button located in the lower right side of the screen.",
              "instructor_notes": ""
            },
            {
              "id": 569253,
              "key": "68167111-14f3-47c5-9531-27ba715ed754",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Development Choice\n\nWe've created this Workspace for you so you can enjoy an integrated learning experience by staying in the classroom, working on your project, and submitting directly from here!\n\nYou always have the option to develop your project locally, if you choose. ",
              "instructor_notes": ""
            },
            {
              "id": 569254,
              "key": "851f8267-f342-4849-8073-61c447263b29",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Unable to Access Your Workspace?\n\nIf you are unable to access your Workspace in the Classroom it could be because you have \"3rd Party Cookies\" disabled in your browser. Workspaces need to set a \"3rd party cookie\" to enable access.\n\nCheck out this [Workspace troubleshooting FAQ](https://udacity.zendesk.com/hc/en-us/articles/115004653246) for information on how to enable 3rd party cookies for your browser.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 713630,
          "key": "6252330c-b3de-4f63-b35d-87430fcc36f2",
          "title": "Step by Step Guide - React & Redux Apps",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6252330c-b3de-4f63-b35d-87430fcc36f2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 713631,
              "key": "204ce069-38e7-4c2c-b163-ca2ffeabefba",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# *Template for Building React/ Redux Projects*\n\n## Planning Stage  📐\n\n### Step 1 - Draw All of the Views of the App\nWe need to determine the look and functionality of each view in your app. One of the best approaches is to draw each view of the app on paper so that you'll have a good idea of what information and data you're planning to have on each page.\n\nInstead of paper and pencil, you can be a bit more digital and use [software for creating mockups](https://codingsans.com/blog/mockup-tools). If you were given project specifications, check your mock against them to make sure that you have all of the required features.\n\n### Step 2 - Break Each View Into a Hierarchy of Components\n\nFor this step,\n\n* draw boxes around every component; and\n* arrange the components into a hierarchy\n\n### Step 3 - Determine What Events Happen in the App\n\nWe need to take a look at what is happening in each component. Let's determine what actions the app or the user is performing on the data. Is the data being set, modified, or deleted?...then we'll need an action to keep track of that event!\n\n### Step 4  - Determine What Data Lives in the Store\n\nRemember that the main problems that Redux (and the react-redux bindings!)  was meant to solve were:\n\n* Propagation of props through the entire component tree.\n* Ensuring consistency and predictability of the state across the app.\n\nAccording to Dan Abramov, the creator of Redux, we should follow the following principle for determining whether to store a piece of data in the store or in a React component:\n\n> \"Use Redux for state that matters globally or is mutated in complex ways… The rule of thumb is: do whatever is less awkward.\"\n\nTake a look at [Organizing State](https://redux.js.org/faq/organizing-state) and [How to choose between Redux's store and React's state?](https://github.com/reactjs/redux/issues/1287) for further information about this.\n\n### Coding Stage🔨\n\n**Step 1** - Design the [shape of the state](https://redux.js.org/recipes/structuringreducers/normalizingstateshape) and [create reducers](https://redux.js.org/basics/reducers). \n\n**Step 2** - Create a [Redux store](https://redux.js.org/api/store). Connect logger middleware (optional) and Redux Thunk middleware (alternatively, you can use Redux Saga, etc.).\n\n**Step 3** - For each view that needs access to the store, create the component and connect it to the store.\n\n**Step 4** - For the component you created in the last step, create actions and action creators. Check that everything works correctly. \n\n**Step 5** - Repeat Step 3 & Step 4 for each component that needs access to the store.\n\n**Step 6** - Create presentational components and confirm that everything works correctly. \n\n**Step 7** - Add React Router.\n\n**Step 8** - Add finishing touches and make sure the project meets the [rubric](https://review.udacity.com/#!/rubrics/1567/view).\n\nRemember, this is just a template. As you build more projects, you'll modify this template to suit your needs. You may also find it more intuitive to use a different approach. Regardless of the approach you take, however, **planning out your app is imperative to success**. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 568219,
          "key": "a10f4666-9fd8-4900-910a-85da5d6632d0",
          "title": "Would You Rather Workspace",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a10f4666-9fd8-4900-910a-85da5d6632d0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 568221,
              "key": "d45619aa-6b12-4b01-b196-0cb9c4fd8bfe",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewbcd4e3e5",
              "pool_id": "webterminal",
              "view_id": "bcd4e3e5-d9b8-4dda-90d7-8cb407fa973f",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": 3000,
                    "ports": [],
                    "userCode": "",
                    "openFiles": [
                      "/home/workspace/_DATA.js"
                    ],
                    "showFiles": true,
                    "allowClose": true,
                    "allowSubmit": true,
                    "actionButtonText": "Preview"
                  },
                  "kind": "react"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "starter_files",
      "reason": "prefer master_archive_id"
    }
  ]
}