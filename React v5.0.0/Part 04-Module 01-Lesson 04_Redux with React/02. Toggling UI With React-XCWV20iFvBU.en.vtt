WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.220
As of right now, the only difference between

00:00:02.220 --> 00:00:06.435
our Vanilla JavaScript app and our React application is,

00:00:06.434 --> 00:00:08.535
up here we can toggle a todo,

00:00:08.535 --> 00:00:11.919
but with React, we haven't added in that functionality yet.

00:00:11.919 --> 00:00:13.724
So let's go ahead and do that now.

00:00:13.724 --> 00:00:16.109
So inside of our todos component,

00:00:16.109 --> 00:00:20.109
let's come in here and we want to add a new method.

00:00:20.109 --> 00:00:22.079
We will call it toggleItem.

00:00:22.079 --> 00:00:25.109
It's going to take in an id,

00:00:25.109 --> 00:00:29.864
and then it's going to run this.props.store.dispatch,

00:00:29.864 --> 00:00:32.339
and the action we want to dispatch is going to be

00:00:32.340 --> 00:00:35.145
our toggleTodoAction will parse in the id.

00:00:35.145 --> 00:00:37.470
And then now, what we can do is,

00:00:37.469 --> 00:00:40.048
we can add that as a prop to list as well.

00:00:40.048 --> 00:00:44.250
So we'll say toggle is going to be this.toggleItem.

00:00:44.250 --> 00:00:46.590
And then now, inside of our list component,

00:00:46.590 --> 00:00:55.328
what we want to do is let's add an onClick handler to our span element here.

00:00:55.328 --> 00:00:58.890
And this is going to be really an optional parameter because we're only going to use

00:00:58.890 --> 00:01:02.753
it inside of our todos component rather than our goals component.

00:01:02.753 --> 00:01:04.230
So we'll say is,

00:01:04.230 --> 00:01:07.844
if props.toggle is a thing,

00:01:07.844 --> 00:01:10.629
then we want to go ahead and invoke it,

00:01:10.629 --> 00:01:14.479
parsing in the id.

00:01:14.480 --> 00:01:16.700
And what we also want to do is,

00:01:16.700 --> 00:01:20.750
we want to update the style of this specific span element.

00:01:20.750 --> 00:01:23.915
So what we'll say is textDecoration,

00:01:23.915 --> 00:01:26.834
and this is very similar to what we did in our Vanilla JavaScript app.

00:01:26.834 --> 00:01:31.820
We'll say, textDecoration it's going to be if item.complete is true,

00:01:31.819 --> 00:01:35.014
then it will be line-through and if not,

00:01:35.015 --> 00:01:37.234
then it will just be none.

00:01:37.234 --> 00:01:42.469
So now, if we take a look at our application, we can say,

00:01:42.469 --> 00:01:48.765
"Walk the dog", and then we should also be able to click on it in order to toggle it.

00:01:48.765 --> 00:01:50.909
Now, the last thing I want to do is,

00:01:50.909 --> 00:01:54.629
we aren't going to use our Vanilla JavaScript app anymore,

00:01:54.629 --> 00:02:00.670
so we can actually delete all of the code associated with that.

00:02:00.670 --> 00:02:04.694
So, that is all of this dump code right here as well as this store.subscribe.

00:02:04.694 --> 00:02:06.975
So we can delete all of that,

00:02:06.974 --> 00:02:09.674
and then at the top of our app here,

00:02:09.675 --> 00:02:13.800
we can delete this UI code right here.

00:02:13.800 --> 00:02:17.535
So, now what we have is just a single div

00:02:17.534 --> 00:02:22.359
with an id of app that we're going to be mounting our React app to.

