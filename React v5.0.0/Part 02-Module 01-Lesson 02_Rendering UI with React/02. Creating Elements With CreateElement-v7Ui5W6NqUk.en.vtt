WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.815
So we've said that instead of using templates to describe your user interface,

00:00:04.815 --> 00:00:07.110
React is going to use elements.

00:00:07.110 --> 00:00:09.150
What do we mean when we say that?

00:00:09.150 --> 00:00:11.730
So I've got a really basic file here,

00:00:11.730 --> 00:00:15.390
I've got React, I have ReactDOM.

00:00:15.390 --> 00:00:19.755
For now, don't worry about where this file comes from or trying to do this on your own.

00:00:19.754 --> 00:00:21.074
We're just going to discuss

00:00:21.074 --> 00:00:25.125
a few core concepts before we talk about how to make all of this happen.

00:00:25.125 --> 00:00:28.170
The important thing to happen is that the browser on the left

00:00:28.170 --> 00:00:31.170
is going to reflect whatever I type in the editor on

00:00:31.170 --> 00:00:37.800
the right so let's create a new React element using React.CreateElement.

00:00:37.799 --> 00:00:43.064
This is a top level API call that React uses to create these elements.

00:00:43.064 --> 00:00:45.750
It looks kind of similar to the documents

00:00:45.750 --> 00:00:48.645
create element method, but it's a little bit different.

00:00:48.645 --> 00:00:53.040
The first argument is the tag name of the element that we want to use.

00:00:53.039 --> 00:00:54.630
So we'll just create a div.

00:00:54.630 --> 00:00:58.057
The second argument we'll talk about in just a little bit,

00:00:58.057 --> 00:01:03.460
and the third argument is going to be some text that we'll put inside the div.

00:01:03.460 --> 00:01:06.909
So, how do we actually get this element into the page?

00:01:06.909 --> 00:01:09.098
That's where ReactDom comes into play.

00:01:09.099 --> 00:01:13.010
ReactDOM is just one way to use the React library.

00:01:13.010 --> 00:01:15.430
In React, the process of deciding what to

00:01:15.430 --> 00:01:18.820
render is completely decoupled from actually rendering it.

00:01:18.819 --> 00:01:21.399
The decoupling makes it possible to render stuff on

00:01:21.400 --> 00:01:25.795
the server on native devices and even in VR environments.

00:01:25.795 --> 00:01:29.560
In this lesson, we use ReactDom because we're working in the browser.

00:01:29.560 --> 00:01:37.680
So we'll say, ReactDOM.render my element into the dom node,

00:01:37.680 --> 00:01:40.320
in this case, we will use the root element,

00:01:40.319 --> 00:01:42.119
that's already on the page,

00:01:42.120 --> 00:01:43.785
so let's save this.

00:01:43.784 --> 00:01:46.019
And now, we can see in the browser we have

00:01:46.019 --> 00:01:48.869
the "hello world" message displayed in this div.

00:01:48.870 --> 00:01:52.984
So, you might look at this line and think what is this element?

00:01:52.984 --> 00:01:55.099
Let's take a look in the console.

00:01:55.099 --> 00:01:57.299
So we'll just open up Chrome's inspector here,

00:01:57.299 --> 00:01:58.709
and we see that really this is

00:01:58.709 --> 00:02:02.579
just a plain JavaScript object with a bunch of different properties.

00:02:02.579 --> 00:02:05.356
It has key, props type,

00:02:05.356 --> 00:02:06.540
you recognize this one,

00:02:06.540 --> 00:02:10.094
this was the string that we gave it for the type of the element,

00:02:10.094 --> 00:02:13.838
and then it has a bunch of private properties down here.

