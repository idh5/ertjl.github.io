WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.180
So, let's talk a little bit about what it means to use

00:00:03.180 --> 00:00:07.650
composition to build user interfaces and how React let's us do that.

00:00:07.650 --> 00:00:10.350
So, I'm starting here with this dot create

00:00:10.349 --> 00:00:14.969
React application and I'm going to remove some stuff that

00:00:14.970 --> 00:00:18.315
we just don't need and I'm going to paste in

00:00:18.315 --> 00:00:22.734
the ContactList component that we've been working with up until this point.

00:00:22.734 --> 00:00:26.494
And instead of rendering all these stuff inside of the App,

00:00:26.495 --> 00:00:29.692
what I'm going to render is the ContactList.

00:00:29.692 --> 00:00:32.270
So, we can already see how easy it is

00:00:32.270 --> 00:00:35.330
to create our own custom elements as we've talked about before,

00:00:35.329 --> 00:00:37.054
and compose them together.

00:00:37.054 --> 00:00:42.424
We can take the ContactList and put one of those right inside this application.

00:00:42.424 --> 00:00:47.402
Encapsulating many elements inside of a component gives us a few advantages.

00:00:47.402 --> 00:00:51.133
For one, it's really easy to reuse all of those elements.

00:00:51.133 --> 00:00:55.400
For example, if I wanted multiple copies of the ContactsLists,

00:00:55.399 --> 00:00:57.859
I could just copy and paste this line three

00:00:57.859 --> 00:01:01.899
times and get three identical copies of those elements.

00:01:01.899 --> 00:01:05.340
Another nice property of these components is that they have

00:01:05.340 --> 00:01:08.250
a very clean interface so I can configure

00:01:08.250 --> 00:01:12.209
different components differently just by giving them different props.

00:01:12.209 --> 00:01:14.849
Take for example, our ContactList.

00:01:14.849 --> 00:01:19.646
Let's say, in the first ContactList I want to show Tyler, Karen and Richard,

00:01:19.647 --> 00:01:21.837
and in the second contact list,

00:01:21.837 --> 00:01:25.653
I want to show a completely different set of contacts.

00:01:25.653 --> 00:01:28.950
So in this case, what I would actually like to do is I'd like to be able

00:01:28.950 --> 00:01:32.496
to configure these ContactLists independently of one another.

00:01:32.495 --> 00:01:35.344
It would be nice if ContactList had a prop,

00:01:35.344 --> 00:01:38.530
some way that we can pass the data in instead of

00:01:38.530 --> 00:01:42.370
hard-coding it inside of ContactList render method.

00:01:42.370 --> 00:01:44.260
What if ContactList had

00:01:44.260 --> 00:01:49.158
a contacts prop and inside of this prop we can pass an array of people?

00:01:49.158 --> 00:01:52.629
Likewise, we can pass a completely different array to

00:01:52.629 --> 00:01:56.811
our second ContactList and configure them completely independently of one another.

00:01:56.811 --> 00:02:01.269
So, let's go and grab our ContactList up here and instead of hard-coding it,

00:02:01.269 --> 00:02:08.123
we're going to get our list of people from this dot props dot context.

00:02:08.123 --> 00:02:12.479
So, we can see that each component gets an object called this dot props.

00:02:12.479 --> 00:02:18.759
The properties of this dot props are the props that were passed into the component.

00:02:18.759 --> 00:02:21.212
So, we can paste our people list down here,

00:02:21.212 --> 00:02:23.715
likewise in this ContactsList,

00:02:23.715 --> 00:02:26.729
we will have a completely different set of contacts.

00:02:26.729 --> 00:02:28.604
The first one will be Amanda,

00:02:28.604 --> 00:02:35.009
the second one will be Mikenzi and the third one will be Ryan.

00:02:35.009 --> 00:02:39.864
And we will get rid of this last ContactList here and now if we save this,

00:02:39.865 --> 00:02:43.355
and you can see over here that we were able to reuse

00:02:43.354 --> 00:02:47.963
the elements from ContactList but configure them completely separately.

00:02:47.963 --> 00:02:51.830
This makes it really easy to reuse these components by

00:02:51.830 --> 00:02:55.853
just passing in little bits of configuration via the props.

00:02:55.853 --> 00:02:57.605
So, these two principles,

00:02:57.604 --> 00:03:01.369
the ability to encapsulate a bunch of elements in a component,

00:03:01.370 --> 00:03:04.460
and then easily reuse them, and then also,

00:03:04.460 --> 00:03:09.455
the ability to configure those components differently and independently via props,

00:03:09.455 --> 00:03:12.680
are two really important and fundamental keys

00:03:12.680 --> 00:03:15.599
to understanding the composition model of React.

