WEBVTT
Kind: captions
Language: ko

00:00:00.300 --> 00:00:02.070
한 페이지를 보여주기 위한

00:00:02.070 --> 00:00:05.250
평균 요청의 개수는 꾸준히 증가하고

00:00:05.250 --> 00:00:07.830
최근에는 100을 넘어섰습니다

00:00:07.830 --> 00:00:11.610
이 말은 웹사이트가 100개가 넘는 요청문을

00:00:11.610 --> 00:00:12.870
페이지 하나에 날린다는 뜻이죠

00:00:12.870 --> 00:00:14.880
뭔가 미쳐 돌아가고있습니다

00:00:14.880 --> 00:00:17.280
우리는 HTTP/1이 많은 수의 요청문에서는

00:00:17.280 --> 00:00:18.810
잘 동작하지 않는다는 것을 알고있습니다

00:00:18.810 --> 00:00:21.990
다행히 HTTP/2는 이러한 문제를 해결할 수 있습니다

00:00:21.990 --> 00:00:24.030
HTTP/1의 문제점을 다시 살펴보겠습니다

00:00:24.030 --> 00:00:27.090
그리고 어떻게 HTTP/2가 해결하는지도 보겠습니다

00:00:27.090 --> 00:00:29.460
많은 수의 요청문이 문제를 일으키는 이유는

00:00:29.460 --> 00:00:31.710
Head-of-line blocking 때문입니다

00:00:31.710 --> 00:00:34.170
앞서 다뤘지만, 너무 중요한 문제이기 때문에

00:00:34.170 --> 00:00:36.330
다시 한 번 복습하겠습니다

00:00:36.330 --> 00:00:39.630
HOL은 하나의 요청문 때문에 다른 요청들이

00:00:39.630 --> 00:00:41.280
기다리는 현상을 말합니다

00:00:41.280 --> 00:00:45.480
브라우저는 같은 서버에 최대 6개의 
연결을 지원합니다

00:00:45.480 --> 00:00:47.340
이 말은 6개의 요청이 동시에

00:00:47.340 --> 00:00:49.770
서버로 간다는 뜻입니다

00:00:49.770 --> 00:00:52.140
최소한, 여러분은 하나의 요청문이 보내지고

00:00:52.140 --> 00:00:55.200
그 응답문이 올 때까지 기다려야 합니다

00:00:55.200 --> 00:00:57.910
이것을 round trip이라고 부릅니다

00:00:57.910 --> 00:01:02.010
round trip의 소요시간은 보통
20에서 50 milliseconds 사이입니다

00:01:02.010 --> 00:01:03.720
'좋은' 환경에서 말이죠

00:01:03.720 --> 00:01:05.519
한 번 계산을 해볼까요?

00:01:05.519 --> 00:01:08.280
사이트가 100개의 요청을 보냅니다

00:01:08.280 --> 00:01:10.260
완벽한 로딩을 위해서요

00:01:10.260 --> 00:01:12.790
우리는 한 번에 6개의 요청을 보낼 수 있고,

00:01:12.790 --> 00:01:15.480
이 말은 바꿔말하면 각각이 17개의 요청을

00:01:15.480 --> 00:01:20.340
보내야 한다는 뜻입니다

00:01:20.340 --> 00:01:22.620
그리고 각 요청은 평균 round trip 소요 시간이

00:01:22.620 --> 00:01:25.260
35 milliseconds 라고 한다면

00:01:25.260 --> 00:01:28.530
이는 525 milliseconds 가 됩니다

00:01:28.530 --> 00:01:31.710
0.5초를 아무것도 하지않고

00:01:31.710 --> 00:01:33.540
기다리는데 소요합니다

00:01:33.540 --> 00:01:36.690
게다가 이는 요청한 파일을

00:01:36.690 --> 00:01:38.700
전송하는 것도 고려하지 않았습니다

00:01:38.700 --> 00:01:40.720
만약 큰 파일을 전송하게 되면

00:01:40.720 --> 00:01:43.110
걸리는 시간 엄청나게 커집니다

00:01:43.110 --> 00:01:45.780
또한 round trip 시간을
평균으로 사용하였는데

00:01:45.780 --> 00:01:48.540
인터넷 연결이 불안전하거나 느리면

00:01:48.540 --> 00:01:50.160
더 나빠지겠지요

00:01:50.160 --> 00:01:52.470
HOL은 웹사이트의 로딩문제에

00:01:52.470 --> 00:01:54.000
아주 심각한 영향을 줍니다

00:01:54.000 --> 00:01:55.941
하지만 HTTP/2는 문제없습니다

00:01:55.941 --> 00:01:57.741
HOL을 해결합니다!

