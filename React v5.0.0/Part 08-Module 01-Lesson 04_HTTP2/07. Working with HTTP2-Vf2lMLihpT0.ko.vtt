WEBVTT
Kind: captions
Language: ko

00:00:00.500 --> 00:00:02.520
HTTP/2는 많은 변화를
만들었습니다

00:00:02.520 --> 00:00:04.860
하지만 HTTP/1을

00:00:04.860 --> 00:00:07.440
어떻게 HTTP/2로 변경할까요?

00:00:07.440 --> 00:00:09.690
어떻게 하면 우리 유저를

00:00:09.690 --> 00:00:12.420
HTTP/2를 사용할 수 있게 할까요?

00:00:12.420 --> 00:00:15.810
이제 HOL이나 헤더 압축은

00:00:15.810 --> 00:00:18.690
간단합니다

00:00:18.690 --> 00:00:21.600
자바스크립트나 CSS 파일들을

00:00:21.600 --> 00:00:23.250
하나로 합치는 것은 이제 
불필요합니다

00:00:23.250 --> 00:00:25.410
아니 이제 상황을 악화시킬 수도
있습니다

00:00:25.410 --> 00:00:27.630
캐시 파일 업데이트를 생각해 보세요

00:00:27.630 --> 00:00:29.640
여러분이 자바스크립트 파일의 오타를 
수정하게되면

00:00:29.640 --> 00:00:32.159
여러분 유저 모두에게

00:00:32.159 --> 00:00:35.550
전체 자바스크립트 파일을 하나로
합쳐 다운받으라고 해야합니다

00:00:35.550 --> 00:00:38.730
단지 하나의 파일만 바꾸면
되는 일인데 말입니다

00:00:38.730 --> 00:00:40.890
만약 자바스크립트 파일이 
각각 분리되어 있으면

00:00:40.890 --> 00:00:44.700
그 파일에 대한 캐시를 지우면
됩니다

00:00:44.700 --> 00:00:46.830
또한 새로운 컴프레서는

00:00:46.830 --> 00:00:49.860
많은 요청이 있을수록 더 
효율적이게 됩니다

00:00:49.860 --> 00:00:53.889
더 많은 요청이 있으면 
재사용률이 높아집니다

00:00:53.889 --> 00:00:55.680
이는 많은 연결이 있을수록

00:00:55.680 --> 00:00:59.280
성능에 불리하다는 얘기입니다

00:00:59.280 --> 00:01:02.970
여러분의 자바스크립트나 CSS파일을

00:01:02.970 --> 00:01:05.040
압축해서 관리하는 것은 
좋은 아이디어입니다

00:01:05.040 --> 00:01:07.140
데이터를 줄이는 것이기 때문이죠!

00:01:07.140 --> 00:01:09.330
특히 개발도상국에서는

00:01:09.330 --> 00:01:11.160
이는 돈을 절약하게 해줍니다

00:01:11.160 --> 00:01:14.130
게다가 자바스크립트를 지연시키거나

00:01:14.130 --> 00:01:17.850
인라인으로 코딩하는 방법등은 유효합니다

00:01:17.850 --> 00:01:20.760
서비스 노동자와 오프라인 문제를 해결에

00:01:20.760 --> 00:01:22.740
시간을 투자하는것과 마찬가지입니다

00:01:22.740 --> 00:01:26.490
가장 중요한 것은 
HTTP/2는 하위 호환성을 가집니다

00:01:26.490 --> 00:01:30.840
HTTP/2가 사용가능한 서버는
HTTP/1을 사용할 수 있습니다

00:01:30.840 --> 00:01:35.340
HTTP/2를 사용못하는 클라이언트는
HTTP/1을 쓰면됩니다

00:01:35.340 --> 00:01:37.320
전과 마찬가지로 말이죠

00:01:37.320 --> 00:01:39.930
이런 사용자는 점점 희귀해지고 있습니다

00:01:39.930 --> 00:01:42.930
그래서 HTTP/2를 쓰길
주저하지 마세요

00:01:42.930 --> 00:01:47.850
2016년 초에 웹 트래픽의

00:01:47.850 --> 00:01:49.720
71%가 HTTP/2기반 이였습니다

00:01:49.720 --> 00:01:52.080
이제 여러분이 HTTP/2를 HTTP/1보다

00:01:52.080 --> 00:01:55.950
더 자주 사용해야 한다는 것은 
당연한 이야기 입니다

00:01:55.950 --> 00:01:59.420
이 숫자는 더 증가할테니 말이죠

