WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.169
History 视图现在看起来很棒了

00:00:04.169 --> 00:00:07.094
还有一个 AddEntry 视图

00:00:07.094 --> 00:00:08.820
看起来也很不错

00:00:08.820 --> 00:00:13.914
如果不添加导航功能的话 我们的应用就无法继续完善了

00:00:13.914 --> 00:00:17.820
首先 我们需要转到终端

00:00:17.820 --> 00:00:23.250
运行 yarn add react-navigation

00:00:23.250 --> 00:00:29.789
运行完毕后 重启应用 并回到 App.js 文件

00:00:29.789 --> 00:00:31.799
在此文件中

00:00:31.800 --> 00:00:37.380
首先导入 Platform 因为我们需要用它来进行样式设置

00:00:37.380 --> 00:00:44.505
然后从 react-navigation 中导入 TabNavigator

00:00:44.505 --> 00:00:46.995
趁机导入一些颜色

00:00:46.994 --> 00:00:50.675
从 utils/colors 导入 purple 和 white

00:00:50.676 --> 00:00:57.420
然后我们还需要添加

00:00:57.420 --> 00:01:00.660
在即将构建的标签页中显示的具体图标

00:01:00.659 --> 00:01:06.689
我们将使用 FontAwesome 和 Ionicons

00:01:06.689 --> 00:01:08.774
现在

00:01:08.775 --> 00:01:14.715
我们将创建 Tabs 组件

00:01:14.715 --> 00:01:18.870
我们可以调用 TabNavigator

00:01:18.870 --> 00:01:21.615
我们要传入的第一个对象

00:01:21.614 --> 00:01:25.204
将代表我们想在屏幕上看到的标签页

00:01:25.204 --> 00:01:26.995
输入 History

00:01:26.995 --> 00:01:32.100
我们要渲染的屏幕是 History 组件

00:01:32.099 --> 00:01:37.334
我们添加一些 navigationOptions 和 tabBarLabel

00:01:37.334 --> 00:01:40.634
它将在标签栏上显示“History”

00:01:40.635 --> 00:01:47.415
tabBarIcon 将是一个函数

00:01:47.415 --> 00:01:49.680
向其传入 tintColor

00:01:49.680 --> 00:01:53.820
稍后设置该 tintColor 我们还要渲染这个图标

00:01:53.819 --> 00:01:55.394
因此导入它

00:01:55.394 --> 00:01:59.164
name 设为 ios-bookmarks

00:01:59.165 --> 00:02:02.484
size 设为 30

00:02:02.484 --> 00:02:08.580
color 设为这个 tintColor；History 标签页设置好了

00:02:08.580 --> 00:02:10.215
现在还需要设置 AddEntry 标签页

00:02:10.215 --> 00:02:14.319
因为这是我们构建的另一个组件

00:02:14.319 --> 00:02:18.629
类似地 screen 将为 AddEntry

00:02:18.629 --> 00:02:21.030
添加一些 navigationOptions

00:02:21.030 --> 00:02:29.715
tabBarLabel 将为 Add Entry tabBarIcon 将为一个函数

00:02:29.715 --> 00:02:37.814
同样接受 tintColor 它将渲染一个 FontAwesome 图标

00:02:37.814 --> 00:02:41.384
name 为 plus-square

00:02:41.384 --> 00:02:47.039
size 为 30 color 为 tintColor

00:02:47.039 --> 00:02:49.094
这些就是我们的标签页

00:02:49.094 --> 00:02:54.060
现在我们想为这些标签页指定一些选项

00:02:54.060 --> 00:02:56.717
具体包括外观等

00:02:56.717 --> 00:03:02.564
我们将向 TabNavigator 传入一个对象作为第二个参数

00:03:02.564 --> 00:03:08.049
称之为 tabBarOptions

00:03:08.049 --> 00:03:11.340
为其设置 activeTintColor

00:03:11.340 --> 00:03:16.520
它将为所选标签页的颜色

00:03:16.520 --> 00:03:18.255
在此处输入代码

00:03:18.254 --> 00:03:20.534
如果我们位于 iOS 上

00:03:20.534 --> 00:03:24.060
则为 purple 如果不是

00:03:24.060 --> 00:03:27.860
则为 white 稍后你就会明白为何这么设置

00:03:27.860 --> 00:03:33.180
然后 在 tabBarOptions 中

00:03:33.180 --> 00:03:37.395
我们将添加一些要应用到标签栏上的样式

00:03:37.395 --> 00:03:41.250
height 为 56；对于 backgroundColor

00:03:41.250 --> 00:03:44.205
如果位于 iOS 上

00:03:44.205 --> 00:03:47.355
则为 white

00:03:47.354 --> 00:03:51.239
如果不是 则为 purple；然后设置一些阴影

00:03:51.240 --> 00:03:55.460
我直接粘贴这些代码 我们设置了 shadowColor

00:03:55.460 --> 00:03:59.670
shadowOffset、shadowRadius 和 shadowOpacity

00:03:59.669 --> 00:04:01.679
我认为看起来很不错

00:04:01.680 --> 00:04:03.360
现在 Tabs 是一个组件

00:04:03.360 --> 00:04:07.790
因为 TabNavigator 返回的就是一个组件

00:04:07.789 --> 00:04:11.099
因此 在此处

00:04:11.099 --> 00:04:14.280
我们不再像之前那样渲染 History 或 AddEntry

00:04:14.280 --> 00:04:18.154
而是可以渲染 Tabs

00:04:18.154 --> 00:04:21.334
如果一切正常的话

00:04:21.334 --> 00:04:24.824
你会在这里看到这些标签页

00:04:24.824 --> 00:04:30.144
比较棒的是 Android 具有自己的样式 iOS 亦如此

00:04:30.144 --> 00:04:37.250
现在我们可以在这两个标签页之间导航

00:04:37.250 --> 00:04:40.319
现在我要快速添加一项内容 这项内容不会在此视频中影响到我们 但是在未来会有作用

00:04:40.319 --> 00:04:45.170
我将在这个对象中

00:04:45.170 --> 00:04:49.610
输入 navigationOptions

00:04:49.610 --> 00:04:51.590
将 header 设为 null

00:04:51.589 --> 00:04:53.764
暂时先去掉任何报头

00:04:53.764 --> 00:04:57.110
最终会在应用中设置报头 但是暂时先为空

00:04:57.110 --> 00:04:59.090
保存代码 一切看起来不错

00:04:59.089 --> 00:05:03.229
现在 我们可以在这两个组件之间导航了

