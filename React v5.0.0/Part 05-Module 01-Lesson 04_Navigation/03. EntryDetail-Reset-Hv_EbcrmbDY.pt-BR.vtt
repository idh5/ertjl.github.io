WEBVTT
Kind: captions
Language: pt-BR

00:00:00.800 --> 00:00:05.167
Agora eu gostaria de adicionar
um botão de reset nesta IU,

00:00:05.200 --> 00:00:06.400
assim, quando clicar nele,

00:00:06.433 --> 00:00:09.533
ele redefinirá esta informação
do dia específico.

00:00:09.567 --> 00:00:14.033
Vamos então importar
alguns métodos aqui.

00:00:14.067 --> 00:00:18.600
O primeiro é addEntry e,
se você se lembra,

00:00:18.633 --> 00:00:22.700
ele é um criador de ação
que criamos há muito tempo.

00:00:22.733 --> 00:00:26.167
O segundo virá
do arquivo API.

00:00:26.200 --> 00:00:27.833
Ele se chama removeEntry

00:00:27.867 --> 00:00:32.333
e removerá o evento específico
do nosso banco de dados.

00:00:32.367 --> 00:00:35.493
Agora vamos criar

00:00:35.526 --> 00:00:39.067
uma função
mapDispatchToProps,

00:00:39.100 --> 00:00:41.133
que vai pegar um dispatch,

00:00:41.167 --> 00:00:45.233
e também vamos pegar
navigation das propriedades.

00:00:45.267 --> 00:00:47.500
Primeiro, como já fizemos
algumas vezes,

00:00:47.533 --> 00:00:51.167
vamos pegar o entryID
que estamos passando

00:00:51.200 --> 00:00:54.300
e vamos retornar
dois métodos diferentes.

00:00:54.333 --> 00:00:58.800
Um, que removerá o item
do dia específico

00:00:58.833 --> 00:01:00.733
do nosso armazenamento

00:01:00.767 --> 00:01:04.800
e o outro que nos permitirá voltar
para a Home View.

00:01:04.833 --> 00:01:08.500
Podemos escrever aqui
"remove".

00:01:08.533 --> 00:01:11.867
Isto vai chamar o dispatch,

00:01:11.900 --> 00:01:16.267
e vamos recorrer
ao criador de ação do addEntry.

00:01:16.300 --> 00:01:21.100
Agora escrevemos entryID,

00:01:21.133 --> 00:01:26.967
e, neste entryID específico,
queremos dizer que...

00:01:27.000 --> 00:01:28.733
Basicamente queremos
redefinir isto.

00:01:28.767 --> 00:01:32.300
O problema aqui é que o aplicativo
fica um pouco complicado.

00:01:32.333 --> 00:01:35.400
Se o dia que estamos configurando
for o de hoje,

00:01:35.433 --> 00:01:37.125
em vez de redefinir
para null,

00:01:38.873 --> 00:01:42.167
redefiniremos para isto aqui.

00:01:42.200 --> 00:01:46.267
Aqui em entryDetail,

00:01:46.300 --> 00:01:49.500
vamos importar
duas coisas diferentes.

00:01:49.533 --> 00:01:52.043
A primeira será timeToString,

00:01:52.076 --> 00:01:55.567
para termos o ID
do dia de hoje,

00:01:55.600 --> 00:01:59.700
e a segunda será
getDailyReminderValue,

00:01:59.733 --> 00:02:02.667
que nos dará o objeto do dia.

00:02:02.700 --> 00:02:08.233
Agora, em vez de usar o ID
deste dia específico,

00:02:08.267 --> 00:02:09.867
quando o removermos,

00:02:09.900 --> 00:02:14.567
ele será
timeToString = entryID.

00:02:14.600 --> 00:02:16.367
Se estivermos
no dia de hoje,

00:02:16.400 --> 00:02:21.167
vamos ver o que retornaremos
de getDailyReminderValue,

00:02:21.200 --> 00:02:24.400
ou seja, não se esqueça
de proteger seus dados,

00:02:24.433 --> 00:02:26.900
ou então configuramos
como igual a null.

00:02:26.933 --> 00:02:29.316
A segunda coisa que queremos

00:02:29.349 --> 00:02:34.833
adicionar a este objeto
é um goBack,

00:02:34.867 --> 00:02:40.033
e isto chamará navigation.goBack.

00:02:40.067 --> 00:02:45.500
Agora temos acesso a remove
e goBack dentro do componente,

00:02:45.533 --> 00:02:51.400
então podemos ter
um método de redefinição.

00:02:51.433 --> 00:02:56.367
Sempre que clicarmos em "Reset",
o que queremos é...

00:02:56.400 --> 00:03:00.330
Vamos primeiro pegar remove,

00:03:00.363 --> 00:03:02.600
goBack e entryID,

00:03:02.633 --> 00:03:04.867
vindos das propriedades.

00:03:04.900 --> 00:03:09.633
E entryID está vindo daqui,
de mapStateToProps.

00:03:09.667 --> 00:03:14.833
Chamamos então o remove,
chamamos o goBack

00:03:14.867 --> 00:03:17.276
e chamamos removeEntry,

00:03:17.309 --> 00:03:21.365
que está vindo
do arquivo API,

00:03:21.398 --> 00:03:23.867
passando o entryID.

00:03:23.900 --> 00:03:26.867
Está ótimo até agora.

00:03:26.900 --> 00:03:30.933
Agora vamos configurar uma IU
para chamar a redefinição.

00:03:30.967 --> 00:03:34.467
Vou importar
o botão de texto

00:03:34.500 --> 00:03:37.533
que está vindo do componente
do botão de texto.

00:03:37.567 --> 00:03:43.500
E aqui, em vez deste texto longo,
podemos escrever "textButton',

00:03:43.533 --> 00:03:49.500
e aqui, escrevemos
"onPress = this.resets".

00:03:49.533 --> 00:03:52.933
Daremos um estilo
com margem 20,

00:03:52.967 --> 00:03:56.133
e o texto será "RESET".

00:03:56.167 --> 00:03:58.133
Isto aqui está ótimo.

00:03:58.167 --> 00:04:00.933
Vamos ver se temos algum erro...
Temos.

00:04:00.967 --> 00:04:04.437
Precisamos corrigir
este "action",

00:04:04.903 --> 00:04:07.733
acho que deveria
ser "actions".

00:04:07.767 --> 00:04:10.000
Até agora, tudo certo.

00:04:10.033 --> 00:04:13.100
Vamos ver como está a IU.
Está ótima.

00:04:13.133 --> 00:04:18.067
O que vai acontecer, se clicarmos
em "Reset" do jeito que está,

00:04:18.100 --> 00:04:22.667
é que este componente
renderizará tudo de novo,

00:04:22.700 --> 00:04:24.200
mas também vai travar,

00:04:24.233 --> 00:04:27.700
pois ele está tentando pegar
o estado deste entryID,

00:04:27.733 --> 00:04:30.633
o qual, se não for o dia de hoje,
será nulo.

00:04:30.667 --> 00:04:36.033
Então passamos todas essas métricas
em MetricCard, o que vai travá-lo.

00:04:36.067 --> 00:04:38.300
Há algumas formas
de resolvermos isso.

00:04:38.333 --> 00:04:40.800
A forma mais elegante,
na minha opinião,

00:04:40.833 --> 00:04:46.600
é escrever
shouldComponentUpdate.

00:04:46.633 --> 00:04:50.728
Depois escrever se
nextProps.metrics

00:04:50.761 --> 00:04:52.933
for diferente de null

00:04:52.967 --> 00:04:57.833
e se nextProps.metrics.today
for falso,

00:04:57.867 --> 00:05:00.333
o componente deve atualizar.

00:05:00.567 --> 00:05:03.767
Mas, se não for,
não queremos que ele atualize.

00:05:03.800 --> 00:05:06.700
Novamente, o que acontece aqui
quando clicamos em "Reset"

00:05:06.733 --> 00:05:09.667
é que o componente
renderizará de novo naturalmente,

00:05:09.700 --> 00:05:11.433
mesmo voltando para a Home,

00:05:11.467 --> 00:05:14.800
porque os detalhes ainda estão
na pilha de rotas.

00:05:14.833 --> 00:05:17.500
Mas o que estamos fazendo
com shouldComponentUpdate

00:05:17.533 --> 00:05:19.900
é dizer para não renderizar de novo,

00:05:19.933 --> 00:05:23.567
a não ser que nextProps.metrics
seja diferente de null.

00:05:23.600 --> 00:05:27.033
Assim, o dia tem
as informações de hoje nele,

00:05:27.067 --> 00:05:30.400
e o nextProps.metrics.today
é falso.

00:05:30.433 --> 00:05:32.967
Sem esta linha, novamente,
o que aconteceria

00:05:33.000 --> 00:05:35.567
é que o MetricCard renderizaria
passando as métricas

00:05:35.600 --> 00:05:38.567
que seriam indefinidas,
fazendo com que tudo travasse.

00:05:38.600 --> 00:05:41.900
Vamos ver se está
funcionando corretamente.

00:05:41.933 --> 00:05:44.500
Vamos para o dia 29.
Vamos redefinir...

00:05:44.533 --> 00:05:49.100
Remove não é uma função.
Claro que é, são as propriedades.

00:05:49.133 --> 00:05:53.333
Não passamos mapDispatchToProps
como o segundo argumento.

00:05:53.367 --> 00:05:56.200
Vamos passar isso agora.

00:05:56.233 --> 00:05:59.533
Agora estou bem confiante
de que vai funcionar.

00:05:59.567 --> 00:06:01.133
Clicamos em "Reset".

00:06:01.167 --> 00:06:02.867
Veja que, em 29 de agosto,

00:06:02.900 --> 00:06:04.633
em vez de mostrar
as informações do dia,

00:06:04.667 --> 00:06:06.967
diz que não adicionamos
nenhum dado neste dia.

