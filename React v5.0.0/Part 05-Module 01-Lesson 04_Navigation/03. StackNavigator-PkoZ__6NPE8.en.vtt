WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.879
Now what I want to do is,

00:00:01.879 --> 00:00:04.894
I want to make each day that we filled out clickable.

00:00:04.894 --> 00:00:08.059
So, whenever I click on a day that looks like this,

00:00:08.060 --> 00:00:10.130
we get a nice little right to left transition.

00:00:10.130 --> 00:00:12.589
We dig higher into the route stack.

00:00:12.589 --> 00:00:15.469
And then, we see some of the same statistics,

00:00:15.470 --> 00:00:17.390
and we also see a reset button,

00:00:17.390 --> 00:00:19.810
to be able to reset that specific day.

00:00:19.809 --> 00:00:22.910
So there's a few things we need to do to do that.

00:00:22.910 --> 00:00:27.274
First, let's go ahead and create a new file here,

00:00:27.274 --> 00:00:30.299
and we will call it EntryDetail.

00:00:30.300 --> 00:00:33.185
We're going to import React as well as

00:00:33.185 --> 00:00:37.234
the few other components that we typically use from react-native.

00:00:37.234 --> 00:00:42.929
So we're just going to return a view with some text in it that says EntryDetail,

00:00:42.929 --> 00:00:46.155
and then we need to make sure that we export this.

00:00:46.155 --> 00:00:47.630
All right, so now that we have this component,

00:00:47.630 --> 00:00:49.340
inside of our app.js file,

00:00:49.340 --> 00:00:53.600
the first thing we need to do is go ahead and import it.

00:00:53.600 --> 00:00:57.125
And this is going to come from our components folder.

00:00:57.125 --> 00:01:02.380
And then now you'll notice that we currently are rendering this tabs component.

00:01:02.380 --> 00:01:06.530
But because we are doing a different type of navigation now,

00:01:06.530 --> 00:01:11.040
instead of having tabs we're kind of going into the route hierarchy as I've mentioned.

00:01:11.040 --> 00:01:13.795
We actually need a StackNavigator.

00:01:13.795 --> 00:01:17.269
And so from react-navigation,

00:01:17.269 --> 00:01:20.329
we can get the StackNavigator function.

00:01:20.329 --> 00:01:22.129
So now what we can do,

00:01:22.129 --> 00:01:26.174
is we come in here and just like we did with our tab navigator.

00:01:26.174 --> 00:01:29.890
Let's make a new variable we'll call it MainNavigator.

00:01:29.890 --> 00:01:34.670
We'll set that equal to the invocation of StackNavigator and

00:01:34.670 --> 00:01:39.719
the properties that are on this object are going to be our new routes.

00:01:39.719 --> 00:01:41.215
So we will see home,

00:01:41.215 --> 00:01:43.180
and what this is going to be,

00:01:43.180 --> 00:01:45.805
it's going to render the tab's component.

00:01:45.805 --> 00:01:49.220
So what we're doing here is we are rendering this component right here,

00:01:49.219 --> 00:01:51.170
which is then rendering those tabs,

00:01:51.170 --> 00:01:54.310
and you'll see why that is important here in a second.

00:01:54.310 --> 00:01:57.290
And then, what we want to do is we have EntryDetail.

00:01:57.290 --> 00:02:01.925
Screen is going to be that EntryDetail component that we just barely made.

00:02:01.924 --> 00:02:05.789
And then, we will give it some navigation options real quick.

00:02:05.790 --> 00:02:08.215
We will say headerTintColor.

00:02:08.215 --> 00:02:11.780
Let's go ahead and make that white and then we will say headersStyle,

00:02:11.780 --> 00:02:16.015
I'll give this a background color of purple.

00:02:16.014 --> 00:02:19.549
All right, so now instead of rendering tabs right here,

00:02:19.550 --> 00:02:22.939
what we actually want to render is our MainNavigator.

00:02:22.939 --> 00:02:26.530
So now let's check that everything is working fine.

00:02:26.530 --> 00:02:28.099
It looks like it is.

00:02:28.099 --> 00:02:32.719
And you'll notice here that if I click on this, nothing is happening,

00:02:32.719 --> 00:02:37.310
because if you remember inside of,

00:02:37.310 --> 00:02:40.504
I believe it was history.js.

00:02:40.504 --> 00:02:46.715
When we render that metric card we are wrapping it in this touchable opacity component,

00:02:46.715 --> 00:02:49.729
but all we're doing is we're constantly logging pressed.

00:02:49.729 --> 00:02:53.689
What we want to do here because react-navigation is

00:02:53.689 --> 00:02:58.139
now controlling our router and it's rendering this history component.

00:02:58.139 --> 00:03:00.064
What we now have access to,

00:03:00.064 --> 00:03:06.935
is this.props.navigation.navigate as a function.

00:03:06.935 --> 00:03:10.300
So this is going to take us to a new screen.

00:03:10.300 --> 00:03:14.040
The first argument we pass it is going to be the screen that we're going to use,

00:03:14.039 --> 00:03:16.819
because we want to go to the EntryDetail screen.

00:03:16.819 --> 00:03:19.969
And what's nice is we can also pass along information.

00:03:19.969 --> 00:03:22.759
So we want to say, hey this screen that we want

00:03:22.759 --> 00:03:26.519
more details on are these specific entry that we want more details on,

00:03:26.520 --> 00:03:28.730
is this entry right here,

00:03:28.729 --> 00:03:34.774
which is the key that we're getting from the third argument passed to render item.

00:03:34.775 --> 00:03:36.800
So now, what's going to happen is,

00:03:36.800 --> 00:03:38.265
if this is working correctly,

00:03:38.264 --> 00:03:42.004
what we should see when I click on this,

00:03:42.004 --> 00:03:45.664
we get taken to this new EntryDetail screen.

00:03:45.664 --> 00:03:52.044
You'll notice that, the header is purple because that's what we specified right here.

00:03:52.044 --> 00:03:56.149
And the tint color is white which is that arrow right here.

00:03:56.150 --> 00:04:01.129
So now, what we want to do instead of just logging EntryDetail,

00:04:01.129 --> 00:04:04.387
I actually want to go ahead and show as well

00:04:04.387 --> 00:04:08.550
the specific ID or the specific entry ID that we're passing along.

00:04:08.550 --> 00:04:10.100
So, the way we can do that,

00:04:10.099 --> 00:04:18.969
this is kind of long but we can get it off of this.props.navigation.state.params.enrtyId.

00:04:18.970 --> 00:04:21.155
So now see how this looks,

00:04:21.154 --> 00:04:24.704
when we navigate to a specific screen.

00:04:24.704 --> 00:04:27.829
You'll now notice we get EntryDetail but we also get

00:04:27.829 --> 00:04:30.979
the specific key of the data that we need

00:04:30.980 --> 00:04:35.000
to grab from our react store to show right here.

