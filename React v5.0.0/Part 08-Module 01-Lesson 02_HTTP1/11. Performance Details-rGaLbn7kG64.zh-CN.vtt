WEBVTT
Kind: captions
Language: zh-CN

00:00:00.804 --> 00:00:02.219
但即使这样

00:00:02.220 --> 00:00:05.990
我们还是需要考虑网络基础架构的特性

00:00:05.990 --> 00:00:08.339
在此示例中 从在地址栏中按下 Enter 键

00:00:08.339 --> 00:00:10.140
到显示网页之间超过 50% 的时间

00:00:10.140 --> 00:00:13.839
都花在等待答案上

00:00:13.839 --> 00:00:18.300
这段等待时间称为传送首字节的时间 简称 TTFB

00:00:18.300 --> 00:00:20.910
如果此网站需要获取其他资源

00:00:20.910 --> 00:00:23.820
我们必须等到第一个请求被响应

00:00:23.820 --> 00:00:26.060
然后才能发送第二个请求

00:00:26.059 --> 00:00:28.890
意味着又要等待一段时间

00:00:28.890 --> 00:00:31.320
这段时间没有获得有效利用

00:00:31.320 --> 00:00:34.049
这种问题称为队头阻塞

00:00:34.049 --> 00:00:36.570
我们通过一个示例来看看什么是队头阻塞

00:00:36.570 --> 00:00:38.700
以及对用户体验有何不良影响

00:00:38.700 --> 00:00:40.260
[MUSIC PLAYING]

00:00:40.259 --> 00:00:43.019
对于 HTTP 来说 连接就像一个队列

00:00:43.020 --> 00:00:44.850
当第一个请求正在被处理时

00:00:44.850 --> 00:00:47.939
所有其他请求都需要等待

00:00:47.939 --> 00:00:50.359
这样就浪费了很多时间

00:00:50.359 --> 00:00:51.700
好的 一杯中杯咖啡

00:00:51.700 --> 00:00:52.200
请享用

00:00:52.200 --> 00:00:54.359
谢谢

00:00:54.359 --> 00:00:55.743
Hi 我现在能点了吗？

00:00:55.743 --> 00:00:56.909
可以 要喝什么？

00:00:56.909 --> 00:00:57.659
好的

00:00:57.659 --> 00:00:58.609
我想要超大杯

00:00:58.609 --> 00:01:02.067
一半全脂牛奶 1/4 1% 1/4 脱脂 超烫

00:01:02.067 --> 00:01:03.899
浓缩咖啡 （一杯半脱因咖啡

00:01:03.899 --> 00:01:07.295
两杯半普通咖啡）搅拌的无泡沫拿铁咖啡

00:01:07.296 --> 00:01:09.170
两包三氯蔗糖 一包粗糖

00:01:09.170 --> 00:01:11.400
加点香草糖浆

00:01:11.400 --> 00:01:12.150
撒三粒肉桂

00:01:12.150 --> 00:01:15.150
我有点着急

00:01:15.150 --> 00:01:16.630
谢谢

00:01:16.629 --> 00:01:17.129
额

00:01:17.129 --> 00:01:17.629
天啊

00:01:17.629 --> 00:01:20.123
好的

00:01:20.123 --> 00:01:22.289
当店员正在准备 Richard 的咖啡时

00:01:22.290 --> 00:01:24.780
其他顾客需要等待

00:01:24.780 --> 00:01:28.170
即便他们点的咖啡制作起来简单多了

00:01:28.170 --> 00:01:32.070
队首阻塞了剩余的客户

00:01:32.069 --> 00:01:33.869
为了稍微避免这种限制

00:01:33.870 --> 00:01:36.680
浏览器打开了六个并行连接

00:01:36.680 --> 00:01:38.190
就像在我们的咖啡比喻中

00:01:38.189 --> 00:01:40.230
他们又雇了一名咖啡师

00:01:40.230 --> 00:01:42.750
当第一个连接正在等待第一个字节时

00:01:42.750 --> 00:01:45.700
第二个请求已经可以发送给第二个连接

00:01:45.700 --> 00:01:46.960
以此类推

00:01:46.959 --> 00:01:48.629
当然 雇佣新的咖啡师

00:01:48.629 --> 00:01:50.069
需要大量时间和培训

00:01:50.069 --> 00:01:52.589
在浏览器中 打开所有这些连接代价也很高

00:01:52.590 --> 00:01:55.870
因为需要进行 TCP 握手

00:01:55.870 --> 00:01:57.990
浏览器建立六个并行连接

00:01:57.989 --> 00:02:01.406
只是暂时解决了队头阻塞问题

00:02:01.406 --> 00:02:03.239
如果你的网页上有大量资源

00:02:03.239 --> 00:02:05.849
你将花费大量时间去等待

00:02:05.849 --> 00:02:08.599
或者瞪着收银员

00:02:08.599 --> 00:02:10.698
队头阻塞是一个严重的

00:02:10.699 --> 00:02:12.200
网站性能瓶颈

00:02:12.199 --> 00:02:14.909
浏览器打开六个并行连接有所帮助

00:02:14.909 --> 00:02:16.979
但是效果不明显

00:02:16.979 --> 00:02:19.769
稍后我们将了解 HTTP/2

00:02:19.770 --> 00:02:21.939
如何解决队头阻塞问题

