WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.174
Just like we did with our goals component,

00:00:02.174 --> 00:00:05.415
now we want to thankify out our todos component.

00:00:05.415 --> 00:00:10.980
Notice, we've already created our handle delete todo asynchronous action creator.

00:00:10.980 --> 00:00:18.255
So, all we have left is our add item as well as our toggle item logic. So, we'll do.

00:00:18.254 --> 00:00:22.179
Again, this is going to be very similar to what we did in our goals component.

00:00:22.179 --> 00:00:29.210
Eventually, we want to create a new action creator called handleaddtodo.

00:00:29.210 --> 00:00:31.280
We're going to parse it two things.

00:00:31.280 --> 00:00:32.990
The name of the new todo item,

00:00:32.990 --> 00:00:35.495
which we can get from this.input.value.

00:00:35.494 --> 00:00:39.025
And then, a callback function that when it's invoked

00:00:39.026 --> 00:00:43.190
will reset the input value to an empty string.

00:00:43.189 --> 00:00:47.584
And then now, I'm going to copy all of this logic and up

00:00:47.585 --> 00:00:52.475
inside of where our action creators are.

00:00:52.475 --> 00:00:54.875
Let's create a new one.

00:00:54.875 --> 00:00:58.649
Let's do it right here above handledeletetodo.

00:00:58.649 --> 00:01:02.454
It was called handleaddtodo.

00:01:02.454 --> 00:01:04.584
And it took him two things,

00:01:04.584 --> 00:01:08.934
the name of the need to do item as well as the callback.

00:01:08.935 --> 00:01:14.424
And then as always, we want to return a function that is parsed dispatch.

00:01:14.424 --> 00:01:16.899
And then now, we paste in the logic.

00:01:16.900 --> 00:01:18.826
So, we invoke savetodo,

00:01:18.825 --> 00:01:20.574
parsing it the name.

00:01:20.575 --> 00:01:23.484
And then, instead of calling this.props.store,

00:01:23.484 --> 00:01:26.859
we already have access to dispatch because that's

00:01:26.859 --> 00:01:30.670
what was parsed to our function that we returned.

00:01:30.670 --> 00:01:33.174
Then now, to reset the input value,

00:01:33.174 --> 00:01:37.569
we just invoke the callback function. So, that looks great.

00:01:37.569 --> 00:01:44.049
Let's go ahead and do that same thing but for toggling and item.

00:01:44.049 --> 00:01:46.623
So, we are going to create a new action creator

00:01:46.623 --> 00:01:49.614
that encapsulates all of this logic down here.

00:01:49.614 --> 00:01:53.679
Let's go ahead and call it handletoggle.

00:01:53.680 --> 00:01:56.200
So, we will parse it the ID.

00:01:56.200 --> 00:01:59.213
And then, let's copy all of this,

00:01:59.213 --> 00:02:04.277
head back up to where our action creators are,

00:02:04.277 --> 00:02:08.629
create that action creator called handletoggle,

00:02:09.419 --> 00:02:12.379
which will be parsed an ID,

00:02:12.379 --> 00:02:16.949
and needs to return a function which will be passed dispatch.

00:02:16.949 --> 00:02:19.694
And then, we will paste all that in,

00:02:19.694 --> 00:02:22.305
get rid of this.props.store.

00:02:22.305 --> 00:02:24.900
And there we go.

00:02:24.900 --> 00:02:27.795
So now, let's make sure that this is working as well.

00:02:27.794 --> 00:02:30.629
So now, inside of our todo component,

00:02:30.629 --> 00:02:34.199
we can still toggle and

00:02:34.199 --> 00:02:38.399
sometimes we'll get an error but most of the time it'll still work.

00:02:38.400 --> 00:02:41.789
And then, we can also add a new item here.

00:02:41.789 --> 00:02:45.479
We'll say, read a book. And there we go.

00:02:45.479 --> 00:02:47.849
So, we have successfully removed

00:02:47.849 --> 00:02:53.280
all the asynchronous logic or all the data fetching

00:02:53.280 --> 00:02:59.012
logic from our component and put it into their own action creators,

00:02:59.012 --> 00:03:01.889
which handle not only dispatching the action but

00:03:01.889 --> 00:03:06.009
also any time that we want to communicate with our API.

