WEBVTT
Kind: captions
Language: pt-BR

00:00:00.250 --> 00:00:03.583
Aprendemos que solicitações
que parecem saídas de um formulário

00:00:03.625 --> 00:00:05.167
não causam preflight.

00:00:05.208 --> 00:00:07.917
Você não pode ler a resposta
se o CORS não permitir.

00:00:07.958 --> 00:00:11.583
Porém, às vezes você não precisa
ver a resposta para fazer pirraça.

00:00:11.625 --> 00:00:14.208
Pense num banco com um formulário
para transferir dinheiro.

00:00:14.250 --> 00:00:16.625
Se você não é
uma pessoa correta,

00:00:16.667 --> 00:00:19.542
você vai querer apenas
desviar dinheiro para a sua conta,

00:00:19.583 --> 00:00:22.000
sem se importar
com a resposta do servidor.

00:00:22.042 --> 00:00:24.250
Então você cria um site que forja
uma solicitação

00:00:24.292 --> 00:00:27.208
com a mesma URL que o formulário usa
e configura os parâmetros

00:00:27.250 --> 00:00:30.583
para que o dinheiro seja desviado
para você, sem que o usuário repare.

00:00:30.625 --> 00:00:34.042
Esse tipo de ataque é chamado
de "Cross-Site Request Forgery",

00:00:34.083 --> 00:00:35.583
ou CSRF.

00:00:35.625 --> 00:00:38.458
É claro que bancos têm mecanismos
de proteção sofisticados,

00:00:38.500 --> 00:00:42.042
mas, para a maioria dos objetivos,
um token CSFR é proteção suficiente.

00:00:42.083 --> 00:00:45.208
Um token CSFR é um campo adicional,
um apêndice do formulário,

00:00:45.250 --> 00:00:48.958
colocado lá pelo servidor
e armazenado no servidor também.

00:00:49.000 --> 00:00:50.875
Se alguém faz uma solicitação,

00:00:50.917 --> 00:00:53.292
o servidor compara o novo token
com o armazenado

00:00:53.333 --> 00:00:56.500
e só age de acordo com a solicitação
se os tokens forem iguais.

