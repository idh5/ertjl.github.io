WEBVTT
Kind: captions
Language: zh-CN

00:00:00.369 --> 00:00:01.909
还记得之前提到的

00:00:01.909 --> 00:00:04.033
具有可以被攻击的转账表单的

00:00:04.033 --> 00:00:04.919
银行吗？

00:00:04.919 --> 00:00:06.379
它真的存在

00:00:06.379 --> 00:00:08.750
现在请你来利用它的漏洞

00:00:08.750 --> 00:00:12.650
该项目的服务器有两个端点

00:00:12.650 --> 00:00:16.170
银行网站和恶意 URL 你可以在该 URL 上放置你的代码

00:00:16.170 --> 00:00:19.820
银行的 URL 提供了银行网站的登录页面

00:00:19.820 --> 00:00:22.070
密码是 supersecretpassword

00:00:22.070 --> 00:00:24.059
并列在了说明中

00:00:24.059 --> 00:00:26.839
这是设计非常“美观”的银行余额页面

00:00:26.839 --> 00:00:28.489
我妹妹将来找我

00:00:28.489 --> 00:00:30.049
因此需要一些零花钱

00:00:30.050 --> 00:00:35.240
你需要向 Umbrella Corporation 转账 666 元

00:00:35.240 --> 00:00:37.429
但是你无法在此网站的此处操作

00:00:37.429 --> 00:00:39.560
另一个 URL 是恶意网站

00:00:39.560 --> 00:00:42.922
此网站会将你输入的任何内容放入恶意目录下

00:00:42.921 --> 00:00:44.629
因此你需要创建一个

00:00:44.630 --> 00:00:47.390
向银行发出 CRF 请求的网站

00:00:47.390 --> 00:00:49.939
此练习需要好几个步骤才能完成

00:00:49.939 --> 00:00:52.519
你将黑一个虚拟银行 太酷了

00:00:52.520 --> 00:00:54.500
你需要登录银行网站

00:00:54.500 --> 00:00:56.479
使恶意网站能够访问

00:00:56.479 --> 00:00:58.019
你的登录 Cookie

00:00:58.020 --> 00:01:00.140
然后在 evil 文件夹中创建一个网站

00:01:00.140 --> 00:01:03.020
该网站将向此 URL 发送一个 POST 请求

00:01:03.020 --> 00:01:06.770
发布的数据需要将 recipient 设为 Umbrella+Corp

00:01:06.769 --> 00:01:09.259
amount 为 666

00:01:09.260 --> 00:01:11.660
要在 Fetch 请求中发送 Cookie 数据

00:01:11.659 --> 00:01:14.750
凭据的标记必须设为 include

00:01:14.750 --> 00:01:16.760
如果一切操作正确

00:01:16.760 --> 00:01:18.180
服务器将提供给你一个令牌

00:01:18.180 --> 00:01:20.690
这是服务器 而不是浏览器的控制台

00:01:20.689 --> 00:01:22.129
因此检查终端

00:01:22.129 --> 00:01:23.869
然后将令牌填到这里

00:01:23.870 --> 00:01:25.880
这道练习比大部分练习都要复杂

00:01:25.879 --> 00:01:28.879
一步步地操作 确保 Fetch 请求

00:01:28.879 --> 00:01:29.869
正确无误

00:01:29.870 --> 00:01:32.240
请参阅讲师注释

00:01:32.239 --> 00:01:34.039
了解如何使用 Fetch 构建 POST 请求

00:01:34.040 --> 00:01:35.710
加油

