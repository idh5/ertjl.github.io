WEBVTT
Kind: captions
Language: pt-BR

00:00:00.250 --> 00:00:02.417
Sempre que um site
mostra input do usuário,

00:00:02.458 --> 00:00:03.917
você precisa ter muito cuidado.

00:00:03.958 --> 00:00:05.667
Input de usuário pode ser
qualquer coisa,

00:00:05.708 --> 00:00:09.375
e você é o responsável por garantir
que não vai quebrar seu site.

00:00:09.417 --> 00:00:11.708
Um usuário desavisado
pode quebrá-lo sem querer,

00:00:11.750 --> 00:00:17.292
um hacker pode levar o site
a fazer algo que não deveria.

00:00:17.333 --> 00:00:20.792
Input inválido de usuários é uma
das vulnerabilidades mais antigas

00:00:20.833 --> 00:00:24.208
e se chama cross-site scripting,
o XSS.

00:00:24.250 --> 00:00:27.792
O nome advém da possibilidade
de injetar JavaScript num site

00:00:27.833 --> 00:00:31.292
e ter acesso
a todos os dados deles.

00:00:32.208 --> 00:00:37.500
Um bom exemplo é o site que pede
o nome de quem quer comentar.

00:00:37.542 --> 00:00:39.750
Se esse input não for validado,

00:00:39.792 --> 00:00:44.667
o nome do usuário
pode ser JavaScript.

00:00:44.708 --> 00:00:48.958
Ou seja, todos vão lendo
o comentário vão ver o nome,

00:00:49.000 --> 00:00:52.792
mas o código vai ser executado
sem o usuário saber.

00:00:52.833 --> 00:00:56.500
Se compararmos,
este exemplo é muito fácil.

00:00:56.542 --> 00:00:58.958
Mas o script tem acesso
a todos os dados do site,

00:00:59.000 --> 00:01:01.125
incluindo
o domínio e os cookies.

00:01:01.167 --> 00:01:04.083
Ele pode até fazer solicitações
FETCH da origem do site.

00:01:04.125 --> 00:01:07.125
Um ataque XSS elaborado
pode fazer um estrago.

00:01:07.167 --> 00:01:10.625
A única forma de se defender

00:01:10.667 --> 00:01:14.708
é seguir a regra de ouro
da engenharia da computação:

00:01:14.750 --> 00:01:17.500
faça a validação do input
de seus usuários.

