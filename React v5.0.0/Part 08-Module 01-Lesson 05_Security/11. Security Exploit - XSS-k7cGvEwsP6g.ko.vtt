WEBVTT
Kind: captions
Language: ko

00:00:00.499 --> 00:00:02.250
웹사이트가 유저의 입력을 
보여줄 때

00:00:02.250 --> 00:00:04.070
여러분은 주의해야 합니다

00:00:04.070 --> 00:00:07.230
유저는 어떠한 것도 입력할 수 있고

00:00:07.230 --> 00:00:09.550
여러분은 사이트를 망가뜨리지 않을 
책임이 있기 때문입니다

00:00:09.550 --> 00:00:11.790
부주의한 유저는 실수로
사이트를 망가트릴 수 있지만

00:00:11.790 --> 00:00:13.770
나쁜 유저는 악용할 수 있고

00:00:13.770 --> 00:00:17.430
웹사이트가 의도하지 않았던 행동을
하게 할 수도 있습니다

00:00:17.430 --> 00:00:20.370
유저의 입력과 관한 아주 오래된

00:00:20.370 --> 00:00:23.250
취약점은 Cross-site scripting

00:00:23.250 --> 00:00:24.417
혹은 XSS라고 합니다

00:00:24.417 --> 00:00:26.250
이 이름은 자바스크립트가

00:00:26.250 --> 00:00:28.100
다른 사이트에 추가되어서

00:00:28.100 --> 00:00:31.962
실행될 수 있고 그리고 그 사이트의
데이터를 읽어올 수 있어서 만들어졌습니다

00:00:31.962 --> 00:00:35.710
예를들면 웹사이트가 유저의
이름을 물을 수 있는데

00:00:35.710 --> 00:00:37.630
그들이 댓글을 남기고 싶을 때

00:00:37.630 --> 00:00:40.510
만약 입력이 확인되지 않으면

00:00:40.510 --> 00:00:42.670
이런식으로 자바스크립트 코드를

00:00:42.670 --> 00:00:44.870
입력할 수 있습니다

00:00:44.870 --> 00:00:47.050
댓글을 남기고 싶어하는 모든 유저는

00:00:47.050 --> 00:00:49.810
이 글을 클릭하게 되고

00:00:49.810 --> 00:00:52.960
자바스크립트가 자동적으로 실행되게 됩니다

00:00:52.960 --> 00:00:54.910
이 예제는 아주 안전한

00:00:54.910 --> 00:00:56.530
예제입니다

00:00:56.530 --> 00:00:59.090
하지만 스크립트는 사이트의 모든 데이터에
접근할 수 있고

00:00:59.090 --> 00:01:00.830
모든 문서 쿠키 또한 가능합니다

00:01:00.830 --> 00:01:02.440
심지어 사이트의 오리진으로

00:01:02.440 --> 00:01:04.050
Fetch 요청을 할수도 있습니다

00:01:04.050 --> 00:01:07.240
정교한 XSS 공격은 
치명적입니다

00:01:07.240 --> 00:01:09.160
여러분이 스스로를

00:01:09.160 --> 00:01:10.900
이러한 공격으로부터 지키는

00:01:10.900 --> 00:01:13.240
유일한 방법은 소프트웨어 공학에서 제공하는

00:01:13.240 --> 00:01:16.270
개발 법칙들을 서버 개발에서

00:01:16.270 --> 00:01:18.010
적용시키는 것뿐입니다

