WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.640
As we just learned, requests had looked just like

00:00:02.640 --> 00:00:05.255
they came from a forum will not be pre-flighted.

00:00:05.255 --> 00:00:07.950
You can't read the response if course doesn't allow it.

00:00:07.950 --> 00:00:11.880
But sometimes you might not need to see the response to wreak havoc.

00:00:11.880 --> 00:00:14.370
Imagine a bank that has a forum to transfer money.

00:00:14.370 --> 00:00:16.725
If you are not a good person,

00:00:16.725 --> 00:00:19.634
all you want to do is wire the money to your own account,

00:00:19.634 --> 00:00:22.070
you don't care about what the server answers.

00:00:22.070 --> 00:00:26.100
So you set up a website that forges a request of the same URL the forum uses

00:00:26.100 --> 00:00:30.780
and set the parameters so that the money is wired to you and the user won't even notice.

00:00:30.780 --> 00:00:35.590
That's why this kind of attack is called cross-sites request forgery or CSRF.

00:00:35.590 --> 00:00:39.705
Of course, banks have sophisticated protection mechanisms but for most purposes,

00:00:39.705 --> 00:00:41.795
a CSRF token is protection enough.

00:00:41.795 --> 00:00:45.120
If CSRF token is additional field appended to a form

00:00:45.120 --> 00:00:48.945
that has been put there by a server and it starts server side as well.

00:00:48.945 --> 00:00:51.083
If someone is submitting a request,

00:00:51.083 --> 00:00:53.565
the seller checks that token against the one that has stored

00:00:53.565 --> 00:00:57.000
and only execute the requests if these tokens match.

