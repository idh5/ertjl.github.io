WEBVTT
Kind: captions
Language: ko

00:00:00.499 --> 00:00:02.290
Surma 여러분에 몇 가지
규칙을 설명해주었습니다

00:00:02.290 --> 00:00:03.706
하지만 규칙이 있다면

00:00:03.706 --> 00:00:05.380
예외도 존재합니다

00:00:05.380 --> 00:00:07.030
여러분들도 알고있듯이 우리는

00:00:07.030 --> 00:00:10.600
다른 오리진에서 부터 CSS, 이미지

00:00:10.600 --> 00:00:12.730
비디오 등을 가져올 수 있습니다

00:00:12.730 --> 00:00:15.880
또한 다른 오리진으로 데이터를 
전송할 수도 있습니다

00:00:15.880 --> 00:00:17.320
유저들은 특정 이미지가

00:00:17.320 --> 00:00:19.630
우리 서버에서 왔는지 아니면 인스타그램에서

00:00:19.630 --> 00:00:22.060
로딩됐는지를 알려주지 않습니다

00:00:22.060 --> 00:00:24.730
하지만 웹 개발자 입장에서는
다릅니다

00:00:24.730 --> 00:00:26.860
여러분들은 다른 오리진에서 온

00:00:26.860 --> 00:00:29.140
이미지들을 같은 오리진 이미지들과

00:00:29.140 --> 00:00:31.900
같은 방식으로 처리할 수 없습니다

00:00:31.900 --> 00:00:34.450
예로, 여러분은 Canvas 내부에 있는

00:00:34.450 --> 00:00:36.430
이미지의 픽셀을 알 수 없습니다

00:00:36.430 --> 00:00:39.340
이는 Script 태그를 사용하는

00:00:39.340 --> 00:00:40.810
외부 오리진 스크립트도 마찬가지입니다

00:00:40.810 --> 00:00:43.510
그냥 빈칸으로 나타나거나

00:00:43.510 --> 00:00:45.490
최근 API를 사용하신다면

00:00:45.490 --> 00:00:47.320
그냥 에러를 리턴할 것입니다

00:00:47.320 --> 00:00:51.520
만약 같은 오리진이라면 그 내용에
접근할 수 있지만

00:00:51.520 --> 00:00:55.400
다른 오리진의 스크립트의 내용은
접근할 수 없습니다

00:00:55.400 --> 00:00:57.910
유저 브라우저야말로 same origin 정책을

00:00:57.910 --> 00:01:01.030
시행하는 가장 큰 예시입니다

00:01:01.030 --> 00:01:03.340
서버뿐만 아니라 클라이언트도

00:01:03.340 --> 00:01:05.107
여러분들에게 요청을 금지할 수 있습니다

00:01:05.107 --> 00:01:07.690
다음 비디오에서는 왜 same origin 정책이

00:01:07.690 --> 00:01:11.430
중요한지를 살펴보겠습니다

