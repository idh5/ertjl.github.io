WEBVTT
Kind: captions
Language: ko

00:00:00.500 --> 00:00:03.060
이제 우리는 비대칭 키를 활용한 암호화를

00:00:03.060 --> 00:00:04.560
알고 있습니다

00:00:04.560 --> 00:00:06.630
또한 이들은 TLS의 주요한 기능입니다

00:00:06.630 --> 00:00:08.550
이제 보여드리겠습니다

00:00:08.550 --> 00:00:10.440
브라우저가 TLS-보안 연결을

00:00:10.440 --> 00:00:13.260
하는 방식을 보여드리겠습니다

00:00:13.260 --> 00:00:15.630
간단히 하기 위해 몇가지를 제외하였지만

00:00:15.630 --> 00:00:18.640
개념을 이해하는데 지장은 없습니다

00:00:18.640 --> 00:00:21.790
우선 서버가 여러분에게 인증서를 보냅니다

00:00:21.790 --> 00:00:23.710
이 인증서는 서버의 공개키와

00:00:23.710 --> 00:00:25.570
서버의 도메인과 같은

00:00:25.570 --> 00:00:27.850
정보를 포함하고 있고

00:00:27.850 --> 00:00:31.390
서명을 받은 기관이 적혀있습니다

00:00:31.390 --> 00:00:34.840
클라이언트는 받은 인증서의 도메인과

00:00:34.840 --> 00:00:37.340
기관의 서명이 유효한지 확인합니다

00:00:37.340 --> 00:00:40.150
이미 브라우저에서 살펴보았듯이

00:00:40.150 --> 00:00:42.610
브라우저는 이미 기관의 서명과

00:00:42.610 --> 00:00:46.090
공개키가 저장되어 있어

00:00:46.090 --> 00:00:48.320
체크하기 쉽습니다

00:00:48.320 --> 00:00:50.350
이제 브라우저는 랜덤하게 대칭키

00:00:50.350 --> 00:00:53.620
시스템에 사용할 공개키를 생성하고

00:00:53.620 --> 00:00:56.920
생성된 공개키를 서버의 공개키로 암호화해서

00:00:56.920 --> 00:00:58.270
넘겨줍니다

00:00:58.270 --> 00:00:59.800
이렇게 하면 두가지 장점이 있습니다

00:00:59.800 --> 00:01:02.470
이제 대칭키 시스템을 사용하는데

00:01:02.470 --> 00:01:04.480
이는 비대칭 키 시스템에 비해

00:01:04.480 --> 00:01:06.100
더 빠르고 효과적입니다

00:01:06.100 --> 00:01:08.530
또한 중요한 것은

00:01:08.530 --> 00:01:11.080
서버가 인증서에 있는 공개키를 복호화할 수 있는

00:01:11.080 --> 00:01:13.120
개인키를 실제로 소유하고 있어야지

00:01:13.120 --> 00:01:15.250
이 인증이 유효하다는 점입니다

00:01:15.250 --> 00:01:18.550
이렇게 하면 서버를 제대로
확인할 수 있습니다

00:01:18.550 --> 00:01:21.100
이 과정이 다 끝나면

00:01:21.100 --> 00:01:23.650
연결이 완료되고

00:01:23.650 --> 00:01:25.840
AGP 프로토콜을 실행할 수 있습니다

00:01:25.840 --> 00:01:27.370
또한 URL 표시줄에 초록색 자물색이 생긴다면

00:01:27.370 --> 00:01:29.670
연결이 완료된 것입니다

