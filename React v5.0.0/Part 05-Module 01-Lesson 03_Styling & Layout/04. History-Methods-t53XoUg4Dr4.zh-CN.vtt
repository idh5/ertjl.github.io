WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.735
现在 我们不再只渲染这些 text 组件

00:00:06.735 --> 00:00:08.144
而是渲染历史记录组件

00:00:08.144 --> 00:00:13.675
使其看起来和这边的效果更像

00:00:13.675 --> 00:00:17.740
首先导入一些组件

00:00:17.739 --> 00:00:21.689
我们将获取 StyleSheet、Platform 以及 TouchableOpacity

00:00:21.690 --> 00:00:26.495
还需要导入 white

00:00:26.495 --> 00:00:29.550
最后 获取 DateHeader 组件

00:00:29.550 --> 00:00:35.320
因为我们将在这里使用该组件

00:00:35.320 --> 00:00:40.605
首先 我们需要创建一些样式

00:00:40.604 --> 00:00:47.164
首先 对特定的某一天设置样式

00:00:47.164 --> 00:00:50.045
在这里输入 style={styles.item}

00:00:50.045 --> 00:00:52.230
称之为 styles.item

00:00:52.229 --> 00:00:54.809
转到这里

00:00:54.810 --> 00:00:56.620
创建一些样式

00:00:56.619 --> 00:00:59.504
将 backgroundColor 设为 white

00:00:59.505 --> 00:01:05.245
输入 borderRadius

00:01:05.245 --> 00:01:08.160
你会发现 对于不同的平台

00:01:08.159 --> 00:01:10.979
borderRadius 是不一样的

00:01:10.980 --> 00:01:13.980
因此 如果位于 iOS 上

00:01:13.980 --> 00:01:19.125
则 borderRadius 为 16 如果不是 则为 2

00:01:19.125 --> 00:01:22.590
然后是一些典型设置 padding 设为 10

00:01:22.590 --> 00:01:26.340
marginLeft 和 marginRight 设为 10

00:01:26.340 --> 00:01:33.870
将 padding 改为 20 marginTop 设为 17

00:01:33.870 --> 00:01:36.810
所有内容在主轴上居中

00:01:36.810 --> 00:01:43.189
添加一些阴影

00:01:43.189 --> 00:01:47.709
shadowRadius 设为 3

00:01:47.709 --> 00:01:53.609
shadowOpacity 设为 0.8

00:01:53.609 --> 00:01:59.192
shadowColor 设为 rgba(0,0,0,0.24)

00:01:59.192 --> 00:02:03.420
然后是一些其他阴影设置

00:02:03.420 --> 00:02:09.670
设置 shadowOffset width 为 0 height 为 3

00:02:09.669 --> 00:02:12.879
看起来不错

00:02:12.879 --> 00:02:17.650
刚发现没有为这个设置键

00:02:17.650 --> 00:02:23.670
将所有这些设置放在 item 里面

00:02:23.669 --> 00:02:27.429
看看应用效果 很棒！

00:02:27.430 --> 00:02:30.375
这里已经有了一些样式

00:02:30.375 --> 00:02:36.884
现在 对这里的代码进行更改

00:02:36.884 --> 00:02:40.989
我们要进行的设置是

00:02:40.990 --> 00:02:44.275
如果是 today

00:02:44.275 --> 00:02:48.670
则显示该 View

00:02:48.669 --> 00:02:53.394
在此 View 中显示 DateHeader

00:02:53.395 --> 00:02:58.284
date 将是这个传入的 formattedDate 参数

00:02:58.284 --> 00:03:02.639
在下面输入 Text

00:03:02.639 --> 00:03:10.629
将 style 设为 styles.noDataText

00:03:10.629 --> 00:03:14.275
然后显示 today 所表示的内容

00:03:14.275 --> 00:03:17.980
如果不是 today

00:03:17.979 --> 00:03:23.659
则渲染 touchableOpacity 按钮

00:03:23.659 --> 00:03:27.520
现在传入 onPress

00:03:27.520 --> 00:03:30.730
输入 console.log(Pressed!)

00:03:30.729 --> 00:03:33.969
在这里面

00:03:33.969 --> 00:03:41.050
依然渲染 Text 组件 输入 JSON.stringify(metrics)

00:03:41.050 --> 00:03:46.735
然后快速设置 renderEmptyDate

00:03:46.735 --> 00:03:51.625
在这里输入 style={styles.item}

00:03:51.625 --> 00:03:54.254
和上面的一样

00:03:54.254 --> 00:03:58.299
然后显示 DateHeader

00:03:58.300 --> 00:04:03.465
date 设为我们传入的这个 formattedDate

00:04:03.465 --> 00:04:09.950
然后渲染 Text

00:04:09.949 --> 00:04:13.000
就像在上面一样 输入 styles.noDataText

00:04:13.000 --> 00:04:17.470
然后输出文本“You didn't log any data on this day”

00:04:17.470 --> 00:04:19.960
最后一个任务是

00:04:19.959 --> 00:04:24.055
填写 styles.noDataText

00:04:24.055 --> 00:04:27.689
转到下面

00:04:27.689 --> 00:04:35.529
将 fontSize 设为 20 paddingTop 设为 20 paddingBottom 也设为 20

00:04:35.529 --> 00:04:38.649
现在看看应用效果

00:04:38.649 --> 00:04:42.129
选择这一天

00:04:42.129 --> 00:04:45.750
这里提示你没有记录任何数据

00:04:45.750 --> 00:04:50.274
这个日期的确记录了数据 但是尚未设置样式；这一天没有记录任何数据

00:04:50.274 --> 00:04:52.000
这是今天的信息

