WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.830
现在我们终于可以设定应用样式了

00:00:03.830 --> 00:00:06.230
我们将回去对一开始没有设定样式的组件

00:00:06.230 --> 00:00:09.950
进行样式设置

00:00:09.949 --> 00:00:11.619
可以采取几种不同的方式来设定样式

00:00:11.619 --> 00:00:15.364
如果你能熟练创建 flexbox 或者想要挑战下

00:00:15.365 --> 00:00:17.109
可以自己尝试一下

00:00:17.109 --> 00:00:19.234
尝试之后 可以回来看看我的步骤

00:00:19.234 --> 00:00:21.439
或者跳过整个视频

00:00:21.440 --> 00:00:22.807
如果不太熟练

00:00:22.806 --> 00:00:24.674
可以观看我的步骤

00:00:24.675 --> 00:00:26.210
首先我们将打开 App.js 文件

00:00:26.210 --> 00:00:30.589
在此文件中 我们唯一要设定的样式是

00:00:30.589 --> 00:00:35.210
将此父视图的 flex 设为 1

00:00:35.210 --> 00:00:37.700
这么设置的原因是

00:00:37.700 --> 00:00:40.995
希望此组件占用所有可用空间

00:00:40.994 --> 00:00:46.909
这样的话 任何子组件都将能够展开为整个手机屏幕尺寸

00:00:46.909 --> 00:00:49.519
不这么设置的话 就无法实现这一点

00:00:49.520 --> 00:00:52.670
接着 我们将对

00:00:52.670 --> 00:00:57.679
getMetricMetaInfo 函数中的所有组件设置样式

00:00:57.679 --> 00:01:00.394
转到此处

00:01:00.395 --> 00:01:05.204
导入 StyleSheet 还需要导入一些颜色

00:01:05.204 --> 00:01:08.390
例如 red、orange、blue

00:01:08.390 --> 00:01:12.015
lightPurp 以及 pink

00:01:12.015 --> 00:01:14.564
然后在下面

00:01:14.564 --> 00:01:17.509
创建一些样式

00:01:17.510 --> 00:01:21.840
我们将使用 StyleSheet.create API

00:01:21.840 --> 00:01:24.631
输入 iconContainer

00:01:24.631 --> 00:01:30.659
它将是图标（即这里的视图）的容器

00:01:30.659 --> 00:01:32.390
我们将

00:01:32.390 --> 00:01:34.299
padding 设为 5

00:01:34.299 --> 00:01:36.500
将 borderRadius

00:01:36.500 --> 00:01:38.079
设为 8

00:01:38.079 --> 00:01:41.594
Width 和 height 设为 50

00:01:41.594 --> 00:01:44.870
其中的所有内容

00:01:44.870 --> 00:01:52.895
都沿着主轴和横轴居中

00:01:52.894 --> 00:01:56.959
marginRight 设为 20 像素

00:01:56.959 --> 00:01:58.489
然后

00:01:58.489 --> 00:02:03.709
选中此文件中的所有视图

00:02:03.709 --> 00:02:07.655
为其设定这一 iconContainer 样式

00:02:07.656 --> 00:02:09.694
同时设定其他样式

00:02:09.694 --> 00:02:12.555
我们可以向数组中传入样式

00:02:12.555 --> 00:02:18.890
首先向此组件添加样式 iconContainer

00:02:18.889 --> 00:02:21.784
来自于 styles.iconContainer

00:02:21.784 --> 00:02:24.129
然后让每个组件

00:02:24.129 --> 00:02:27.449
都具有自己的背景颜色

00:02:27.449 --> 00:02:30.264
在这里输入 backgroundColor

00:02:30.264 --> 00:02:33.404
暂时都设为 red

00:02:33.405 --> 00:02:36.985
将跑步的 getIcon

00:02:36.985 --> 00:02:38.975
设为 red

00:02:38.974 --> 00:02:40.909
然后将骑车图标

00:02:40.909 --> 00:02:42.829
设为 orange

00:02:42.830 --> 00:02:45.200
将游泳图标设为 blue

00:02:45.199 --> 00:02:48.560
将睡眠图标设为 lightPurp

00:02:48.560 --> 00:02:51.224
最后一个设为 pink

00:02:51.224 --> 00:02:53.824
我们看看应用界面的显示效果

00:02:53.824 --> 00:02:55.274
似乎有个拼写错误

00:02:55.275 --> 00:03:02.205
在上面的 styles() 中 alignItem 应该为 alignItems

00:03:02.205 --> 00:03:04.243
可以看出一切看起来挺不错的

00:03:04.242 --> 00:03:08.659
但是我们希望实际图标颜色为白色

00:03:08.659 --> 00:03:11.599
而不是黑色

00:03:11.599 --> 00:03:17.164
一开始这么设置是为了在黑色背景中看到这些图标

00:03:17.164 --> 00:03:19.939
我们将 color 改为 white

00:03:19.939 --> 00:03:24.026
我们能将 white 当做变量是因为在这里导入 white 了

00:03:24.026 --> 00:03:27.380
现在可以看到这些图标

00:03:27.379 --> 00:03:30.000
图标本身的颜色是白色

