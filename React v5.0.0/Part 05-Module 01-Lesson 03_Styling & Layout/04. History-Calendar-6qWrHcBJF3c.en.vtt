WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.580
Now that we have all of our calendar information here,

00:00:04.580 --> 00:00:08.050
the next thing we need to do is actually render our calendar.

00:00:08.050 --> 00:00:11.750
So what we can do is, in your terminal,

00:00:11.750 --> 00:00:20.574
go ahead and run yard add and the name of this component is udacifitness-calendar.

00:00:20.574 --> 00:00:23.419
Once that is installed go ahead and restart

00:00:23.420 --> 00:00:28.070
your app and head back over to your History.js file.

00:00:28.070 --> 00:00:31.605
So what we will need is obviously we'll need to import this.

00:00:31.605 --> 00:00:38.210
So we'll say UdaciFitnessCalendar which is coming from what we just barely installed.

00:00:38.210 --> 00:00:41.270
So now what we need to do is instead of

00:00:41.270 --> 00:00:45.108
rendering just a stringified version of this.props,

00:00:45.107 --> 00:00:47.599
what we want to do instead is

00:00:47.600 --> 00:00:50.689
render our calendar and there's some things we need to pass it.

00:00:50.689 --> 00:00:54.754
So first let's go ahead and grab entries,

00:00:54.755 --> 00:00:59.450
which is basically our whole calendar coming off of this.props.

00:00:59.450 --> 00:01:02.975
So UdaciFitnessCalendar takes a few different things,

00:01:02.975 --> 00:01:06.370
takes some items which is just our entries.

00:01:06.370 --> 00:01:13.515
It's going to take a renderItem property as well as a renderEmptyDate property.

00:01:13.515 --> 00:01:15.200
So this one what it's going to do,

00:01:15.200 --> 00:01:20.335
is we're going to pass it a function which is going to return some ui or

00:01:20.335 --> 00:01:22.644
return some JSX that will be rendered

00:01:22.644 --> 00:01:25.685
whenever the calendar is going to render a specific day,

00:01:25.685 --> 00:01:29.390
and if that day is empty then

00:01:29.390 --> 00:01:31.400
whatever JSX is returned from

00:01:31.400 --> 00:01:34.200
this function we passed to renderEmptyDate is going to be rendered.

00:01:34.200 --> 00:01:36.200
So let's go ahead and look at what that looks like.

00:01:36.200 --> 00:01:38.810
So for a renderItem we'll just create a method

00:01:38.810 --> 00:01:41.734
called the renderItem and for renderEmptyDate,

00:01:41.734 --> 00:01:44.840
we will create, as you can probably guess,

00:01:44.840 --> 00:01:47.710
a method call renderEmptyDate.

00:01:47.709 --> 00:01:52.909
So first let's say renderItem and what this is going to do,

00:01:52.909 --> 00:01:58.969
is it's going to pass an object which has a today property as well as all of our metrics.

00:01:58.969 --> 00:02:04.246
So what this item is going to be is it's either going to be,

00:02:04.246 --> 00:02:07.400
let's say something, let's to go to add entry.

00:02:07.400 --> 00:02:12.310
It's going to look like this or it's going to look,

00:02:12.310 --> 00:02:14.805
let's go to our helpers,

00:02:14.805 --> 00:02:18.379
or it's going to look like this depending

00:02:18.379 --> 00:02:23.109
on whatever's in our redux state for that specific day.

00:02:23.110 --> 00:02:28.550
So really this is just going to be the day coming from our redux store.

00:02:28.550 --> 00:02:33.320
The next item, we're going to get a formattedDate and then we will get a key.

00:02:33.319 --> 00:02:35.254
So what we want to do here,

00:02:35.254 --> 00:02:41.664
let's change these into parentheses so we get that implicit return.

00:02:41.664 --> 00:02:46.669
So we will say view, and then we will say if today is a thing,

00:02:46.669 --> 00:02:50.030
so we haven't entered our information for today,

00:02:50.030 --> 00:02:53.914
we'll just use JSON.stringify again,

00:02:53.914 --> 00:02:57.530
passing in today and if today is not

00:02:57.530 --> 00:03:02.405
a thing then that means this is a previous day where we have entered in information.

00:03:02.405 --> 00:03:05.360
So we will just pass in metrics.

00:03:05.360 --> 00:03:08.390
So that's all renderItem is going to do for right now.

00:03:08.389 --> 00:03:13.069
Next, we will have renderEmptyDate which is going to be

00:03:13.069 --> 00:03:19.025
called if the specific item in our redux date for that day is null.

00:03:19.025 --> 00:03:22.789
So what we'll do this is also going to be passed a formattedDate,

00:03:22.789 --> 00:03:27.229
and we don't need to make this an arrow function because we're not using this queue,

00:03:27.229 --> 00:03:29.409
we're inside of it, so we can take that off.

00:03:29.409 --> 00:03:32.824
And what we're going to do here is let's just return a view

00:03:32.824 --> 00:03:37.544
which has a view as I just mentioned.

00:03:37.544 --> 00:03:41.264
And we will just say no data for this day.

00:03:41.264 --> 00:03:44.594
All right. So this looks pretty good now.

00:03:44.594 --> 00:03:46.625
So when the calendar renders,

00:03:46.625 --> 00:03:50.150
if we've entered in information for this specific day,

00:03:50.150 --> 00:03:52.939
we'll get this ui right here and if we haven't,

00:03:52.939 --> 00:03:54.229
then we will get this ui.

00:03:54.229 --> 00:03:57.893
And what we can actually do is because we are just rendering this component,

00:03:57.893 --> 00:04:01.724
there's no need to have this view component right here.

00:04:01.724 --> 00:04:05.014
So let's fix this indentation real quick

00:04:05.014 --> 00:04:09.349
and then now what I want to do is app.js right here.

00:04:09.349 --> 00:04:12.439
I'm just going to add a view.

00:04:12.439 --> 00:04:16.194
We'll say height of 20 just to get that status bar out of the way for now,

00:04:16.194 --> 00:04:19.110
eventually we'll replace this with an actual status bar,

00:04:19.110 --> 00:04:21.199
but for now this view will work.

00:04:21.199 --> 00:04:26.629
So now if we refresh this,

00:04:26.629 --> 00:04:31.125
what we should see is now we have our calendar here.

00:04:31.125 --> 00:04:33.889
And if we select a day,

00:04:33.889 --> 00:04:37.584
you'll notice that we get all of the days starting at the day we

00:04:37.584 --> 00:04:41.269
selected on as well as the information for that day,

00:04:41.269 --> 00:04:43.879
or if there is no information for that day,

00:04:43.879 --> 00:04:47.000
then we get no data for this day.

