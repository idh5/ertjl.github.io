WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.350
我们一直都提到无论是 iOS 还是 Android 平台

00:00:03.350 --> 00:00:06.320
每个平台都具有自己的独特外观

00:00:06.320 --> 00:00:08.405
和独特样式

00:00:08.404 --> 00:00:09.919
在构建应用时

00:00:09.919 --> 00:00:12.195
请务必记住这一点

00:00:12.195 --> 00:00:16.365
举个例子 之前构建图标时

00:00:16.364 --> 00:00:19.264
我搜索了披萨图标

00:00:19.265 --> 00:00:23.410
我们使用的披萨图标是 iOS 版

00:00:23.410 --> 00:00:25.969
现在你可以看到几种不同的披萨图标

00:00:25.969 --> 00:00:27.529
这个明显是 iOS 版本

00:00:27.530 --> 00:00:32.950
这是 md-pizza 即 Material Design 版本

00:00:32.950 --> 00:00:40.530
在 Android 设备上肯定不能使用 iOS 披萨图标

00:00:40.530 --> 00:00:42.020
我们应该使用

00:00:42.020 --> 00:00:45.700
Material Design 披萨图标

00:00:45.700 --> 00:00:48.035
如果你让用户使用这个图标

00:00:48.034 --> 00:00:53.329
他们可能觉得在 Android 设备上使用 iOS 披萨图标很奇怪

00:00:53.329 --> 00:00:58.789
他们希望自己的体验更加 Android 化 更加符合 Material Design 设计风格

00:00:58.789 --> 00:01:03.598
解决方案是使用 React Native 的 Platform 属性

00:01:03.598 --> 00:01:08.884
我们可以在这里面输入如果

00:01:08.885 --> 00:01:16.475
Platform.OS === ‘ios’ 则显示 ios-pizza 图标

00:01:16.474 --> 00:01:19.579
如果不等于 ‘iOS’ 则表明是 Android 平台

00:01:19.579 --> 00:01:25.769
我们将显示 md-pizza 图标

00:01:25.769 --> 00:01:28.944
现在 当我们刷新应用时

00:01:28.944 --> 00:01:33.634
不同的平台具有不同的披萨图标

00:01:33.635 --> 00:01:40.670
因为我们使用 Platform.OS 检测我们位于哪个平台上

00:01:40.670 --> 00:01:44.644
我们也可以对样式执行相同的操作

00:01:44.644 --> 00:01:48.429
假设这些是 stylesheet 类名称

00:01:48.430 --> 00:01:52.370
可以表示如果位于 iOS 平台上 则应用 iOS 按钮

00:01:52.370 --> 00:01:56.000
如果不是 则应用 Android 按钮

