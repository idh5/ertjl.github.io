WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.879
So now, we have successfully built out all of

00:00:02.879 --> 00:00:05.400
the individual screens inside our application.

00:00:05.400 --> 00:00:07.679
The next thing and the last thing we need to do,

00:00:07.679 --> 00:00:10.050
is add React router so that we can dynamically change

00:00:10.050 --> 00:00:12.935
what component is being rendered based on the URL.

00:00:12.935 --> 00:00:15.794
So, the first thing we'll do is let's head over to our console

00:00:15.794 --> 00:00:20.320
and we want to yarn add react-router-dom.

00:00:21.260 --> 00:00:24.480
Then, once that's installed go ahead and run yarn

00:00:24.480 --> 00:00:29.750
start and let's head over to our main app.js file here.

00:00:29.750 --> 00:00:33.380
So, what we want to do is you'll notice in the final app we have

00:00:33.380 --> 00:00:37.100
this nav bar up here so I'm going to create a new file called nav.js,

00:00:37.100 --> 00:00:39.170
and I'm just going to paste this one in because there's

00:00:39.170 --> 00:00:41.660
nothing here that you're going to learn that's new.

00:00:41.659 --> 00:00:43.699
All we're rendering are a few NavLinks,

00:00:43.700 --> 00:00:47.015
one that takes us to home and one that takes us to "/new".

00:00:47.015 --> 00:00:49.009
So now, inside of app.js,

00:00:49.009 --> 00:00:52.729
what we can do is import that.

00:00:53.270 --> 00:00:58.580
We also want to import a few other things specifically related to react router.

00:00:58.579 --> 00:01:01.859
So, we will grab BrowserRouter.

00:01:01.859 --> 00:01:07.579
We will rename it router and then we will also grab route coming from react-router-dom.

00:01:07.579 --> 00:01:11.109
Then we also want to grab fragment coming from react.

00:01:11.109 --> 00:01:12.474
The reason we want to do that,

00:01:12.474 --> 00:01:14.625
is because now what we need to do,

00:01:14.625 --> 00:01:20.500
is we want to wrap everything inside of our router.

00:01:20.500 --> 00:01:24.715
Now, instead of rendering an individual component,

00:01:24.715 --> 00:01:30.650
what we want to do is render some routes. So, let's have a div here.

00:01:30.650 --> 00:01:31.950
Inside of this div,

00:01:31.950 --> 00:01:33.900
what we will have is our first route.

00:01:33.900 --> 00:01:36.870
So, when we are on the slash or the home view,

00:01:36.870 --> 00:01:39.790
this will match exactly the component we want to render.

00:01:39.790 --> 00:01:43.880
It's going to be our dashboard component when we are

00:01:43.879 --> 00:01:48.375
on "/tweet" with a URL parameter of whatever the tweet ideas,

00:01:48.375 --> 00:01:53.215
we want to render the tweet page component.

00:01:53.215 --> 00:01:55.995
Then finally, when we're on "/new",

00:01:55.995 --> 00:02:00.439
the component we want to be rendered is going to be the new tweet component.

00:02:00.439 --> 00:02:02.929
So, that looks good now what we can do is let's

00:02:02.930 --> 00:02:06.240
also not forget to render our nav bar that we created,

00:02:06.239 --> 00:02:14.349
and then we want to wrap all of this inside of a div with a class name of container.

00:02:14.349 --> 00:02:20.609
But right now, if we were to run this what you would notice is

00:02:20.610 --> 00:02:22.400
when we hit "Refresh" notice that

00:02:22.400 --> 00:02:27.635
our loading bar is stuck inside of our main container here.

00:02:27.634 --> 00:02:32.829
So, what we want to do is we want to be able to move this up, something like that.

00:02:32.830 --> 00:02:36.469
But now, what's going to happen is we're going to get an error because we need to pass

00:02:36.469 --> 00:02:40.109
a single child element as the child to router.

00:02:40.110 --> 00:02:43.630
Right now, where you're passing at a loading bar as well as a div.

00:02:43.629 --> 00:02:45.829
So, what we can do here, and this is why we

00:02:45.830 --> 00:02:49.300
installed fragment earlier and why we imported it,

00:02:49.300 --> 00:02:52.939
is we can wrap everything inside of fragment.

00:02:52.939 --> 00:02:55.879
Typically, what you would do is you would do like a div here

00:02:55.879 --> 00:02:59.699
but that would add an extra div to the dom and we don't want to do that,

00:02:59.699 --> 00:03:03.560
so we can use fragment which will allow us to pass a single child to

00:03:03.560 --> 00:03:09.495
react routers router components but it won't actually add any other elements to the dom.

00:03:09.495 --> 00:03:16.724
So now, what we should be able to do inside of our app is we can navigate around.

00:03:16.724 --> 00:03:20.609
But there are two other places where we want to add a router functionality.

00:03:20.610 --> 00:03:23.180
If you remember, when we compose a new tweet,

00:03:23.180 --> 00:03:25.270
we want to be taken back to the home view.

00:03:25.270 --> 00:03:28.050
Right now, inside of our new tweet component,

00:03:28.050 --> 00:03:30.439
all we do is we say, "Hey,

00:03:30.439 --> 00:03:34.550
this is a thing we need to do when the form is submitted,

00:03:34.550 --> 00:03:37.580
or when the new tweet is submitted go ahead and redirect back to slash."

00:03:37.580 --> 00:03:41.180
So, what we'll do is let's come up here and

00:03:41.180 --> 00:03:46.060
import the redirect component coming from react-router-dom.

00:03:46.060 --> 00:03:50.509
We're going to add a new property to our state called,

00:03:50.509 --> 00:03:56.840
"toHome" When we submit or when our handle submit method runs,

00:03:56.840 --> 00:03:59.360
instead of just resetting text to an empty string,

00:03:59.360 --> 00:04:04.580
what we also want to do is update toHome and right now,

00:04:04.580 --> 00:04:07.360
if you remember, we have the ability to reply to a tweet.

00:04:07.360 --> 00:04:12.385
So, our functionality is that if we are replying to a tweet,

00:04:12.384 --> 00:04:14.799
then we don't want to be taken to the home view,

00:04:14.800 --> 00:04:16.579
instead we just want to stay on this view,

00:04:16.579 --> 00:04:17.949
so we can see the reply here.

00:04:17.949 --> 00:04:20.170
But if we are composing our new tweet,

00:04:20.170 --> 00:04:21.390
then we want to be taken to home.

00:04:21.389 --> 00:04:24.709
So, what we can do is we can say if ID is a thing,

00:04:24.709 --> 00:04:26.120
then toHome is going to be false.

00:04:26.120 --> 00:04:29.014
If not, then toHome is going to be true.

00:04:29.014 --> 00:04:31.909
Now that we have our toHome property on our state,

00:04:31.910 --> 00:04:35.910
what we can do is inside of our render method,

00:04:35.910 --> 00:04:39.525
let's first grab toHome off of our state.

00:04:39.524 --> 00:04:44.389
If toHome equals true then instead of rendering some UI what we

00:04:44.389 --> 00:04:49.125
want to render is our redirect component and where do we want to go,

00:04:49.125 --> 00:04:51.410
we want to go to the 'Home' view.

00:04:51.410 --> 00:04:55.385
So, now what should happen is when we create

00:04:55.384 --> 00:04:59.300
a new tweet instead of staying on the /new page,

00:04:59.300 --> 00:05:01.050
we get taken to the home view,

00:05:01.050 --> 00:05:03.145
and then our UI updates,

00:05:03.144 --> 00:05:04.714
and we see the brand new tweet there.

00:05:04.714 --> 00:05:09.589
Now, the only other functionality we need to add with react router is we need to be

00:05:09.589 --> 00:05:14.269
able to click on all of these different tweets to be taken to the tweet page.

00:05:14.269 --> 00:05:19.500
So, we can do that inside of our tweet.js component.

00:05:19.500 --> 00:05:24.250
So first, let's import link from react-router-dom.

00:05:24.250 --> 00:05:28.449
Then what we want to do is instead of rendering a div here,

00:05:28.449 --> 00:05:31.110
we actually want to render the link component.

00:05:31.110 --> 00:05:34.085
So, we will change out that div for a link.

00:05:34.084 --> 00:05:38.089
Now, when the user clicks on this link,

00:05:38.089 --> 00:05:39.854
where do we want them to be taken to?

00:05:39.855 --> 00:05:46.069
Well, we want them to be taken to /tweet/ whatever the tweet ID is.

00:05:46.069 --> 00:05:50.629
So now, we'll notice here ID is not defined,

00:05:50.629 --> 00:05:55.500
that's because we need to grab that from our tweets.

00:05:55.500 --> 00:05:58.560
So now, if we click on a link,

00:05:58.560 --> 00:06:00.795
notice that we get taken to the tweet page.

00:06:00.795 --> 00:06:03.180
But another feature that we want to add here,

00:06:03.180 --> 00:06:06.040
is you'll remember this right here is a button.

00:06:06.040 --> 00:06:08.379
So if they click on this button right here,

00:06:08.379 --> 00:06:12.105
we want them to be taken to the tweet that they were replying to,

00:06:12.105 --> 00:06:15.975
which we have already set up a function to do that right here.

00:06:15.975 --> 00:06:19.250
So, inside of toParent, what we want to do,

00:06:19.250 --> 00:06:25.259
is we want to tell react-router that we want to go to tweet/ this new ID.

00:06:25.259 --> 00:06:26.870
Typically, the way that you would do that

00:06:26.870 --> 00:06:32.129
the non-declarative way is by doing this.props.history.push,

00:06:32.129 --> 00:06:40.009
and then we can say tweet/ the ID we are replying to.

00:06:40.009 --> 00:06:41.534
But the problem here is,

00:06:41.535 --> 00:06:44.435
our tweet component isn't being rendered by react router.

00:06:44.435 --> 00:06:47.615
So, we're not being passed this.props.history.

00:06:47.615 --> 00:06:54.170
So, what we can do is we can import the width router higher-order component and then now

00:06:54.170 --> 00:07:00.845
what we're going to export is we're just going to wrap all of this in withRouter.

00:07:00.845 --> 00:07:02.945
So, what that's going to do is it's going to pass

00:07:02.944 --> 00:07:06.409
our connected component which will then pass our tweet component all of

00:07:06.410 --> 00:07:12.295
the router props which will allow us to do this.props.history.push.

00:07:12.295 --> 00:07:15.270
So now, what we should see inside of our app,

00:07:15.269 --> 00:07:20.060
is let's come down here and click on "Replying to",

00:07:20.060 --> 00:07:22.819
and now we get taken to the tweet that Dan

00:07:22.819 --> 00:07:26.709
was under originally replying to which was my tweet right here.

