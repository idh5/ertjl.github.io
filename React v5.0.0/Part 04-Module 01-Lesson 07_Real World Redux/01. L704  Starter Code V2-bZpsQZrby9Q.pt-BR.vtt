WEBVTT
Kind: captions
Language: pt-BR

00:00:00.033 --> 00:00:04.371
Se você executar o aplicativo,
você deve ver nosso código inicial.

00:00:04.404 --> 00:00:08.475
Neste vídeo, faremos o passo a passo
do código que foi dado a você.

00:00:08.508 --> 00:00:11.211
É só um aplicativo criado
com o Create React App,

00:00:11.244 --> 00:00:13.046
então deve ser familiar
para você.

00:00:13.079 --> 00:00:14.647
Do arquivo index.js,

00:00:14.681 --> 00:00:17.650
vamos pegar App
e ReactDOM.render

00:00:17.684 --> 00:00:19.652
para fazer a renderização
da visualização.

00:00:19.686 --> 00:00:24.124
Nossa pasta de componentes
só tem um arquivo app.js simples

00:00:24.157 --> 00:00:25.658
que tem um Starter Code.

00:00:25.692 --> 00:00:30.230
E note que nós te oferecemos
vários estilos.

00:00:30.263 --> 00:00:35.268
Estes são estilos aos quais farei
referências pelo resto do curso.

00:00:35.301 --> 00:00:38.204
Se quiser,
pode criar seus próprios estilos.

00:00:38.238 --> 00:00:41.708
Mas, como este não é
necessariamente um curso de estilo,

00:00:41.741 --> 00:00:45.512
eu vou falar das classes
e dos arquivos .css.

00:00:45.545 --> 00:00:48.348
O código mais interessante
que foi dado a você

00:00:48.381 --> 00:00:51.885
está dentro desta pasta
utils aqui.

00:00:51.918 --> 00:00:54.254
Tipicamente, quando se lida
com Redux...

00:00:54.287 --> 00:00:55.889
Sempre que você lida
com Redux,

00:00:55.922 --> 00:00:58.391
os seus dados vão ser
assíncronos.

00:00:58.425 --> 00:01:00.927
Significa que vivem
em algum banco de dados.

00:01:00.960 --> 00:01:03.229
Por não querermos ter
que configurar

00:01:03.263 --> 00:01:05.331
um servidor e base de dados
para este curso,

00:01:05.365 --> 00:01:09.135
nós criamos
este arquivo _DATA.js,

00:01:09.169 --> 00:01:11.137
e ele representa nossa base
de dados falsa.

00:01:11.171 --> 00:01:14.674
Temos usuários, vários tuítes

00:01:14.708 --> 00:01:18.230
e, aqui embaixo,
temos métodos

00:01:18.231 --> 00:01:21.047
para acessar os dados.

00:01:21.081 --> 00:01:22.816
Então você nunca interage

00:01:22.849 --> 00:01:24.751
com este arquivo _DATA.js
diretamente,

00:01:24.784 --> 00:01:28.488
porque você usa
este arquivo api.js

00:01:28.521 --> 00:01:29.989
para interagir
com a base de dados.

00:01:30.023 --> 00:01:32.692
Este é um arquivo API
que foi dado a você.

00:01:32.726 --> 00:01:34.627
Se você quiser interagir
com o servidor,

00:01:34.661 --> 00:01:36.429
que interage
com a base de dados,

00:01:36.463 --> 00:01:38.665
você usa estes métodos aqui.

00:01:38.698 --> 00:01:39.933
Temos o getInitialData,

00:01:39.966 --> 00:01:43.937
que é responsável por receber
os dados iniciais do aplicativo,

00:01:43.970 --> 00:01:45.905
depois usamos getUsers
e getTweets

00:01:45.939 --> 00:01:50.243
e retornamos um objeto
que tem as duas propriedades.

00:01:50.276 --> 00:01:53.313
Também podemos alternar
o botão curtir de um tuíte,

00:01:53.346 --> 00:01:55.515
usando este método aqui.

00:01:55.548 --> 00:01:58.284
E também queremos salvar
um tuíte.

00:01:58.318 --> 00:02:02.622
Por não querermos configurar
um servidor e uma base de dados,

00:02:02.655 --> 00:02:04.524
nós vamos simular isso.

00:02:04.557 --> 00:02:07.427
E, para interagir
com a nossa base de dados falsa,

00:02:07.460 --> 00:02:11.131
você usa estas funções aqui.

00:02:11.164 --> 00:02:13.800
O último arquivo que você recebeu
foi helpers.js.

00:02:13.833 --> 00:02:15.869
O nome é autoexplicativo.

00:02:15.902 --> 00:02:18.071
Queremos um jeito
de formatar a data,

00:02:18.104 --> 00:02:21.174
então ele vai conter o timestamp,
formatar a data

00:02:21.207 --> 00:02:23.209
e retornar
o timestamp formatado.

00:02:23.243 --> 00:02:24.577
E o formatTweet,

00:02:24.611 --> 00:02:27.914
que contém várias informações
sobre um novo tuíte

00:02:27.947 --> 00:02:32.385
e o formata de um jeito que funcione
para a nossa Store Redux.

00:02:32.419 --> 00:02:36.790
Depois veremos porque as coisas são
configuradas assim,

00:02:36.823 --> 00:02:39.159
já que vamos estruturar
nossa Store Redux.

00:02:39.192 --> 00:02:41.327
Mas saiba que,
se quer formatar um tuíte,

00:02:41.361 --> 00:02:44.698
você usa a função formatTweet.

00:02:44.731 --> 00:02:48.134
Se você ainda está curioso
sobre o código que foi dado a você,

00:02:48.168 --> 00:02:53.707
explore o arquivo _DATA.js
e o arquivo api.js.

00:02:53.740 --> 00:02:55.375
No próximo vídeo,

00:02:55.408 --> 00:02:58.478
nós vamos configurar
algumas ações responsáveis

00:02:58.511 --> 00:03:01.548
por buscar os dados iniciais
do nosso aplicativo.

