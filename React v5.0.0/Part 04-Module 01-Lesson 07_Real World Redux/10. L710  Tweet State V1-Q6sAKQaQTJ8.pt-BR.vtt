WEBVTT
Kind: captions
Language: pt-BR

00:00:00.170 --> 00:00:05.282
Agora que temos uma lista das IDs
dos tuítes que renderizaremos,

00:00:05.324 --> 00:00:10.036
o próximo passo será
construir o componente Tweet,

00:00:10.078 --> 00:00:14.675
para podermos passar uma ID
e renderizar

00:00:14.717 --> 00:00:17.450
cada tuíte.

00:00:17.492 --> 00:00:20.715
Primeiro, como sempre fazemos
na construção de um componente,

00:00:20.757 --> 00:00:23.634
precisamos criar um arquivo
para ele.

00:00:23.676 --> 00:00:26.537
Vamos criar
um arquivo Tweet.js

00:00:26.579 --> 00:00:29.586
e vamos importar React
e Component

00:00:29.628 --> 00:00:32.721
diretamente da biblioteca react.

00:00:32.763 --> 00:00:36.859
Também conectaremos este componente,
então pegaremos connect,

00:00:36.901 --> 00:00:39.209
que vem do react-redux.

00:00:39.251 --> 00:00:42.642
Vamos construir a nossa classe.
Teremos Tweet,

00:00:42.684 --> 00:00:45.091
que estenderá o componente.

00:00:45.931 --> 00:00:48.147
Daremos a ela
um método render.

00:00:50.195 --> 00:00:55.354
Retornaremos um div,
cujo className será tweet,

00:00:55.396 --> 00:01:00.853
e exportaremos
o componente Connected.

00:01:00.895 --> 00:01:05.644
Então podemos invocar connect
passando o componente Tweet.

00:01:05.686 --> 00:01:09.282
Agora, como sempre, quando
conectamos um componente

00:01:09.324 --> 00:01:10.939
ao estado Redux,

00:01:10.981 --> 00:01:12.890
é bom perguntar

00:01:12.932 --> 00:01:16.570
de qual estado
o componente precisa

00:01:16.612 --> 00:01:18.674
da Store Redux.

00:01:18.716 --> 00:01:21.450
Nós pegaremos authedUser,

00:01:22.395 --> 00:01:25.508
além de todos os usuários
e os tuítes

00:01:25.550 --> 00:01:27.626
que vêm do estado da Store.

00:01:27.668 --> 00:01:29.178
Com mapStateToProps,

00:01:29.220 --> 00:01:32.905
se passarmos ao componente
que estamos renderizando

00:01:32.947 --> 00:01:34.109
uma propriedade,

00:01:34.151 --> 00:01:36.299
isso virá aqui
como segundo argumento.

00:01:36.341 --> 00:01:39.450
Então nós passaremos uma id.

00:01:39.492 --> 00:01:43.499
Quais informações queremos passar
do estado da Store Redux

00:01:43.541 --> 00:01:47.371
para o componente Tweet?
Sabemos que fornecemos a ID,

00:01:47.413 --> 00:01:51.915
porque, quando renderizamos,
o componente passa a ID do tuíte.

00:01:51.957 --> 00:01:54.581
Então,
para obtermos o tuíte,

00:01:54.623 --> 00:01:59.109
podemos vir aqui
e dizer "tweets[id]".

00:01:59.151 --> 00:02:04.571
Agora, podemos passar qualquer coisa
ao componente Tweet,

00:02:04.613 --> 00:02:06.979
então passaremos
o usuário autenticado.

00:02:07.021 --> 00:02:09.482
Assim, sempre que gostarmos
de um tuíte

00:02:09.524 --> 00:02:14.963
ou respondermos a um tuíte,
saberemos quem é o usuário.

00:02:15.005 --> 00:02:18.308
Também queremos passar
o próprio tuíte,

00:02:18.917 --> 00:02:21.200
mas, antes disso,

00:02:21.242 --> 00:02:23.598
formatar o tuíte.

00:02:23.640 --> 00:02:26.533
Dentro...

00:02:28.277 --> 00:02:30.461
do arquivo helpers,

00:02:30.503 --> 00:02:32.069
na pasta utils,

00:02:32.684 --> 00:02:34.883
há uma função
chamada "formatTweet"

00:02:34.925 --> 00:02:36.772
que...

00:02:37.373 --> 00:02:42.144
pega o tuíte, o autor do tuíte,
o usuário e, se houver,

00:02:42.186 --> 00:02:46.784
o tuíte pai, e cria um objeto
parecido com este.

00:02:46.826 --> 00:02:52.012
Então aqui, como desejamos obter
o tuíte formatado,

00:02:52.054 --> 00:02:56.785
passaremos a ele o próprio tuíte,
o usuário que criou o tuíte,

00:02:56.827 --> 00:03:00.657
que obtemos dizendo
"users[tweet.author]",

00:03:00.699 --> 00:03:04.392
e o usuário autenticado.

00:03:04.434 --> 00:03:08.153
Agora vamos até aqui em cima

00:03:08.195 --> 00:03:11.472
e, quando renderizamos,

00:03:11.514 --> 00:03:14.024
realizamos
o console.log(this.props)

00:03:14.066 --> 00:03:16.446
para vermos que isto
está funcionando.

00:03:16.488 --> 00:03:19.614
Precisamos ligar
a função mapStateToProps

00:03:19.656 --> 00:03:21.791
dentro da invocação connect.

00:03:21.833 --> 00:03:27.609
Dentro do Dashboard,
em vez de só renderizarmos o texto,

00:03:28.370 --> 00:03:31.605
pegaremos o componente Tweet
que acabamos de criar

00:03:31.647 --> 00:03:33.051
e renderizaremos isto

00:03:33.093 --> 00:03:36.962
para vermos se obtemos
os dados corretos.

00:03:37.794 --> 00:03:40.665
Renderizamos Tweet
passando a id.

00:03:40.707 --> 00:03:44.474
Parece que há um erro.

00:03:44.516 --> 00:03:47.204
Isto precisa ser...

00:03:48.787 --> 00:03:50.795
"helpers", e não "helper".

00:03:52.739 --> 00:03:56.394
Agora, no console,
obtemos as informações

00:03:56.436 --> 00:03:59.099
dos tuítes
que renderizaremos.

00:03:59.141 --> 00:04:01.180
Este, por exemplo,
tem um authedUser,

00:04:01.222 --> 00:04:05.242
uma dispatch e uma ID,
além do próprio tuíte.

