WEBVTT
Kind: captions
Language: ko

00:00:00.300 --> 00:00:02.680
먼저 요청이라는 것이 무엇인지부터 알아봅시다

00:00:02.680 --> 00:00:08.690
사실 인터넷을 단순히 메시지를 주고받는
한 무리의 사람들이라고 상상하면 무척 유용합니다

00:00:08.690 --> 00:00:10.840
한 가지 예를 들어보죠
저는 클라이언트가 될 겁니다

00:00:10.840 --> 00:00:14.370
크롬이나 파이어폭스와 같은 브라우저가 되는 거죠

00:00:14.370 --> 00:00:16.239
제시카는 인터넷이 될 겁니다

00:00:16.239 --> 00:00:19.650
제시카는 중개자 역할을 하면서
정보를 앞뒤로 넘겨줍니다

00:00:19.660 --> 00:00:21.550
여기서 벤은 서버입니다

00:00:21.550 --> 00:00:26.050
저와 같은 브라우저에게
정보를 제공해주는 전용 컴퓨터인 거죠

00:00:26.050 --> 00:00:29.750
만약 제가 벤으로부터 무언가를 원한다면
저는 벤에게 요청을 보냅니다

00:00:29.750 --> 00:00:33.310
GET 요청은 벤에게 제가 누구이고
제가 무엇을 원하는지 알려주는 메시지입니다

00:00:33.310 --> 00:00:37.778
저는 메시지를 만들었고
제시카는 이걸 받아서 벤에게 넘겨줍니다

00:00:37.778 --> 00:00:42.520
서버인 벤은 제 메시지를 보고
제가 요청한 것을 되보내줍니다

00:00:42.520 --> 00:00:44.360
이걸 바로 응답이라고 합니다

00:00:45.630 --> 00:00:50.620
저는 응답을 열어서 이걸로 무언가 할 수 있습니다

00:00:50.620 --> 00:00:53.700
웹사이트가 열리기까지
브라우저는 데이터에 대한 수많은 요청을 보냅니다

00:00:53.700 --> 00:00:57.000
벤과 제가 지금 하는 것처럼 말이죠

00:00:57.000 --> 00:01:00.340
대부분의 경우에
응답은 페이지가 로드되기 위해 필수적입니다

00:01:00.340 --> 00:01:01.120
예를 들어

00:01:01.120 --> 00:01:06.010
제가 페이지를 로드하기 위해서는 벤의 HTML이 필요하고
이것을 배치하기 위해서는 또 벤의 CSS가 필요합니다

00:01:06.010 --> 00:01:07.264
감사합니다

00:01:09.503 --> 00:01:12.184
여러분의 브라우저가 동기적으로 요청할 때

00:01:12.184 --> 00:01:17.090
다시 말하자면 AJAX 없이 요청할 때, 브라우저는
로드를 계속하기 전에 먼저 응답을 기다려야 합니다

00:01:17.090 --> 00:01:21.080
AJAX는 이러한 요청을
비동기적으로 처리하기 때문에 특별하죠

00:01:21.080 --> 00:01:25.630
즉, AJAX는 나머지 페이지의 로딩을 막지 않은 채
백그라운드에서 요청들을 처리할 수 있다는 것이죠

00:01:25.630 --> 00:01:28.550
이 비유를 조금 더 발전시켜볼까요

00:01:28.550 --> 00:01:31.160
제가 벤에게 GET 요청을 보낸다고 상상해봅시다

00:01:31.160 --> 00:01:35.720
하지만 저는 응답이 들어왔을 때
어떤 작업을 할지 따로 계획이 있어요

00:01:35.720 --> 00:01:38.970
그래서 저는 요청을 보내고
필요한 작업 명령들을 가져와서

00:01:38.970 --> 00:01:40.550
한쪽에다가 내버려 둡니다

00:01:40.550 --> 00:01:42.730
이 명령들은 인내심 있게 여기서 기다리죠

00:01:42.730 --> 00:01:46.160
저는 이제 자유롭게 다른 작업을 해도 됩니다

00:01:46.160 --> 00:01:50.170
벤의 응답이 최종적으로 돌아왔을 때
저는 응답을 열어봅니다

00:01:50.170 --> 00:01:53.580
그다음 제가 해야 할 작업 명령들을 보고
명령에 따라 응답을 처리하죠

00:01:53.580 --> 00:01:56.660
여기에 제가 따로 둔 명령들을 바로 콜백이라고 합니다

00:01:56.660 --> 00:01:59.301
응답이 돌아왔을 때 제가 호출하기 때문이죠

