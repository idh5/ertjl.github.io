WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.089
虽然我们不会在手机上

00:00:03.089 --> 00:00:06.029
使用任何相机或图片功能

00:00:06.030 --> 00:00:10.324
但是了解下图片使用功能会比较有趣

00:00:10.324 --> 00:00:13.889
尤其是对于 React Native 和 Expo 可以知道使用图片功能多么的简单

00:00:13.890 --> 00:00:16.230
在本视频中

00:00:16.230 --> 00:00:19.155
我们将从手机上的相册中选择一张图片

00:00:19.155 --> 00:00:22.175
然后编辑该图片 并显示在视图中

00:00:22.175 --> 00:00:25.469
我们需要导入一些内容

00:00:25.469 --> 00:00:29.849
首先从 react-native 中导入 ImageEditor

00:00:29.850 --> 00:00:33.495
此外 导入 TouchableOpacity

00:00:33.494 --> 00:00:36.015
明显还需要导入 Image

00:00:36.015 --> 00:00:37.494
看起来不错

00:00:37.494 --> 00:00:39.945
然后从 Expo 中

00:00:39.945 --> 00:00:44.929
导入 ImagePicker

00:00:44.929 --> 00:00:51.015
首先向组件添加一个 image 状态属性

00:00:51.015 --> 00:00:56.579
然后添加 pickImage 方法

00:00:56.579 --> 00:01:01.799
每当该函数运行时

00:01:01.799 --> 00:01:06.859
则调用 ImagePicker.launchImageLibraryAsync

00:01:06.859 --> 00:01:09.329
传入几个不同的设置

00:01:09.329 --> 00:01:13.120
将 allowEditing 设为 true

00:01:13.120 --> 00:01:16.160
从而能够编辑图片 然后将 aspect 设为 2:1

00:01:16.159 --> 00:01:18.899
完毕后

00:01:18.900 --> 00:01:21.725
这里将出现一个结果

00:01:21.724 --> 00:01:26.814
如果 result.cancelled 成立

00:01:26.814 --> 00:01:28.789
则 return

00:01:28.790 --> 00:01:32.370
如果不成立

00:01:32.370 --> 00:01:37.380
则调用 ImageEditor.cropImage

00:01:37.379 --> 00:01:40.229
传入调用 launchImageLibraryAsync 时

00:01:40.230 --> 00:01:45.305
获得的 result 对象的 URI 属性

00:01:45.305 --> 00:01:50.945
向 cropImage 传入的第二个参数是一些设置

00:01:50.944 --> 00:01:54.699
输入 offset: {x: 0, y: 0}

00:01:54.700 --> 00:01:57.609
添加 size

00:01:57.609 --> 00:02:01.000
width 将为 result.width

00:02:01.000 --> 00:02:03.549
height 将为 result.height

00:02:03.549 --> 00:02:10.525
接着 对于 displaySize 将 width 设为 200 height 设为 100

00:02:10.525 --> 00:02:15.254
最后 将 resizeMode 设为 contain

00:02:15.254 --> 00:02:20.109
这些就是传入 cropImage 的第二个参数

00:02:20.110 --> 00:02:27.340
第三个参数是一个函数 它将接收修改后的 URI

00:02:27.340 --> 00:02:30.664
获得该 URI 后 调用 setState

00:02:30.664 --> 00:02:36.234
然后在此处 我们希望此 image 为这个新的 URI

00:02:36.235 --> 00:02:42.915
这个函数调用的最后一个参数

00:02:42.914 --> 00:02:45.289
是另一个函数

00:02:45.289 --> 00:02:50.039
如果出现错误 则暂时记录错误 看起来不错

00:02:50.039 --> 00:02:54.525
pickImage 设置好了 没有看到任何错误

00:02:54.525 --> 00:02:57.689
应用暂时没有出现任何错误

00:02:57.689 --> 00:03:00.030
向下转到 render

00:03:00.030 --> 00:03:03.960
在 render 中

00:03:03.960 --> 00:03:07.647
添加这个可触摸组件

00:03:07.647 --> 00:03:12.194
当它被点击后 我们将运行 this.pickImage

00:03:12.194 --> 00:03:17.659
在 Text 组件中 显示文本“Open Camera Roll”

00:03:17.659 --> 00:03:23.258
最后 我们将在这里输入...

00:03:23.258 --> 00:03:27.375
先在这里从 this.state 中获取 image

00:03:27.375 --> 00:03:31.080
如果 image 成立

00:03:31.080 --> 00:03:35.215
则渲染该图片

00:03:35.215 --> 00:03:41.235
将 style 设为 styles.img 我在下面创建了 img 样式

00:03:41.235 --> 00:03:49.220
提供一个 source URI 将为 image

00:03:49.219 --> 00:03:51.689
现在会发生的情况是

00:03:51.689 --> 00:03:54.599
点击此按钮后打开相册

00:03:54.599 --> 00:03:59.025
然后运行 pickImage 因此打开相册并选择图片

00:03:59.025 --> 00:04:02.580
获得图片之后 按照这些设置对图片进行剪裁

00:04:02.580 --> 00:04:06.735
width 将为 200 height 将为 100

00:04:06.735 --> 00:04:09.855
如果剪裁成功

00:04:09.854 --> 00:04:11.549
我们将该图片添加到本地状态上

00:04:11.550 --> 00:04:16.280
然后将该图片显示到视图上

00:04:16.279 --> 00:04:18.659
看看是否可行

00:04:18.660 --> 00:04:23.075
先打开相册 选择图片

00:04:23.074 --> 00:04:26.000
然后剪裁并显示到视图上 成功了

