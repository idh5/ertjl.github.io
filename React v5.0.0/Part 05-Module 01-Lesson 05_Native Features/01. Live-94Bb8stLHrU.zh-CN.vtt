WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.669
现在 我们将设置一些有趣的界面了

00:00:02.669 --> 00:00:05.189
到目前为止还都没介绍什么有趣的内容

00:00:05.190 --> 00:00:07.740
我们将构建这个视图

00:00:07.740 --> 00:00:11.759
相当于一个实时详情视图

00:00:11.759 --> 00:00:13.349
我们将从手机中获取信息

00:00:13.349 --> 00:00:15.209
并渲染该视图

00:00:15.210 --> 00:00:16.620
它会显示我们正朝着哪个方向前进

00:00:16.620 --> 00:00:18.780
海拔是多少 当前移动速度是多少

00:00:18.780 --> 00:00:21.140
所有这些信息都来自于手机

00:00:21.140 --> 00:00:23.429
因此 我们需要

00:00:23.429 --> 00:00:26.300
使用手机的 API 来获得这些信息

00:00:26.300 --> 00:00:28.650
顺便提醒下 如果你尝试在 Android 模拟器上跟着操作

00:00:28.649 --> 00:00:31.664
可能会因为某些原因而出现故障

00:00:31.664 --> 00:00:34.490
Android 模拟器不能实现我们要执行的操作

00:00:34.490 --> 00:00:39.030
但是如果你在实际设备上使用 Expo 应用 则一切正常

00:00:39.030 --> 00:00:42.105
因此请别使用 Android 模拟器 而是使用 Expo 应用

00:00:42.104 --> 00:00:45.469
或 iOS 模拟器。我们开始吧

00:00:45.469 --> 00:00:47.640
转到此处

00:00:47.640 --> 00:00:51.369
新建一个视图文件 叫做 Live.js

00:00:51.369 --> 00:00:54.719
暂时先导入

00:00:54.719 --> 00:00:59.153
react {Component} 

00:00:59.154 --> 00:01:03.570
然后导入 View、Text 以及 ActivityIndicator

00:01:03.570 --> 00:01:07.459
都来自于 react-native

00:01:07.459 --> 00:01:13.034
然后导出这个扩展自 component 的类

00:01:13.034 --> 00:01:16.379
设定此组件的状态

00:01:16.379 --> 00:01:20.155
包括坐标 暂时设为 null

00:01:20.155 --> 00:01:22.945
还包括 status 也设为 null

00:01:22.944 --> 00:01:27.204
以及 direction 设为空字符串

00:01:27.204 --> 00:01:34.030
我们可以从 this.state 上获取这些信息

00:01:34.030 --> 00:01:37.140
我们将获取几个不同的视图

00:01:37.140 --> 00:01:41.310
具体取决于你所获得的权限

00:01:41.310 --> 00:01:45.564
如果 status === null

00:01:45.564 --> 00:01:48.495
表示用户尚未授予任何权限

00:01:48.495 --> 00:01:50.820
依然保持默认状态

00:01:50.819 --> 00:01:56.024
则渲染 ActivityIndicator

00:01:56.025 --> 00:01:59.160
并将 marginTop 设为 30

00:01:59.159 --> 00:02:02.729
ActivityIndicator 中的内容只是表示正在加载的旋转图标

00:02:02.730 --> 00:02:05.670
你之前见过 它只是在渲染旋转图标

00:02:05.670 --> 00:02:07.200
仿佛在提示系统正在等待中

00:02:07.200 --> 00:02:10.770
如果 status === denied

00:02:10.770 --> 00:02:14.880
表示你请求了权限 但是遭到用户拒绝

00:02:14.879 --> 00:02:22.764
我们暂时渲染一个视图 在其中显示文本“Denied”

00:02:22.764 --> 00:02:35.615
然后我们将执行完全一样的操作

00:02:35.615 --> 00:02:38.254
但是这里的 denied

00:02:38.254 --> 00:02:41.914
将改为 undetermined

00:02:41.914 --> 00:02:44.929
当你在模拟器中操作时

00:02:44.930 --> 00:02:46.790
某些权限会比较卡顿

00:02:46.789 --> 00:02:50.314
因为我们没有在实际设备上操作

00:02:50.314 --> 00:02:53.375
但是可以实现最终目标

00:02:53.375 --> 00:02:57.800
最后 如果不是 denied 或 undetermined

00:02:57.800 --> 00:03:00.020
则表明授予了权限

00:03:00.020 --> 00:03:01.909
我们将

00:03:01.909 --> 00:03:03.355
渲染一个视图

00:03:03.355 --> 00:03:05.329
暂时

00:03:05.330 --> 00:03:08.965
我们将渲染几个文本组件

00:03:08.965 --> 00:03:11.120
暂时显示这个状态

00:03:11.120 --> 00:03:13.849
看起来不错

00:03:13.849 --> 00:03:17.875
我们将这个当做新的标签页添加进来

00:03:17.875 --> 00:03:20.055
转到 App.js

00:03:20.055 --> 00:03:21.800
首先需要导入该组件

00:03:21.800 --> 00:03:25.915
接着 转到 Tabs 中

00:03:25.914 --> 00:03:29.204
添加一个新的属性

00:03:29.205 --> 00:03:30.615
称之为 Live

00:03:30.615 --> 00:03:32.425
就像之前一样

00:03:32.425 --> 00:03:36.210
screen 设为 Live 组件

00:03:36.210 --> 00:03:40.862
添加一些导航选项

00:03:40.862 --> 00:03:43.055
将 tabBarLabel 设为 Live

00:03:43.055 --> 00:03:45.230
然后复制这段代码

00:03:45.229 --> 00:03:49.129
因为我们将使用 Ionicon 字体

00:03:49.129 --> 00:03:56.305
但是将 name 改为 ios-speedometer

00:03:56.305 --> 00:03:58.835
看看是否可行

00:03:58.835 --> 00:04:01.180
转到 Live

00:04:01.180 --> 00:04:02.486
注意 这里出现了旋转指示符

00:04:02.485 --> 00:04:08.704
因为当前 status 设为 null

00:04:08.705 --> 00:04:11.705
我们假设可行

00:04:11.705 --> 00:04:13.670
当然可以设为 denied

00:04:13.669 --> 00:04:15.729
现在应该能在这里看到 denied

00:04:15.729 --> 00:04:17.327
重新设为 null

00:04:17.327 --> 00:04:20.409
我们将在后续视频中继续完善这一部分

