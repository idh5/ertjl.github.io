WEBVTT
Kind: captions
Language: pt-BR

00:00:00.100 --> 00:00:01.933
Não vamos usar

00:00:02.000 --> 00:00:05.833
nada relacionado à câmera
ou a imagens no celular,

00:00:05.867 --> 00:00:10.167
mas seria divertido experimentar
com o uso de imagens,

00:00:10.233 --> 00:00:12.300
principalmente
com React Native e Expo

00:00:12.333 --> 00:00:13.667
para mostrar como é fácil.

00:00:13.733 --> 00:00:14.967
Neste vídeo,

00:00:15.033 --> 00:00:19.100
escolheremos uma imagem
do nosso rolo da câmera,

00:00:19.167 --> 00:00:22.133
a editaremos e a exibiremos.

00:00:22.167 --> 00:00:25.367
Vamos precisar importar
algumas coisas diferentes.

00:00:25.433 --> 00:00:29.600
Primeiro, o ImageEditor,
do React Native.

00:00:29.667 --> 00:00:33.133
Depois,
TouchableOpacity também.

00:00:33.200 --> 00:00:37.267
Por fim, claro, Image.
Muito bem.

00:00:37.300 --> 00:00:41.800
Agora temos de importar,
com o ImagePicker,

00:00:41.833 --> 00:00:44.767
uma imagem do Expo.

00:00:44.833 --> 00:00:46.600
A primeira coisa
que preciso fazer

00:00:46.667 --> 00:00:50.967
é adicionar a propriedade "state"
da imagem ao nosso componente.

00:00:51.033 --> 00:00:56.533
Depois, vamos adicionar
um método "PickImage".

00:00:56.567 --> 00:00:58.433
E o que vamos dizer?

00:00:58.500 --> 00:01:01.533
Que, quando a função
for executada,

00:01:01.600 --> 00:01:06.867
deve-se chamar "ImagePicker.
launchImageLibraryAsync".

00:01:06.900 --> 00:01:10.000
Depois, passaremos algumas
configurações diferentes.

00:01:10.067 --> 00:01:13.133
Habilitar edição, pois queremos
que seja possível editar,

00:01:13.200 --> 00:01:16.100
proporção de tela de 2:1,

00:01:16.167 --> 00:01:18.867
e, quando isso for feito,

00:01:18.900 --> 00:01:21.967
teremos um resultado aqui.

00:01:22.033 --> 00:01:26.500
Agora diremos que,
se "result" for "cancelled",

00:01:26.567 --> 00:01:28.733
então, retorno.

00:01:28.800 --> 00:01:33.067
Caso contrário,
o que nos resta é chamar...

00:01:33.100 --> 00:01:37.233
nosso componente
"ImageEditor.cropImage".

00:01:37.300 --> 00:01:41.700
Nós passaremos a propriedade URI
no objeto que foi retornado

00:01:41.767 --> 00:01:45.267
quando chamarmos
"launchImageLibraryAsync".

00:01:45.300 --> 00:01:48.967
E o segundo argumento
que passaremos para recortar imagens

00:01:49.000 --> 00:01:50.633
são algumas configurações.

00:01:50.667 --> 00:01:54.533
O "offset" será 0
para x e y.

00:01:54.600 --> 00:01:57.467
Vamos adicionar o tamanho.

00:01:57.500 --> 00:02:00.900
Largura será igual
a "result.width",

00:02:00.933 --> 00:02:03.733
e altura será
"result.height".

00:02:03.800 --> 00:02:06.367
Em seguida, tamanho da tela.

00:02:06.400 --> 00:02:10.267
Vamos estabelecer 200 de largura
e 100 de altura.

00:02:10.333 --> 00:02:14.767
Por último,
"resizeMode" será "contain".

00:02:14.800 --> 00:02:20.100
Certo. Esse é o segundo argumento
que passamos ao "cropImage".

00:02:20.167 --> 00:02:24.233
O terceiro argumento
será uma função

00:02:24.267 --> 00:02:27.233
que receberá
o URI modificado.

00:02:27.300 --> 00:02:30.500
Ao obtermos isso,
chamaremos "setState"

00:02:30.567 --> 00:02:32.433
e passaremos

00:02:32.467 --> 00:02:36.100
"image" igual a URI.

00:02:36.133 --> 00:02:39.867
E, por último,
como argumento final

00:02:39.933 --> 00:02:42.800
desta invocação aqui,

00:02:42.833 --> 00:02:45.033
passaremos outra função

00:02:45.100 --> 00:02:49.900
e, caso haja qualquer erro,
daremos "log('Error')".

00:02:49.933 --> 00:02:54.267
Bem, o "pickImage"
parece estar funcionando sem erros.

00:02:54.300 --> 00:02:57.467
O aplicativo também parece
estar livre de erros.

00:02:57.533 --> 00:02:59.967
Vamos descer até "render()".

00:03:00.033 --> 00:03:02.100
Em "render()",

00:03:02.133 --> 00:03:05.933
digamos que tenhamos
este componente "touchable",

00:03:05.967 --> 00:03:09.367
que responderá ao toque

00:03:09.400 --> 00:03:12.167
executando "this.pickImage".

00:03:12.233 --> 00:03:17.567
O texto, aqui dentro, vejamos...
"Open Camera Roll".

00:03:17.600 --> 00:03:19.833
Agora, a última coisa
que precisamos fazer

00:03:19.867 --> 00:03:23.033
é descer até aqui
e dizer "if"...

00:03:23.067 --> 00:03:27.333
Primeiro vamos pegar "image"
lá de "this.state".

00:03:27.367 --> 00:03:30.200
E diremos que,
se existir uma imagem,

00:03:30.233 --> 00:03:35.000
nós vamos renderizá-la.

00:03:35.067 --> 00:03:39.100
O estilo será "styles.img",

00:03:39.133 --> 00:03:41.300
criado aqui embaixo.

00:03:41.333 --> 00:03:45.033
Então, daremos uma fonte

00:03:45.067 --> 00:03:49.067
e o URI será "image".

00:03:49.100 --> 00:03:51.000
O que esperamos que aconteça

00:03:51.067 --> 00:03:54.600
é que o rolo de câmera se abra
após apertarmos este botão,

00:03:54.633 --> 00:03:56.167
que executa "pickImage".

00:03:56.200 --> 00:03:59.033
Então nós abrimos o rolo,
escolhemos a foto

00:03:59.067 --> 00:04:03.300
e, então, a cortamos
com estas configurações.

00:04:03.367 --> 00:04:06.633
Largura de 200,
altura de 100.

00:04:06.700 --> 00:04:09.800
Se o corte for bem-sucedido,

00:04:09.867 --> 00:04:12.800
adicionamos a imagem
ao nosso "localState"

00:04:12.833 --> 00:04:16.167
e, depois, a exibimos.

00:04:16.233 --> 00:04:18.433
Vejamos se está funcionando.

00:04:18.467 --> 00:04:22.867
Primeiro abrimos o rolo
e selecionamos a imagem.

00:04:22.933 --> 00:04:26.100
Depois, cortamos e exibimos.
Aí está.

