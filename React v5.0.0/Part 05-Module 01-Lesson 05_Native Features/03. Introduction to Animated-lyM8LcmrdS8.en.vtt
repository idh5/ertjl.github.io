WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.235
Fluid animations are an essential part of building any native application.

00:00:05.235 --> 00:00:10.179
Because of that, React Native comes with an animated library baked into it.

00:00:10.179 --> 00:00:13.394
It's not surprisingly called animated.

00:00:13.394 --> 00:00:16.390
The goal of Animated is to convey physical,

00:00:16.390 --> 00:00:19.135
believable motion in your UI.

00:00:19.135 --> 00:00:22.765
Animated focuses on declarative relationships between

00:00:22.765 --> 00:00:27.310
inputs and outputs with configurable transforms in between.

00:00:27.309 --> 00:00:29.399
Let's take a look at an example.

00:00:29.399 --> 00:00:32.560
This video is going to be a fun one because we are going to play

00:00:32.560 --> 00:00:36.025
around with React Native's Animated Library.

00:00:36.024 --> 00:00:41.324
Animated, as you can probably imagine is for doing animations inside a React Native App.

00:00:41.325 --> 00:00:46.870
So here, what we have is our component and all we're doing is we have a container,

00:00:46.869 --> 00:00:48.814
and then we are rendering an image.

00:00:48.814 --> 00:00:52.689
So what that looks like on iOS and Android is just this right here.

00:00:52.689 --> 00:00:55.894
So, there are really three types of animations that we can do,

00:00:55.895 --> 00:00:58.465
three main types of animations we can do with Animated.

00:00:58.465 --> 00:01:01.600
Decay, which is going to have an initial velocity,

00:01:01.600 --> 00:01:03.490
and then it's going to slow to a stop.

00:01:03.490 --> 00:01:07.855
Spring, which is going to kind of be like a Spring in physics as you've seen before.

00:01:07.855 --> 00:01:12.275
And then Timing, which is just going to animate a value over time.

00:01:12.275 --> 00:01:13.630
So what we're going to do is,

00:01:13.629 --> 00:01:15.114
I want to go ahead and,

00:01:15.114 --> 00:01:16.854
when our component mounts,

00:01:16.855 --> 00:01:20.829
we are going to animate our image component.

00:01:20.829 --> 00:01:22.929
So the very first thing that you need to realize with

00:01:22.930 --> 00:01:25.570
animations is essentially what you're doing,

00:01:25.569 --> 00:01:28.359
is just like you would with any property.

00:01:28.359 --> 00:01:31.704
We're going to set a property on our state,

00:01:31.704 --> 00:01:33.399
and then animate it,

00:01:33.400 --> 00:01:35.950
it's going to go and change the property on

00:01:35.950 --> 00:01:39.130
our state which will then animate the component.

00:01:39.129 --> 00:01:40.334
Now, that's a little high level,

00:01:40.334 --> 00:01:42.459
so let's go ahead and take a look at what this looks like.

00:01:42.459 --> 00:01:45.309
So here we are sticking an opacity property on our state,

00:01:45.310 --> 00:01:46.795
because what I want to do,

00:01:46.795 --> 00:01:48.460
is when the component mounts,

00:01:48.459 --> 00:01:51.105
I want to slowly fade the image in,

00:01:51.105 --> 00:01:55.079
or slowly take the opacity from zero all the way to one.

00:01:55.079 --> 00:01:56.620
So what we'll do is we will say,

00:01:56.620 --> 00:02:00.965
opacity is going to be a new animated value,

00:02:00.965 --> 00:02:04.255
and it's going to have a default value at zero.

00:02:04.254 --> 00:02:07.179
So we're going to start the opacity at zero.

00:02:07.180 --> 00:02:08.349
Now, what we need to do,

00:02:08.349 --> 00:02:12.889
is we need to make sure that we add this opacity as a style on our image.

00:02:12.889 --> 00:02:15.819
But you can't just use an ordinary image,

00:02:15.819 --> 00:02:19.014
we need to go ahead and say, Animated.Image.

00:02:19.014 --> 00:02:23.529
And now, instead of having just a width and height,

00:02:23.530 --> 00:02:25.435
what we're also going to do,

00:02:25.435 --> 00:02:27.879
is we're going to come in here and say,

00:02:27.879 --> 00:02:32.484
opacity which we are going to grab up here from our state.

00:02:32.485 --> 00:02:34.405
But as you can probably guess,

00:02:34.405 --> 00:02:36.759
if we were to run this right now,

00:02:36.759 --> 00:02:38.649
you'll notice what would happen is,

00:02:38.650 --> 00:02:39.960
we don't have any image anymore.

00:02:39.960 --> 00:02:45.665
That's because we've set the image value to zero right here.

00:02:45.664 --> 00:02:46.974
And then what we're doing,

00:02:46.974 --> 00:02:49.439
is we added that opacity value to our image.

00:02:49.439 --> 00:02:50.859
So as of right now,

00:02:50.860 --> 00:02:53.430
our image just has an opacity of zero,

00:02:53.430 --> 00:02:58.025
but what we actually want to do is animate that when the component mounts as I mentioned.

00:02:58.025 --> 00:02:59.200
So the way we can do that,

00:02:59.199 --> 00:03:01.034
is we can say, componentDidMount,

00:03:01.034 --> 00:03:03.564
and when this component mounts,

00:03:03.564 --> 00:03:07.594
first let's grab the opacity off of these states.

00:03:07.594 --> 00:03:10.960
And now, using Animated's timing method,

00:03:10.960 --> 00:03:14.460
what I want to do is animate the opacity from zero to one,

00:03:14.460 --> 00:03:16.625
taking one whole second.

00:03:16.625 --> 00:03:18.264
So the way we will do that,

00:03:18.264 --> 00:03:19.494
is we will say,

00:03:19.495 --> 00:03:22.265
Animated.timing and invoke it.

00:03:22.264 --> 00:03:26.264
And then the first thing we pass it is the actual value that we want to modify.

00:03:26.264 --> 00:03:28.302
So we want to modify our opacity.

00:03:28.302 --> 00:03:32.590
And then, we pass it an object which has some options on it.

00:03:32.590 --> 00:03:38.075
So we will say, we want to modify opacity to a value of one.

00:03:38.074 --> 00:03:40.444
So we're going to go from zero to one,

00:03:40.444 --> 00:03:44.319
and it's going to take 1,000 milliseconds.

00:03:44.319 --> 00:03:47.459
And then, you need to always be sure to run.start,

00:03:47.460 --> 00:03:49.599
to start the animation.

00:03:49.599 --> 00:03:51.995
So now, what should happen if everything's working?

00:03:51.995 --> 00:03:55.034
You'll notice when our app runs,

00:03:55.034 --> 00:03:59.384
what happens is we get that nice little fade and effect, and it looks great.

00:03:59.384 --> 00:04:01.449
But now, what I want to do is, I actually want to,

00:04:01.449 --> 00:04:02.884
instead of just having a fade in,

00:04:02.884 --> 00:04:05.454
I want to start it out from a width and height of zero,

00:04:05.455 --> 00:04:08.195
and bring it all the way up to the width that it currently is.

00:04:08.194 --> 00:04:10.044
So what we'll do for that,

00:04:10.044 --> 00:04:13.000
is we will use Animated's Spring property.

00:04:13.000 --> 00:04:17.000
So let's add a few more properties to our states.

00:04:17.000 --> 00:04:21.579
We will say, width is going to start at zero as well.

00:04:21.579 --> 00:04:27.479
And then height is going to also be an animated value that starts out at zero.

00:04:27.480 --> 00:04:31.660
And then, let's go ahead and just as we did with opacity, we'll say,

00:04:31.660 --> 00:04:36.800
width and height, and then we will add these as properties here.

00:04:36.800 --> 00:04:39.879
So if I save and look at this,

00:04:39.879 --> 00:04:41.620
what we will see is nothing.

00:04:41.620 --> 00:04:45.540
Because right now, the images have a width and the height of zero.

00:04:45.540 --> 00:04:47.080
So just as I did up here,

00:04:47.079 --> 00:04:52.870
I also want to animate those from zero to a specific value, specifically, 300.

00:04:52.870 --> 00:04:55.877
So what we'll do is we will say, Animated.spring.

00:04:55.877 --> 00:04:57.415
Let's do the width first.

00:04:57.415 --> 00:05:00.118
So we want to modify the width.

00:05:00.119 --> 00:05:03.291
Now, we want to take it from a value of zero to 300.

00:05:03.290 --> 00:05:05.004
And instead of duration,

00:05:05.004 --> 00:05:08.250
because we aren't using timing, we're using spring.

00:05:08.250 --> 00:05:11.139
What we'll do, is we will give it a speed of five.

00:05:11.139 --> 00:05:12.849
This defaults to a speed of 12.

00:05:12.850 --> 00:05:14.905
So a speed of five is a little bit slower.

00:05:14.904 --> 00:05:17.589
And then we will call.start.

00:05:17.589 --> 00:05:22.039
And now, we're going to do that exact same thing but with the height.

00:05:22.040 --> 00:05:24.325
Now if everything is working, what we should see.

00:05:24.324 --> 00:05:26.300
And it is not working.

00:05:26.300 --> 00:05:29.555
That's because we need to grab width and height right here.

00:05:29.555 --> 00:05:31.389
Now if everything is working,

00:05:31.389 --> 00:05:39.099
you'll notice that not only does the image opacity go from zero to one,

00:05:39.100 --> 00:05:45.000
but the image is also going from a width and height of zero all the way to 300.

